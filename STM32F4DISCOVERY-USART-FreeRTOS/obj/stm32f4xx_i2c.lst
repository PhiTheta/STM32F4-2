   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_i2c.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	I2C_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	I2C_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @file    stm32f4xx_i2c.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          functionalities of the Inter-integrated circuit (I2C)
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - Initialization and Configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - Data transfers
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - PEC management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - DMA transfers management
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - Interrupts, events and flags management 
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  @verbatim
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                 How to use this driver
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          ===================================================================
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          1. Enable peripheral clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2Cx, ENABLE)
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             function for I2C1, I2C2 or I2C3.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          2. Enable SDA, SCL  and SMBA (when used) GPIO clocks using 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             RCC_AHBPeriphClockCmd() function. 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          3. Peripherals alternate function: 
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Configure the desired pin in alternate function by:
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Call GPIO_Init() function
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 Recommended configuration is Push-Pull, Pull-up, Open-Drain.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 Add an external pull up if necessary (typically 4.7 KOhm).      
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *        
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          4. Program the Mode, duty cycle , Own address, Ack, Speed and Acknowledged
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             Address using the I2C_Init() function.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          5. Optionally you can enable/configure the following parameters without
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             re-initialization (i.e there is no need to call again I2C_Init() function):
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the acknowledge feature using I2C_AcknowledgeConfig() function
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the dual addressing mode using I2C_DualAddressCmd() function
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the general call using the I2C_GeneralCallCmd() function
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the clock stretching using I2C_StretchClockCmd() function
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the fast mode duty cycle using the I2C_FastModeDutyCycleConfig()
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                function.
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Configure the NACK position for Master Receiver mode in case of 
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                2 bytes reception using the function I2C_NACKPositionConfig().  
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the PEC Calculation using I2C_CalculatePEC() function
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - For SMBus Mode: 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Enable the Address Resolution Protocol (ARP) using I2C_ARPCmd() function
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Configure the SMBusAlert pin using I2C_SMBusAlertConfig() function
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          6. Enable the NVIC and the corresponding interrupt using the function 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             I2C_ITConfig() if you need to use interrupt mode. 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          7. When using the DMA mode 
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Configure the DMA using DMA_Init() function
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Active the needed channel Request using I2C_DMACmd() or
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                     I2C_DMALastTransferCmd() function.
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              @note When using DMA mode, I2C interrupts may be used at the same time to
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                    control the communication flow (Start/Stop/Ack... events and errors).
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          8. Enable the I2C using the I2C_Cmd() function.
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          9. Enable the DMA using the DMA_Cmd() function when using DMA mode in the 
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             transfers. 
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  @endverbatim
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @attention
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************  
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Includes ------------------------------------------------------------------*/
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_i2c.h"
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_rcc.h"
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief I2C driver modules
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private define ------------------------------------------------------------*/
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define CR1_CLEAR_MASK    ((uint16_t)0xFBF5)      /*<! I2C registers Masks */
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define FLAG_MASK         ((uint32_t)0x00FFFFFF)  /*<! I2C FLAG mask */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define ITEN_MASK         ((uint32_t)0x07000000)  /*<! I2C Interrupt Enable mask */
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private macro -------------------------------------------------------------*/
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private variables ---------------------------------------------------------*/
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private functions ---------------------------------------------------------*/
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Private_Functions
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group1 Initialization and Configuration functions
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Initialization and Configuration functions 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                    Initialization and Configuration functions
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Deinitialize the I2Cx peripheral registers to their default reset values.
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DeInit(I2C_TypeDef* I2Cx)
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
  28              		.loc 1 133 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2Cx == I2C1)
  44              		.loc 1 137 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 174B     		ldr	r3, .L5
  47 000c 9A42     		cmp	r2, r3
  48 000e 0AD1     		bne	.L2
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C1 reset state */
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
  49              		.loc 1 140 0
  50 0010 4FF40010 		mov	r0, #2097152
  51 0014 0121     		movs	r1, #1
  52 0016 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);    
  53              		.loc 1 142 0
  54 001a 4FF40010 		mov	r0, #2097152
  55 001e 0021     		movs	r1, #0
  56 0020 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  57 0024 1CE0     		b	.L1
  58              	.L2:
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else if (I2Cx == I2C2)
  59              		.loc 1 144 0
  60 0026 7A68     		ldr	r2, [r7, #4]
  61 0028 104B     		ldr	r3, .L5+4
  62 002a 9A42     		cmp	r2, r3
  63 002c 0AD1     		bne	.L4
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C2 reset state */
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, ENABLE);
  64              		.loc 1 147 0
  65 002e 4FF48000 		mov	r0, #4194304
  66 0032 0121     		movs	r1, #1
  67 0034 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, DISABLE);      
  68              		.loc 1 149 0
  69 0038 4FF48000 		mov	r0, #4194304
  70 003c 0021     		movs	r1, #0
  71 003e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  72 0042 0DE0     		b	.L1
  73              	.L4:
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else 
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2Cx == I2C3)
  74              		.loc 1 153 0
  75 0044 7A68     		ldr	r2, [r7, #4]
  76 0046 0A4B     		ldr	r3, .L5+8
  77 0048 9A42     		cmp	r2, r3
  78 004a 09D1     		bne	.L1
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Enable I2C3 reset state */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, ENABLE);
  79              		.loc 1 156 0
  80 004c 4FF40000 		mov	r0, #8388608
  81 0050 0121     		movs	r1, #1
  82 0052 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, DISABLE);     
  83              		.loc 1 158 0
  84 0056 4FF40000 		mov	r0, #8388608
  85 005a 0021     		movs	r1, #0
  86 005c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  87              	.L1:
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
  88              		.loc 1 161 0
  89 0060 0837     		adds	r7, r7, #8
  90 0062 BD46     		mov	sp, r7
  91              		@ sp needed
  92 0064 80BD     		pop	{r7, pc}
  93              	.L6:
  94 0066 00BF     		.align	2
  95              	.L5:
  96 0068 00540040 		.word	1073763328
  97 006c 00580040 		.word	1073764352
  98 0070 005C0040 		.word	1073765376
  99              		.cfi_endproc
 100              	.LFE110:
 102              		.section	.text.I2C_Init,"ax",%progbits
 103              		.align	2
 104              		.global	I2C_Init
 105              		.thumb
 106              		.thumb_func
 108              	I2C_Init:
 109              	.LFB111:
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Initializes the I2Cx peripheral according to the specified 
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         parameters in the I2C_InitStruct.
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency 
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         (I2C peripheral input clock) must be a multiple of 10 MHz.  
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that contains 
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         the configuration information for the specified I2C peripheral.
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 110              		.loc 1 176 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 40
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              	.LCFI3:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 7, -8
 118              		.cfi_offset 14, -4
 119 0002 8AB0     		sub	sp, sp, #40
 120              	.LCFI4:
 121              		.cfi_def_cfa_offset 48
 122 0004 00AF     		add	r7, sp, #0
 123              	.LCFI5:
 124              		.cfi_def_cfa_register 7
 125 0006 7860     		str	r0, [r7, #4]
 126 0008 3960     		str	r1, [r7]
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 127              		.loc 1 177 0
 128 000a 0023     		movs	r3, #0
 129 000c FB84     		strh	r3, [r7, #38]	@ movhi
 130 000e 0023     		movs	r3, #0
 131 0010 7B84     		strh	r3, [r7, #34]	@ movhi
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t result = 0x04;
 132              		.loc 1 178 0
 133 0012 0423     		movs	r3, #4
 134 0014 BB84     		strh	r3, [r7, #36]	@ movhi
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t pclk1 = 8000000;
 135              		.loc 1 179 0
 136 0016 574B     		ldr	r3, .L14
 137 0018 FB61     		str	r3, [r7, #28]
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_ClocksTypeDef  rcc_clocks;
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLOCK_SPEED(I2C_InitStruct->I2C_ClockSpeed));
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_InitStruct->I2C_DutyCycle));
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR2 Configuration ------------------------*/
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR2 value */
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR2;
 138              		.loc 1 192 0
 139 001a 7B68     		ldr	r3, [r7, #4]
 140 001c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 141 001e FB84     		strh	r3, [r7, #38]	@ movhi
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_CR2_FREQ);
 142              		.loc 1 194 0
 143 0020 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 144 0022 23F03F03 		bic	r3, r3, #63
 145 0026 FB84     		strh	r3, [r7, #38]	@ movhi
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_GetClocksFreq(&rcc_clocks);
 146              		.loc 1 196 0
 147 0028 07F10C03 		add	r3, r7, #12
 148 002c 1846     		mov	r0, r3
 149 002e FFF7FEFF 		bl	RCC_GetClocksFreq
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 150              		.loc 1 197 0
 151 0032 7B69     		ldr	r3, [r7, #20]
 152 0034 FB61     		str	r3, [r7, #28]
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set frequency bits depending on pclk1 value */
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   freqrange = (uint16_t)(pclk1 / 1000000);
 153              		.loc 1 199 0
 154 0036 FA69     		ldr	r2, [r7, #28]
 155 0038 4F4B     		ldr	r3, .L14+4
 156 003a A3FB0213 		umull	r1, r3, r3, r2
 157 003e 9B0C     		lsrs	r3, r3, #18
 158 0040 7B84     		strh	r3, [r7, #34]	@ movhi
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 159              		.loc 1 200 0
 160 0042 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 161 0044 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 162 0046 1343     		orrs	r3, r3, r2
 163 0048 FB84     		strh	r3, [r7, #38]	@ movhi
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR2 */
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR2 = tmpreg;
 164              		.loc 1 202 0
 165 004a 7B68     		ldr	r3, [r7, #4]
 166 004c FA8C     		ldrh	r2, [r7, #38]	@ movhi
 167 004e 9A80     		strh	r2, [r3, #4]	@ movhi
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CCR Configuration ------------------------*/
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Disable the selected I2C peripheral to configure TRISE */
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 168              		.loc 1 206 0
 169 0050 7B68     		ldr	r3, [r7, #4]
 170 0052 1B88     		ldrh	r3, [r3]	@ movhi
 171 0054 9BB2     		uxth	r3, r3
 172 0056 23F00103 		bic	r3, r3, #1
 173 005a 9AB2     		uxth	r2, r3
 174 005c 7B68     		ldr	r3, [r7, #4]
 175 005e 1A80     		strh	r2, [r3]	@ movhi
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear F/S, DUTY and CCR[11:0] bits */
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = 0;
 176              		.loc 1 209 0
 177 0060 0023     		movs	r3, #0
 178 0062 FB84     		strh	r3, [r7, #38]	@ movhi
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in standard mode */
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_InitStruct->I2C_ClockSpeed <= 100000)
 179              		.loc 1 212 0
 180 0064 3B68     		ldr	r3, [r7]
 181 0066 1A68     		ldr	r2, [r3]
 182 0068 444B     		ldr	r3, .L14+8
 183 006a 9A42     		cmp	r2, r3
 184 006c 15D8     		bhi	.L8
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Standard mode speed calculate */
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
 185              		.loc 1 215 0
 186 006e 3B68     		ldr	r3, [r7]
 187 0070 1B68     		ldr	r3, [r3]
 188 0072 5B00     		lsls	r3, r3, #1
 189 0074 FA69     		ldr	r2, [r7, #28]
 190 0076 B2FBF3F3 		udiv	r3, r2, r3
 191 007a BB84     		strh	r3, [r7, #36]	@ movhi
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x4*/
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (result < 0x04)
 192              		.loc 1 217 0
 193 007c BB8C     		ldrh	r3, [r7, #36]
 194 007e 032B     		cmp	r3, #3
 195 0080 01D8     		bhi	.L9
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = 0x04;  
 196              		.loc 1 220 0
 197 0082 0423     		movs	r3, #4
 198 0084 BB84     		strh	r3, [r7, #36]	@ movhi
 199              	.L9:
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value for standard mode */
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= result;	  
 200              		.loc 1 223 0
 201 0086 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 202 0088 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 203 008a 1343     		orrs	r3, r3, r2
 204 008c FB84     		strh	r3, [r7, #38]	@ movhi
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for standard mode */
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = freqrange + 1; 
 205              		.loc 1 225 0
 206 008e 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 207 0090 0133     		adds	r3, r3, #1
 208 0092 9AB2     		uxth	r2, r3
 209 0094 7B68     		ldr	r3, [r7, #4]
 210 0096 1A84     		strh	r2, [r3, #32]	@ movhi
 211 0098 40E0     		b	.L10
 212              	.L8:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in fast mode */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency (I2C peripheral
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      input clock) must be a multiple of 10 MHz */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else /*(I2C_InitStruct->I2C_ClockSpeed <= 400000)*/
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_2)
 213              		.loc 1 232 0
 214 009a 3B68     		ldr	r3, [r7]
 215 009c DA88     		ldrh	r2, [r3, #6]
 216 009e 4BF6FF73 		movw	r3, #49151
 217 00a2 9A42     		cmp	r2, r3
 218 00a4 09D1     		bne	.L11
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 2 */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 3));
 219              		.loc 1 235 0
 220 00a6 3B68     		ldr	r3, [r7]
 221 00a8 1A68     		ldr	r2, [r3]
 222 00aa 1346     		mov	r3, r2
 223 00ac 5B00     		lsls	r3, r3, #1
 224 00ae 1344     		add	r3, r3, r2
 225 00b0 FA69     		ldr	r2, [r7, #28]
 226 00b2 B2FBF3F3 		udiv	r3, r2, r3
 227 00b6 BB84     		strh	r3, [r7, #36]	@ movhi
 228 00b8 0EE0     		b	.L12
 229              	.L11:
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     else /*I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_16_9*/
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 16/9 */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 25));
 230              		.loc 1 240 0
 231 00ba 3B68     		ldr	r3, [r7]
 232 00bc 1A68     		ldr	r2, [r3]
 233 00be 1346     		mov	r3, r2
 234 00c0 9B00     		lsls	r3, r3, #2
 235 00c2 1344     		add	r3, r3, r2
 236 00c4 9A00     		lsls	r2, r3, #2
 237 00c6 1344     		add	r3, r3, r2
 238 00c8 FA69     		ldr	r2, [r7, #28]
 239 00ca B2FBF3F3 		udiv	r3, r2, r3
 240 00ce BB84     		strh	r3, [r7, #36]	@ movhi
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= I2C_DutyCycle_16_9;
 241              		.loc 1 242 0
 242 00d0 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 243 00d2 43F48043 		orr	r3, r3, #16384
 244 00d6 BB84     		strh	r3, [r7, #36]	@ movhi
 245              	.L12:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x1*/
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if ((result & I2C_CCR_CCR) == 0)
 246              		.loc 1 246 0
 247 00d8 BB8C     		ldrh	r3, [r7, #36]
 248 00da C3F30B03 		ubfx	r3, r3, #0, #12
 249 00de 002B     		cmp	r3, #0
 250 00e0 03D1     		bne	.L13
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= (uint16_t)0x0001;  
 251              		.loc 1 249 0
 252 00e2 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 253 00e4 43F00103 		orr	r3, r3, #1
 254 00e8 BB84     		strh	r3, [r7, #36]	@ movhi
 255              	.L13:
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value and set F/S bit for fast mode */
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= (uint16_t)(result | I2C_CCR_FS);
 256              		.loc 1 252 0
 257 00ea BA8C     		ldrh	r2, [r7, #36]	@ movhi
 258 00ec FB8C     		ldrh	r3, [r7, #38]	@ movhi
 259 00ee 1343     		orrs	r3, r3, r2
 260 00f0 9BB2     		uxth	r3, r3
 261 00f2 6FEA4343 		mvn	r3, r3, lsl #17
 262 00f6 6FEA5343 		mvn	r3, r3, lsr #17
 263 00fa FB84     		strh	r3, [r7, #38]	@ movhi
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = (uint16_t)(((freqrange * (uint16_t)300) / (uint16_t)1000) + (uint16_t)1);  
 264              		.loc 1 254 0
 265 00fc 7B8C     		ldrh	r3, [r7, #34]
 266 00fe 4FF49672 		mov	r2, #300
 267 0102 02FB03F3 		mul	r3, r2, r3
 268 0106 1E4A     		ldr	r2, .L14+12
 269 0108 82FB0312 		smull	r1, r2, r2, r3
 270 010c 9211     		asrs	r2, r2, #6
 271 010e DB17     		asrs	r3, r3, #31
 272 0110 D31A     		subs	r3, r2, r3
 273 0112 9BB2     		uxth	r3, r3
 274 0114 0133     		adds	r3, r3, #1
 275 0116 9AB2     		uxth	r2, r3
 276 0118 7B68     		ldr	r3, [r7, #4]
 277 011a 1A84     		strh	r2, [r3, #32]	@ movhi
 278              	.L10:
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CCR */
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CCR = tmpreg;
 279              		.loc 1 258 0
 280 011c 7B68     		ldr	r3, [r7, #4]
 281 011e FA8C     		ldrh	r2, [r7, #38]	@ movhi
 282 0120 9A83     		strh	r2, [r3, #28]	@ movhi
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Enable the selected I2C peripheral */
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
 283              		.loc 1 260 0
 284 0122 7B68     		ldr	r3, [r7, #4]
 285 0124 1B88     		ldrh	r3, [r3]	@ movhi
 286 0126 9BB2     		uxth	r3, r3
 287 0128 43F00103 		orr	r3, r3, #1
 288 012c 9AB2     		uxth	r2, r3
 289 012e 7B68     		ldr	r3, [r7, #4]
 290 0130 1A80     		strh	r2, [r3]	@ movhi
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR1 Configuration ------------------------*/
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR1 value */
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR1;
 291              		.loc 1 264 0
 292 0132 7B68     		ldr	r3, [r7, #4]
 293 0134 1B88     		ldrh	r3, [r3]	@ movhi
 294 0136 FB84     		strh	r3, [r7, #38]	@ movhi
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 295              		.loc 1 266 0
 296 0138 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 297 013a 23F48163 		bic	r3, r3, #1032
 298 013e 23F00203 		bic	r3, r3, #2
 299 0142 FB84     		strh	r3, [r7, #38]	@ movhi
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set SMBTYPE and SMBUS bits according to I2C_Mode value */
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set ACK bit according to I2C_Ack value */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
 300              		.loc 1 270 0
 301 0144 3B68     		ldr	r3, [r7]
 302 0146 9A88     		ldrh	r2, [r3, #4]
 303 0148 3B68     		ldr	r3, [r7]
 304 014a 5B89     		ldrh	r3, [r3, #10]
 305 014c 1343     		orrs	r3, r3, r2
 306 014e 9AB2     		uxth	r2, r3
 307 0150 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 308 0152 1343     		orrs	r3, r3, r2
 309 0154 FB84     		strh	r3, [r7, #38]	@ movhi
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 = tmpreg;
 310              		.loc 1 272 0
 311 0156 7B68     		ldr	r3, [r7, #4]
 312 0158 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 313 015a 1A80     		strh	r2, [r3]	@ movhi
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx OAR1 Configuration -----------------------*/
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own Address1 and acknowledged address */
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR1 = (I2C_InitStruct->I2C_AcknowledgedAddress | I2C_InitStruct->I2C_OwnAddress1);
 314              		.loc 1 276 0
 315 015c 3B68     		ldr	r3, [r7]
 316 015e 9A89     		ldrh	r2, [r3, #12]
 317 0160 3B68     		ldr	r3, [r7]
 318 0162 1B89     		ldrh	r3, [r3, #8]
 319 0164 1343     		orrs	r3, r3, r2
 320 0166 9AB2     		uxth	r2, r3
 321 0168 7B68     		ldr	r3, [r7, #4]
 322 016a 1A81     		strh	r2, [r3, #8]	@ movhi
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 323              		.loc 1 277 0
 324 016c 2837     		adds	r7, r7, #40
 325 016e BD46     		mov	sp, r7
 326              		@ sp needed
 327 0170 80BD     		pop	{r7, pc}
 328              	.L15:
 329 0172 00BF     		.align	2
 330              	.L14:
 331 0174 00127A00 		.word	8000000
 332 0178 83DE1B43 		.word	1125899907
 333 017c A0860100 		.word	100000
 334 0180 D34D6210 		.word	274877907
 335              		.cfi_endproc
 336              	.LFE111:
 338              		.section	.text.I2C_StructInit,"ax",%progbits
 339              		.align	2
 340              		.global	I2C_StructInit
 341              		.thumb
 342              		.thumb_func
 344              	I2C_StructInit:
 345              	.LFB112:
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Fills each I2C_InitStruct member with its default value.
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 346              		.loc 1 285 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 8
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 351 0000 80B4     		push	{r7}
 352              	.LCFI6:
 353              		.cfi_def_cfa_offset 4
 354              		.cfi_offset 7, -4
 355 0002 83B0     		sub	sp, sp, #12
 356              	.LCFI7:
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              	.LCFI8:
 360              		.cfi_def_cfa_register 7
 361 0006 7860     		str	r0, [r7, #4]
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* initialize the I2C_ClockSpeed member */
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_ClockSpeed = 5000;
 362              		.loc 1 288 0
 363 0008 7B68     		ldr	r3, [r7, #4]
 364 000a 41F28832 		movw	r2, #5000
 365 000e 1A60     		str	r2, [r3]
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 366              		.loc 1 290 0
 367 0010 7B68     		ldr	r3, [r7, #4]
 368 0012 0022     		movs	r2, #0
 369 0014 9A80     		strh	r2, [r3, #4]	@ movhi
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
 370              		.loc 1 292 0
 371 0016 7B68     		ldr	r3, [r7, #4]
 372 0018 4BF6FF72 		movw	r2, #49151
 373 001c DA80     		strh	r2, [r3, #6]	@ movhi
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 374              		.loc 1 294 0
 375 001e 7B68     		ldr	r3, [r7, #4]
 376 0020 0022     		movs	r2, #0
 377 0022 1A81     		strh	r2, [r3, #8]	@ movhi
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Ack member */
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 378              		.loc 1 296 0
 379 0024 7B68     		ldr	r3, [r7, #4]
 380 0026 0022     		movs	r2, #0
 381 0028 5A81     		strh	r2, [r3, #10]	@ movhi
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 382              		.loc 1 298 0
 383 002a 7B68     		ldr	r3, [r7, #4]
 384 002c 4FF48042 		mov	r2, #16384
 385 0030 9A81     		strh	r2, [r3, #12]	@ movhi
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 386              		.loc 1 299 0
 387 0032 0C37     		adds	r7, r7, #12
 388 0034 BD46     		mov	sp, r7
 389              		@ sp needed
 390 0036 5DF8047B 		ldr	r7, [sp], #4
 391 003a 7047     		bx	lr
 392              		.cfi_endproc
 393              	.LFE112:
 395              		.section	.text.I2C_Cmd,"ax",%progbits
 396              		.align	2
 397              		.global	I2C_Cmd
 398              		.thumb
 399              		.thumb_func
 401              	I2C_Cmd:
 402              	.LFB113:
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C peripheral.
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx peripheral. 
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 403              		.loc 1 309 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 8
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408 0000 80B4     		push	{r7}
 409              	.LCFI9:
 410              		.cfi_def_cfa_offset 4
 411              		.cfi_offset 7, -4
 412 0002 83B0     		sub	sp, sp, #12
 413              	.LCFI10:
 414              		.cfi_def_cfa_offset 16
 415 0004 00AF     		add	r7, sp, #0
 416              	.LCFI11:
 417              		.cfi_def_cfa_register 7
 418 0006 7860     		str	r0, [r7, #4]
 419 0008 0B46     		mov	r3, r1
 420 000a FB70     		strb	r3, [r7, #3]
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 421              		.loc 1 313 0
 422 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 423 000e 002B     		cmp	r3, #0
 424 0010 08D0     		beq	.L18
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C peripheral */
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PE;
 425              		.loc 1 316 0
 426 0012 7B68     		ldr	r3, [r7, #4]
 427 0014 1B88     		ldrh	r3, [r3]	@ movhi
 428 0016 9BB2     		uxth	r3, r3
 429 0018 43F00103 		orr	r3, r3, #1
 430 001c 9AB2     		uxth	r2, r3
 431 001e 7B68     		ldr	r3, [r7, #4]
 432 0020 1A80     		strh	r2, [r3]	@ movhi
 433 0022 07E0     		b	.L17
 434              	.L18:
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C peripheral */
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 435              		.loc 1 321 0
 436 0024 7B68     		ldr	r3, [r7, #4]
 437 0026 1B88     		ldrh	r3, [r3]	@ movhi
 438 0028 9BB2     		uxth	r3, r3
 439 002a 23F00103 		bic	r3, r3, #1
 440 002e 9AB2     		uxth	r2, r3
 441 0030 7B68     		ldr	r3, [r7, #4]
 442 0032 1A80     		strh	r2, [r3]	@ movhi
 443              	.L17:
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 444              		.loc 1 323 0
 445 0034 0C37     		adds	r7, r7, #12
 446 0036 BD46     		mov	sp, r7
 447              		@ sp needed
 448 0038 5DF8047B 		ldr	r7, [sp], #4
 449 003c 7047     		bx	lr
 450              		.cfi_endproc
 451              	.LFE113:
 453 003e 00BF     		.section	.text.I2C_GenerateSTART,"ax",%progbits
 454              		.align	2
 455              		.global	I2C_GenerateSTART
 456              		.thumb
 457              		.thumb_func
 459              	I2C_GenerateSTART:
 460              	.LFB114:
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication START condition.
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C START condition generation.
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 461              		.loc 1 333 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 0000 80B4     		push	{r7}
 467              	.LCFI12:
 468              		.cfi_def_cfa_offset 4
 469              		.cfi_offset 7, -4
 470 0002 83B0     		sub	sp, sp, #12
 471              	.LCFI13:
 472              		.cfi_def_cfa_offset 16
 473 0004 00AF     		add	r7, sp, #0
 474              	.LCFI14:
 475              		.cfi_def_cfa_register 7
 476 0006 7860     		str	r0, [r7, #4]
 477 0008 0B46     		mov	r3, r1
 478 000a FB70     		strb	r3, [r7, #3]
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 479              		.loc 1 337 0
 480 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 481 000e 002B     		cmp	r3, #0
 482 0010 08D0     		beq	.L21
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a START condition */
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_START;
 483              		.loc 1 340 0
 484 0012 7B68     		ldr	r3, [r7, #4]
 485 0014 1B88     		ldrh	r3, [r3]	@ movhi
 486 0016 9BB2     		uxth	r3, r3
 487 0018 43F48073 		orr	r3, r3, #256
 488 001c 9AB2     		uxth	r2, r3
 489 001e 7B68     		ldr	r3, [r7, #4]
 490 0020 1A80     		strh	r2, [r3]	@ movhi
 491 0022 07E0     		b	.L20
 492              	.L21:
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the START condition generation */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_START);
 493              		.loc 1 345 0
 494 0024 7B68     		ldr	r3, [r7, #4]
 495 0026 1B88     		ldrh	r3, [r3]	@ movhi
 496 0028 9BB2     		uxth	r3, r3
 497 002a 23F48073 		bic	r3, r3, #256
 498 002e 9AB2     		uxth	r2, r3
 499 0030 7B68     		ldr	r3, [r7, #4]
 500 0032 1A80     		strh	r2, [r3]	@ movhi
 501              	.L20:
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 502              		.loc 1 347 0
 503 0034 0C37     		adds	r7, r7, #12
 504 0036 BD46     		mov	sp, r7
 505              		@ sp needed
 506 0038 5DF8047B 		ldr	r7, [sp], #4
 507 003c 7047     		bx	lr
 508              		.cfi_endproc
 509              	.LFE114:
 511 003e 00BF     		.section	.text.I2C_GenerateSTOP,"ax",%progbits
 512              		.align	2
 513              		.global	I2C_GenerateSTOP
 514              		.thumb
 515              		.thumb_func
 517              	I2C_GenerateSTOP:
 518              	.LFB115:
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication STOP condition.
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C STOP condition generation.
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 519              		.loc 1 357 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              	.LCFI15:
 526              		.cfi_def_cfa_offset 4
 527              		.cfi_offset 7, -4
 528 0002 83B0     		sub	sp, sp, #12
 529              	.LCFI16:
 530              		.cfi_def_cfa_offset 16
 531 0004 00AF     		add	r7, sp, #0
 532              	.LCFI17:
 533              		.cfi_def_cfa_register 7
 534 0006 7860     		str	r0, [r7, #4]
 535 0008 0B46     		mov	r3, r1
 536 000a FB70     		strb	r3, [r7, #3]
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 537              		.loc 1 361 0
 538 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 539 000e 002B     		cmp	r3, #0
 540 0010 08D0     		beq	.L24
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a STOP condition */
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_STOP;
 541              		.loc 1 364 0
 542 0012 7B68     		ldr	r3, [r7, #4]
 543 0014 1B88     		ldrh	r3, [r3]	@ movhi
 544 0016 9BB2     		uxth	r3, r3
 545 0018 43F40073 		orr	r3, r3, #512
 546 001c 9AB2     		uxth	r2, r3
 547 001e 7B68     		ldr	r3, [r7, #4]
 548 0020 1A80     		strh	r2, [r3]	@ movhi
 549 0022 07E0     		b	.L23
 550              	.L24:
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the STOP condition generation */
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_STOP);
 551              		.loc 1 369 0
 552 0024 7B68     		ldr	r3, [r7, #4]
 553 0026 1B88     		ldrh	r3, [r3]	@ movhi
 554 0028 9BB2     		uxth	r3, r3
 555 002a 23F40073 		bic	r3, r3, #512
 556 002e 9AB2     		uxth	r2, r3
 557 0030 7B68     		ldr	r3, [r7, #4]
 558 0032 1A80     		strh	r2, [r3]	@ movhi
 559              	.L23:
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 560              		.loc 1 371 0
 561 0034 0C37     		adds	r7, r7, #12
 562 0036 BD46     		mov	sp, r7
 563              		@ sp needed
 564 0038 5DF8047B 		ldr	r7, [sp], #4
 565 003c 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE115:
 569 003e 00BF     		.section	.text.I2C_Send7bitAddress,"ax",%progbits
 570              		.align	2
 571              		.global	I2C_Send7bitAddress
 572              		.thumb
 573              		.thumb_func
 575              	I2C_Send7bitAddress:
 576              	.LFB116:
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Transmits the address byte to select the slave device.
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the slave address which will be transmitted
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Direction: specifies whether the I2C device will be a Transmitter
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         or a Receiver. 
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Transmitter: Transmitter mode
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Receiver: Receiver mode
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 577              		.loc 1 385 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 8
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582 0000 80B4     		push	{r7}
 583              	.LCFI18:
 584              		.cfi_def_cfa_offset 4
 585              		.cfi_offset 7, -4
 586 0002 83B0     		sub	sp, sp, #12
 587              	.LCFI19:
 588              		.cfi_def_cfa_offset 16
 589 0004 00AF     		add	r7, sp, #0
 590              	.LCFI20:
 591              		.cfi_def_cfa_register 7
 592 0006 7860     		str	r0, [r7, #4]
 593 0008 1346     		mov	r3, r2
 594 000a 0A46     		mov	r2, r1
 595 000c FA70     		strb	r2, [r7, #3]
 596 000e BB70     		strb	r3, [r7, #2]
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIRECTION(I2C_Direction));
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Test on the direction to set/reset the read/write bit */
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_Direction != I2C_Direction_Transmitter)
 597              		.loc 1 390 0
 598 0010 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 599 0012 002B     		cmp	r3, #0
 600 0014 04D0     		beq	.L27
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set the address bit0 for read */
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address |= I2C_OAR1_ADD0;
 601              		.loc 1 393 0
 602 0016 FB78     		ldrb	r3, [r7, #3]
 603 0018 43F00103 		orr	r3, r3, #1
 604 001c FB70     		strb	r3, [r7, #3]
 605 001e 03E0     		b	.L28
 606              	.L27:
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Reset the address bit0 for write */
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address &= (uint8_t)~((uint8_t)I2C_OAR1_ADD0);
 607              		.loc 1 398 0
 608 0020 FB78     		ldrb	r3, [r7, #3]
 609 0022 23F00103 		bic	r3, r3, #1
 610 0026 FB70     		strb	r3, [r7, #3]
 611              	.L28:
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Send the address */
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Address;
 612              		.loc 1 401 0
 613 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 614 002a 9AB2     		uxth	r2, r3
 615 002c 7B68     		ldr	r3, [r7, #4]
 616 002e 1A82     		strh	r2, [r3, #16]	@ movhi
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 617              		.loc 1 402 0
 618 0030 0C37     		adds	r7, r7, #12
 619 0032 BD46     		mov	sp, r7
 620              		@ sp needed
 621 0034 5DF8047B 		ldr	r7, [sp], #4
 622 0038 7047     		bx	lr
 623              		.cfi_endproc
 624              	.LFE116:
 626 003a 00BF     		.section	.text.I2C_AcknowledgeConfig,"ax",%progbits
 627              		.align	2
 628              		.global	I2C_AcknowledgeConfig
 629              		.thumb
 630              		.thumb_func
 632              	I2C_AcknowledgeConfig:
 633              	.LFB117:
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C acknowledge feature.
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C Acknowledgement.
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 634              		.loc 1 412 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 8
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639 0000 80B4     		push	{r7}
 640              	.LCFI21:
 641              		.cfi_def_cfa_offset 4
 642              		.cfi_offset 7, -4
 643 0002 83B0     		sub	sp, sp, #12
 644              	.LCFI22:
 645              		.cfi_def_cfa_offset 16
 646 0004 00AF     		add	r7, sp, #0
 647              	.LCFI23:
 648              		.cfi_def_cfa_register 7
 649 0006 7860     		str	r0, [r7, #4]
 650 0008 0B46     		mov	r3, r1
 651 000a FB70     		strb	r3, [r7, #3]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 652              		.loc 1 416 0
 653 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 654 000e 002B     		cmp	r3, #0
 655 0010 08D0     		beq	.L30
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the acknowledgement */
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ACK;
 656              		.loc 1 419 0
 657 0012 7B68     		ldr	r3, [r7, #4]
 658 0014 1B88     		ldrh	r3, [r3]	@ movhi
 659 0016 9BB2     		uxth	r3, r3
 660 0018 43F48063 		orr	r3, r3, #1024
 661 001c 9AB2     		uxth	r2, r3
 662 001e 7B68     		ldr	r3, [r7, #4]
 663 0020 1A80     		strh	r2, [r3]	@ movhi
 664 0022 07E0     		b	.L29
 665              	.L30:
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the acknowledgement */
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ACK);
 666              		.loc 1 424 0
 667 0024 7B68     		ldr	r3, [r7, #4]
 668 0026 1B88     		ldrh	r3, [r3]	@ movhi
 669 0028 9BB2     		uxth	r3, r3
 670 002a 23F48063 		bic	r3, r3, #1024
 671 002e 9AB2     		uxth	r2, r3
 672 0030 7B68     		ldr	r3, [r7, #4]
 673 0032 1A80     		strh	r2, [r3]	@ movhi
 674              	.L29:
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 675              		.loc 1 426 0
 676 0034 0C37     		adds	r7, r7, #12
 677 0036 BD46     		mov	sp, r7
 678              		@ sp needed
 679 0038 5DF8047B 		ldr	r7, [sp], #4
 680 003c 7047     		bx	lr
 681              		.cfi_endproc
 682              	.LFE117:
 684 003e 00BF     		.section	.text.I2C_OwnAddress2Config,"ax",%progbits
 685              		.align	2
 686              		.global	I2C_OwnAddress2Config
 687              		.thumb
 688              		.thumb_func
 690              	I2C_OwnAddress2Config:
 691              	.LFB118:
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Configures the specified I2C own address2.
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the 7bit I2C own address2.
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address)
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 692              		.loc 1 435 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 16
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 697 0000 80B4     		push	{r7}
 698              	.LCFI24:
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 85B0     		sub	sp, sp, #20
 702              	.LCFI25:
 703              		.cfi_def_cfa_offset 24
 704 0004 00AF     		add	r7, sp, #0
 705              	.LCFI26:
 706              		.cfi_def_cfa_register 7
 707 0006 7860     		str	r0, [r7, #4]
 708 0008 0B46     		mov	r3, r1
 709 000a FB70     		strb	r3, [r7, #3]
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 710              		.loc 1 436 0
 711 000c 0023     		movs	r3, #0
 712 000e FB81     		strh	r3, [r7, #14]	@ movhi
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the old register value */
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->OAR2;
 713              		.loc 1 442 0
 714 0010 7B68     		ldr	r3, [r7, #4]
 715 0012 9B89     		ldrh	r3, [r3, #12]	@ movhi
 716 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset I2Cx Own address2 bit [7:1] */
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_OAR2_ADD2);
 717              		.loc 1 445 0
 718 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 719 0018 23F0FE03 		bic	r3, r3, #254
 720 001c FB81     		strh	r3, [r7, #14]	@ movhi
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own address2 */
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)Address & (uint16_t)0x00FE);
 721              		.loc 1 448 0
 722 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 723 0020 9BB2     		uxth	r3, r3
 724 0022 03F0FE03 		and	r3, r3, #254
 725 0026 9AB2     		uxth	r2, r3
 726 0028 FB89     		ldrh	r3, [r7, #14]
 727 002a 1343     		orrs	r3, r3, r2
 728 002c 9BB2     		uxth	r3, r3
 729 002e FB81     		strh	r3, [r7, #14]	@ movhi
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Store the new register value */
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR2 = tmpreg;
 730              		.loc 1 451 0
 731 0030 7B68     		ldr	r3, [r7, #4]
 732 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 733 0034 9A81     		strh	r2, [r3, #12]	@ movhi
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 734              		.loc 1 452 0
 735 0036 1437     		adds	r7, r7, #20
 736 0038 BD46     		mov	sp, r7
 737              		@ sp needed
 738 003a 5DF8047B 		ldr	r7, [sp], #4
 739 003e 7047     		bx	lr
 740              		.cfi_endproc
 741              	.LFE118:
 743              		.section	.text.I2C_DualAddressCmd,"ax",%progbits
 744              		.align	2
 745              		.global	I2C_DualAddressCmd
 746              		.thumb
 747              		.thumb_func
 749              	I2C_DualAddressCmd:
 750              	.LFB119:
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C dual addressing mode.
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C dual addressing mode.
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 751              		.loc 1 462 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756 0000 80B4     		push	{r7}
 757              	.LCFI27:
 758              		.cfi_def_cfa_offset 4
 759              		.cfi_offset 7, -4
 760 0002 83B0     		sub	sp, sp, #12
 761              	.LCFI28:
 762              		.cfi_def_cfa_offset 16
 763 0004 00AF     		add	r7, sp, #0
 764              	.LCFI29:
 765              		.cfi_def_cfa_register 7
 766 0006 7860     		str	r0, [r7, #4]
 767 0008 0B46     		mov	r3, r1
 768 000a FB70     		strb	r3, [r7, #3]
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 769              		.loc 1 466 0
 770 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 771 000e 002B     		cmp	r3, #0
 772 0010 08D0     		beq	.L34
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable dual addressing mode */
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 |= I2C_OAR2_ENDUAL;
 773              		.loc 1 469 0
 774 0012 7B68     		ldr	r3, [r7, #4]
 775 0014 9B89     		ldrh	r3, [r3, #12]	@ movhi
 776 0016 9BB2     		uxth	r3, r3
 777 0018 43F00103 		orr	r3, r3, #1
 778 001c 9AB2     		uxth	r2, r3
 779 001e 7B68     		ldr	r3, [r7, #4]
 780 0020 9A81     		strh	r2, [r3, #12]	@ movhi
 781 0022 07E0     		b	.L33
 782              	.L34:
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable dual addressing mode */
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 &= (uint16_t)~((uint16_t)I2C_OAR2_ENDUAL);
 783              		.loc 1 474 0
 784 0024 7B68     		ldr	r3, [r7, #4]
 785 0026 9B89     		ldrh	r3, [r3, #12]	@ movhi
 786 0028 9BB2     		uxth	r3, r3
 787 002a 23F00103 		bic	r3, r3, #1
 788 002e 9AB2     		uxth	r2, r3
 789 0030 7B68     		ldr	r3, [r7, #4]
 790 0032 9A81     		strh	r2, [r3, #12]	@ movhi
 791              	.L33:
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 792              		.loc 1 476 0
 793 0034 0C37     		adds	r7, r7, #12
 794 0036 BD46     		mov	sp, r7
 795              		@ sp needed
 796 0038 5DF8047B 		ldr	r7, [sp], #4
 797 003c 7047     		bx	lr
 798              		.cfi_endproc
 799              	.LFE119:
 801 003e 00BF     		.section	.text.I2C_GeneralCallCmd,"ax",%progbits
 802              		.align	2
 803              		.global	I2C_GeneralCallCmd
 804              		.thumb
 805              		.thumb_func
 807              	I2C_GeneralCallCmd:
 808              	.LFB120:
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C general call feature.
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C General call.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 809              		.loc 1 486 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 8
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814 0000 80B4     		push	{r7}
 815              	.LCFI30:
 816              		.cfi_def_cfa_offset 4
 817              		.cfi_offset 7, -4
 818 0002 83B0     		sub	sp, sp, #12
 819              	.LCFI31:
 820              		.cfi_def_cfa_offset 16
 821 0004 00AF     		add	r7, sp, #0
 822              	.LCFI32:
 823              		.cfi_def_cfa_register 7
 824 0006 7860     		str	r0, [r7, #4]
 825 0008 0B46     		mov	r3, r1
 826 000a FB70     		strb	r3, [r7, #3]
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 827              		.loc 1 490 0
 828 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 829 000e 002B     		cmp	r3, #0
 830 0010 08D0     		beq	.L37
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable generall call */
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENGC;
 831              		.loc 1 493 0
 832 0012 7B68     		ldr	r3, [r7, #4]
 833 0014 1B88     		ldrh	r3, [r3]	@ movhi
 834 0016 9BB2     		uxth	r3, r3
 835 0018 43F04003 		orr	r3, r3, #64
 836 001c 9AB2     		uxth	r2, r3
 837 001e 7B68     		ldr	r3, [r7, #4]
 838 0020 1A80     		strh	r2, [r3]	@ movhi
 839 0022 07E0     		b	.L36
 840              	.L37:
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable generall call */
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENGC);
 841              		.loc 1 498 0
 842 0024 7B68     		ldr	r3, [r7, #4]
 843 0026 1B88     		ldrh	r3, [r3]	@ movhi
 844 0028 9BB2     		uxth	r3, r3
 845 002a 23F04003 		bic	r3, r3, #64
 846 002e 9AB2     		uxth	r2, r3
 847 0030 7B68     		ldr	r3, [r7, #4]
 848 0032 1A80     		strh	r2, [r3]	@ movhi
 849              	.L36:
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 850              		.loc 1 500 0
 851 0034 0C37     		adds	r7, r7, #12
 852 0036 BD46     		mov	sp, r7
 853              		@ sp needed
 854 0038 5DF8047B 		ldr	r7, [sp], #4
 855 003c 7047     		bx	lr
 856              		.cfi_endproc
 857              	.LFE120:
 859 003e 00BF     		.section	.text.I2C_SoftwareResetCmd,"ax",%progbits
 860              		.align	2
 861              		.global	I2C_SoftwareResetCmd
 862              		.thumb
 863              		.thumb_func
 865              	I2C_SoftwareResetCmd:
 866              	.LFB121:
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C software reset.
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   When software reset is enabled, the I2C IOs are released (this can
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         be useful to recover from bus errors).  
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C software reset.
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 867              		.loc 1 512 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 8
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872 0000 80B4     		push	{r7}
 873              	.LCFI33:
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 0002 83B0     		sub	sp, sp, #12
 877              	.LCFI34:
 878              		.cfi_def_cfa_offset 16
 879 0004 00AF     		add	r7, sp, #0
 880              	.LCFI35:
 881              		.cfi_def_cfa_register 7
 882 0006 7860     		str	r0, [r7, #4]
 883 0008 0B46     		mov	r3, r1
 884 000a FB70     		strb	r3, [r7, #3]
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 885              		.loc 1 516 0
 886 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 887 000e 002B     		cmp	r3, #0
 888 0010 0AD0     		beq	.L40
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral under reset */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_SWRST;
 889              		.loc 1 519 0
 890 0012 7B68     		ldr	r3, [r7, #4]
 891 0014 1B88     		ldrh	r3, [r3]	@ movhi
 892 0016 9BB2     		uxth	r3, r3
 893 0018 6FEA4343 		mvn	r3, r3, lsl #17
 894 001c 6FEA5343 		mvn	r3, r3, lsr #17
 895 0020 9AB2     		uxth	r2, r3
 896 0022 7B68     		ldr	r3, [r7, #4]
 897 0024 1A80     		strh	r2, [r3]	@ movhi
 898 0026 07E0     		b	.L39
 899              	.L40:
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral not under reset */
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_SWRST);
 900              		.loc 1 524 0
 901 0028 7B68     		ldr	r3, [r7, #4]
 902 002a 1B88     		ldrh	r3, [r3]	@ movhi
 903 002c 9BB2     		uxth	r3, r3
 904 002e C3F30E03 		ubfx	r3, r3, #0, #15
 905 0032 9AB2     		uxth	r2, r3
 906 0034 7B68     		ldr	r3, [r7, #4]
 907 0036 1A80     		strh	r2, [r3]	@ movhi
 908              	.L39:
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 909              		.loc 1 526 0
 910 0038 0C37     		adds	r7, r7, #12
 911 003a BD46     		mov	sp, r7
 912              		@ sp needed
 913 003c 5DF8047B 		ldr	r7, [sp], #4
 914 0040 7047     		bx	lr
 915              		.cfi_endproc
 916              	.LFE121:
 918 0042 00BF     		.section	.text.I2C_StretchClockCmd,"ax",%progbits
 919              		.align	2
 920              		.global	I2C_StretchClockCmd
 921              		.thumb
 922              		.thumb_func
 924              	I2C_StretchClockCmd:
 925              	.LFB122:
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C Clock stretching.
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx Clock stretching.
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 926              		.loc 1 536 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 8
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931 0000 80B4     		push	{r7}
 932              	.LCFI36:
 933              		.cfi_def_cfa_offset 4
 934              		.cfi_offset 7, -4
 935 0002 83B0     		sub	sp, sp, #12
 936              	.LCFI37:
 937              		.cfi_def_cfa_offset 16
 938 0004 00AF     		add	r7, sp, #0
 939              	.LCFI38:
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
 942 0008 0B46     		mov	r3, r1
 943 000a FB70     		strb	r3, [r7, #3]
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState == DISABLE)
 944              		.loc 1 540 0
 945 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 946 000e 002B     		cmp	r3, #0
 947 0010 08D1     		bne	.L43
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C Clock stretching */
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_NOSTRETCH;
 948              		.loc 1 543 0
 949 0012 7B68     		ldr	r3, [r7, #4]
 950 0014 1B88     		ldrh	r3, [r3]	@ movhi
 951 0016 9BB2     		uxth	r3, r3
 952 0018 43F08003 		orr	r3, r3, #128
 953 001c 9AB2     		uxth	r2, r3
 954 001e 7B68     		ldr	r3, [r7, #4]
 955 0020 1A80     		strh	r2, [r3]	@ movhi
 956 0022 07E0     		b	.L42
 957              	.L43:
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C Clock stretching */
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_NOSTRETCH);
 958              		.loc 1 548 0
 959 0024 7B68     		ldr	r3, [r7, #4]
 960 0026 1B88     		ldrh	r3, [r3]	@ movhi
 961 0028 9BB2     		uxth	r3, r3
 962 002a 23F08003 		bic	r3, r3, #128
 963 002e 9AB2     		uxth	r2, r3
 964 0030 7B68     		ldr	r3, [r7, #4]
 965 0032 1A80     		strh	r2, [r3]	@ movhi
 966              	.L42:
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 967              		.loc 1 550 0
 968 0034 0C37     		adds	r7, r7, #12
 969 0036 BD46     		mov	sp, r7
 970              		@ sp needed
 971 0038 5DF8047B 		ldr	r7, [sp], #4
 972 003c 7047     		bx	lr
 973              		.cfi_endproc
 974              	.LFE122:
 976 003e 00BF     		.section	.text.I2C_FastModeDutyCycleConfig,"ax",%progbits
 977              		.align	2
 978              		.global	I2C_FastModeDutyCycleConfig
 979              		.thumb
 980              		.thumb_func
 982              	I2C_FastModeDutyCycleConfig:
 983              	.LFB123:
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C fast mode duty cycle.
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_DutyCycle: specifies the fast mode duty cycle.
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_2: I2C fast mode Tlow/Thigh = 2
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_16_9: I2C fast mode Tlow/Thigh = 16/9
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 984              		.loc 1 562 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 8
 987              		@ frame_needed = 1, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 989 0000 80B4     		push	{r7}
 990              	.LCFI39:
 991              		.cfi_def_cfa_offset 4
 992              		.cfi_offset 7, -4
 993 0002 83B0     		sub	sp, sp, #12
 994              	.LCFI40:
 995              		.cfi_def_cfa_offset 16
 996 0004 00AF     		add	r7, sp, #0
 997              	.LCFI41:
 998              		.cfi_def_cfa_register 7
 999 0006 7860     		str	r0, [r7, #4]
 1000 0008 0B46     		mov	r3, r1
 1001 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_DutyCycle));
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 1002              		.loc 1 566 0
 1003 000c 7B88     		ldrh	r3, [r7, #2]
 1004 000e B3F5804F 		cmp	r3, #16384
 1005 0012 08D0     		beq	.L46
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=2 */
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR &= I2C_DutyCycle_2;
 1006              		.loc 1 569 0
 1007 0014 7B68     		ldr	r3, [r7, #4]
 1008 0016 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1009 0018 9BB2     		uxth	r3, r3
 1010 001a 23F48043 		bic	r3, r3, #16384
 1011 001e 9AB2     		uxth	r2, r3
 1012 0020 7B68     		ldr	r3, [r7, #4]
 1013 0022 9A83     		strh	r2, [r3, #28]	@ movhi
 1014 0024 07E0     		b	.L45
 1015              	.L46:
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=16/9 */
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR |= I2C_DutyCycle_16_9;
 1016              		.loc 1 574 0
 1017 0026 7B68     		ldr	r3, [r7, #4]
 1018 0028 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1019 002a 9BB2     		uxth	r3, r3
 1020 002c 43F48043 		orr	r3, r3, #16384
 1021 0030 9AB2     		uxth	r2, r3
 1022 0032 7B68     		ldr	r3, [r7, #4]
 1023 0034 9A83     		strh	r2, [r3, #28]	@ movhi
 1024              	.L45:
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1025              		.loc 1 576 0
 1026 0036 0C37     		adds	r7, r7, #12
 1027 0038 BD46     		mov	sp, r7
 1028              		@ sp needed
 1029 003a 5DF8047B 		ldr	r7, [sp], #4
 1030 003e 7047     		bx	lr
 1031              		.cfi_endproc
 1032              	.LFE123:
 1034              		.section	.text.I2C_NACKPositionConfig,"ax",%progbits
 1035              		.align	2
 1036              		.global	I2C_NACKPositionConfig
 1037              		.thumb
 1038              		.thumb_func
 1040              	I2C_NACKPositionConfig:
 1041              	.LFB124:
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C NACK position in master receiver mode.
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function is useful in I2C Master Receiver mode when the number
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         of data to be received is equal to 2. In this case, this function 
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         should be called (with parameter I2C_NACKPosition_Next) before data 
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         reception starts,as described in the 2-byte reception procedure 
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         recommended in Reference Manual in Section: Master receiver.                
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_NACKPosition: specifies the NACK position. 
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Next: indicates that the next byte will be the last
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                        received byte.  
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Current: indicates that current byte is the last 
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                           received byte.
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_PECPositionConfig() 
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in I2C mode while I2C_PECPositionConfig() 
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in SMBUS mode. 
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_NACKPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_NACKPosition)
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1042              		.loc 1 600 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 8
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047 0000 80B4     		push	{r7}
 1048              	.LCFI42:
 1049              		.cfi_def_cfa_offset 4
 1050              		.cfi_offset 7, -4
 1051 0002 83B0     		sub	sp, sp, #12
 1052              	.LCFI43:
 1053              		.cfi_def_cfa_offset 16
 1054 0004 00AF     		add	r7, sp, #0
 1055              	.LCFI44:
 1056              		.cfi_def_cfa_register 7
 1057 0006 7860     		str	r0, [r7, #4]
 1058 0008 0B46     		mov	r3, r1
 1059 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_NACK_POSITION(I2C_NACKPosition));
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the input parameter */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_NACKPosition == I2C_NACKPosition_Next)
 1060              		.loc 1 606 0
 1061 000c 7B88     		ldrh	r3, [r7, #2]
 1062 000e B3F5006F 		cmp	r3, #2048
 1063 0012 08D1     		bne	.L49
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is the last received byte */
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_NACKPosition_Next;
 1064              		.loc 1 609 0
 1065 0014 7B68     		ldr	r3, [r7, #4]
 1066 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1067 0018 9BB2     		uxth	r3, r3
 1068 001a 43F40063 		orr	r3, r3, #2048
 1069 001e 9AB2     		uxth	r2, r3
 1070 0020 7B68     		ldr	r3, [r7, #4]
 1071 0022 1A80     		strh	r2, [r3]	@ movhi
 1072 0024 07E0     		b	.L48
 1073              	.L49:
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is the last received byte */
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_NACKPosition_Current;
 1074              		.loc 1 614 0
 1075 0026 7B68     		ldr	r3, [r7, #4]
 1076 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1077 002a 9BB2     		uxth	r3, r3
 1078 002c 23F40063 		bic	r3, r3, #2048
 1079 0030 9AB2     		uxth	r2, r3
 1080 0032 7B68     		ldr	r3, [r7, #4]
 1081 0034 1A80     		strh	r2, [r3]	@ movhi
 1082              	.L48:
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1083              		.loc 1 616 0
 1084 0036 0C37     		adds	r7, r7, #12
 1085 0038 BD46     		mov	sp, r7
 1086              		@ sp needed
 1087 003a 5DF8047B 		ldr	r7, [sp], #4
 1088 003e 7047     		bx	lr
 1089              		.cfi_endproc
 1090              	.LFE124:
 1092              		.section	.text.I2C_SMBusAlertConfig,"ax",%progbits
 1093              		.align	2
 1094              		.global	I2C_SMBusAlertConfig
 1095              		.thumb
 1096              		.thumb_func
 1098              	I2C_SMBusAlertConfig:
 1099              	.LFB125:
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Drives the SMBusAlert pin high or low for the specified I2C.
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_SMBusAlert: specifies SMBAlert pin level. 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_Low: SMBAlert pin driven low
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_High: SMBAlert pin driven high
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1100              		.loc 1 628 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 8
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 1105 0000 80B4     		push	{r7}
 1106              	.LCFI45:
 1107              		.cfi_def_cfa_offset 4
 1108              		.cfi_offset 7, -4
 1109 0002 83B0     		sub	sp, sp, #12
 1110              	.LCFI46:
 1111              		.cfi_def_cfa_offset 16
 1112 0004 00AF     		add	r7, sp, #0
 1113              	.LCFI47:
 1114              		.cfi_def_cfa_register 7
 1115 0006 7860     		str	r0, [r7, #4]
 1116 0008 0B46     		mov	r3, r1
 1117 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_SMBUS_ALERT(I2C_SMBusAlert));
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 1118              		.loc 1 632 0
 1119 000c 7B88     		ldrh	r3, [r7, #2]
 1120 000e B3F5005F 		cmp	r3, #8192
 1121 0012 08D1     		bne	.L52
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin Low */
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_SMBusAlert_Low;
 1122              		.loc 1 635 0
 1123 0014 7B68     		ldr	r3, [r7, #4]
 1124 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1125 0018 9BB2     		uxth	r3, r3
 1126 001a 43F40053 		orr	r3, r3, #8192
 1127 001e 9AB2     		uxth	r2, r3
 1128 0020 7B68     		ldr	r3, [r7, #4]
 1129 0022 1A80     		strh	r2, [r3]	@ movhi
 1130 0024 07E0     		b	.L51
 1131              	.L52:
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin High  */
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_SMBusAlert_High;
 1132              		.loc 1 640 0
 1133 0026 7B68     		ldr	r3, [r7, #4]
 1134 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1135 002a 9BB2     		uxth	r3, r3
 1136 002c 23F40053 		bic	r3, r3, #8192
 1137 0030 9AB2     		uxth	r2, r3
 1138 0032 7B68     		ldr	r3, [r7, #4]
 1139 0034 1A80     		strh	r2, [r3]	@ movhi
 1140              	.L51:
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1141              		.loc 1 642 0
 1142 0036 0C37     		adds	r7, r7, #12
 1143 0038 BD46     		mov	sp, r7
 1144              		@ sp needed
 1145 003a 5DF8047B 		ldr	r7, [sp], #4
 1146 003e 7047     		bx	lr
 1147              		.cfi_endproc
 1148              	.LFE125:
 1150              		.section	.text.I2C_ARPCmd,"ax",%progbits
 1151              		.align	2
 1152              		.global	I2C_ARPCmd
 1153              		.thumb
 1154              		.thumb_func
 1156              	I2C_ARPCmd:
 1157              	.LFB126:
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C ARP.
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx ARP. 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1158              		.loc 1 652 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 8
 1161              		@ frame_needed = 1, uses_anonymous_args = 0
 1162              		@ link register save eliminated.
 1163 0000 80B4     		push	{r7}
 1164              	.LCFI48:
 1165              		.cfi_def_cfa_offset 4
 1166              		.cfi_offset 7, -4
 1167 0002 83B0     		sub	sp, sp, #12
 1168              	.LCFI49:
 1169              		.cfi_def_cfa_offset 16
 1170 0004 00AF     		add	r7, sp, #0
 1171              	.LCFI50:
 1172              		.cfi_def_cfa_register 7
 1173 0006 7860     		str	r0, [r7, #4]
 1174 0008 0B46     		mov	r3, r1
 1175 000a FB70     		strb	r3, [r7, #3]
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1176              		.loc 1 656 0
 1177 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1178 000e 002B     		cmp	r3, #0
 1179 0010 08D0     		beq	.L55
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C ARP */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENARP;
 1180              		.loc 1 659 0
 1181 0012 7B68     		ldr	r3, [r7, #4]
 1182 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1183 0016 9BB2     		uxth	r3, r3
 1184 0018 43F01003 		orr	r3, r3, #16
 1185 001c 9AB2     		uxth	r2, r3
 1186 001e 7B68     		ldr	r3, [r7, #4]
 1187 0020 1A80     		strh	r2, [r3]	@ movhi
 1188 0022 07E0     		b	.L54
 1189              	.L55:
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C ARP */
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENARP);
 1190              		.loc 1 664 0
 1191 0024 7B68     		ldr	r3, [r7, #4]
 1192 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1193 0028 9BB2     		uxth	r3, r3
 1194 002a 23F01003 		bic	r3, r3, #16
 1195 002e 9AB2     		uxth	r2, r3
 1196 0030 7B68     		ldr	r3, [r7, #4]
 1197 0032 1A80     		strh	r2, [r3]	@ movhi
 1198              	.L54:
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1199              		.loc 1 666 0
 1200 0034 0C37     		adds	r7, r7, #12
 1201 0036 BD46     		mov	sp, r7
 1202              		@ sp needed
 1203 0038 5DF8047B 		ldr	r7, [sp], #4
 1204 003c 7047     		bx	lr
 1205              		.cfi_endproc
 1206              	.LFE126:
 1208 003e 00BF     		.section	.text.I2C_SendData,"ax",%progbits
 1209              		.align	2
 1210              		.global	I2C_SendData
 1211              		.thumb
 1212              		.thumb_func
 1214              	I2C_SendData:
 1215              	.LFB127:
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group2 Data transfers functions
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Data transfers functions 
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                         Data transfers functions
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Sends a data byte through the I2Cx peripheral.
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Data: Byte to be transmitted..
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1216              		.loc 1 690 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 8
 1219              		@ frame_needed = 1, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 1221 0000 80B4     		push	{r7}
 1222              	.LCFI51:
 1223              		.cfi_def_cfa_offset 4
 1224              		.cfi_offset 7, -4
 1225 0002 83B0     		sub	sp, sp, #12
 1226              	.LCFI52:
 1227              		.cfi_def_cfa_offset 16
 1228 0004 00AF     		add	r7, sp, #0
 1229              	.LCFI53:
 1230              		.cfi_def_cfa_register 7
 1231 0006 7860     		str	r0, [r7, #4]
 1232 0008 0B46     		mov	r3, r1
 1233 000a FB70     		strb	r3, [r7, #3]
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write in the DR register the data to be sent */
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Data;
 1234              		.loc 1 694 0
 1235 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1236 000e 9AB2     		uxth	r2, r3
 1237 0010 7B68     		ldr	r3, [r7, #4]
 1238 0012 1A82     		strh	r2, [r3, #16]	@ movhi
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1239              		.loc 1 695 0
 1240 0014 0C37     		adds	r7, r7, #12
 1241 0016 BD46     		mov	sp, r7
 1242              		@ sp needed
 1243 0018 5DF8047B 		ldr	r7, [sp], #4
 1244 001c 7047     		bx	lr
 1245              		.cfi_endproc
 1246              	.LFE127:
 1248 001e 00BF     		.section	.text.I2C_ReceiveData,"ax",%progbits
 1249              		.align	2
 1250              		.global	I2C_ReceiveData
 1251              		.thumb
 1252              		.thumb_func
 1254              	I2C_ReceiveData:
 1255              	.LFB128:
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the most recent received data by the I2Cx peripheral.
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the received data.
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1256              		.loc 1 703 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 8
 1259              		@ frame_needed = 1, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
 1261 0000 80B4     		push	{r7}
 1262              	.LCFI54:
 1263              		.cfi_def_cfa_offset 4
 1264              		.cfi_offset 7, -4
 1265 0002 83B0     		sub	sp, sp, #12
 1266              	.LCFI55:
 1267              		.cfi_def_cfa_offset 16
 1268 0004 00AF     		add	r7, sp, #0
 1269              	.LCFI56:
 1270              		.cfi_def_cfa_register 7
 1271 0006 7860     		str	r0, [r7, #4]
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the data in the DR register */
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (uint8_t)I2Cx->DR;
 1272              		.loc 1 707 0
 1273 0008 7B68     		ldr	r3, [r7, #4]
 1274 000a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1275 000c 9BB2     		uxth	r3, r3
 1276 000e DBB2     		uxtb	r3, r3
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1277              		.loc 1 708 0
 1278 0010 1846     		mov	r0, r3
 1279 0012 0C37     		adds	r7, r7, #12
 1280 0014 BD46     		mov	sp, r7
 1281              		@ sp needed
 1282 0016 5DF8047B 		ldr	r7, [sp], #4
 1283 001a 7047     		bx	lr
 1284              		.cfi_endproc
 1285              	.LFE128:
 1287              		.section	.text.I2C_TransmitPEC,"ax",%progbits
 1288              		.align	2
 1289              		.global	I2C_TransmitPEC
 1290              		.thumb
 1291              		.thumb_func
 1293              	I2C_TransmitPEC:
 1294              	.LFB129:
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group3 PEC management functions
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   PEC management functions 
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                          PEC management functions
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C PEC transfer.
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C PEC transmission.
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1295              		.loc 1 734 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 8
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299              		@ link register save eliminated.
 1300 0000 80B4     		push	{r7}
 1301              	.LCFI57:
 1302              		.cfi_def_cfa_offset 4
 1303              		.cfi_offset 7, -4
 1304 0002 83B0     		sub	sp, sp, #12
 1305              	.LCFI58:
 1306              		.cfi_def_cfa_offset 16
 1307 0004 00AF     		add	r7, sp, #0
 1308              	.LCFI59:
 1309              		.cfi_def_cfa_register 7
 1310 0006 7860     		str	r0, [r7, #4]
 1311 0008 0B46     		mov	r3, r1
 1312 000a FB70     		strb	r3, [r7, #3]
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1313              		.loc 1 738 0
 1314 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1315 000e 002B     		cmp	r3, #0
 1316 0010 08D0     		beq	.L61
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC transmission */
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PEC;
 1317              		.loc 1 741 0
 1318 0012 7B68     		ldr	r3, [r7, #4]
 1319 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1320 0016 9BB2     		uxth	r3, r3
 1321 0018 43F48053 		orr	r3, r3, #4096
 1322 001c 9AB2     		uxth	r2, r3
 1323 001e 7B68     		ldr	r3, [r7, #4]
 1324 0020 1A80     		strh	r2, [r3]	@ movhi
 1325 0022 07E0     		b	.L60
 1326              	.L61:
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC transmission */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PEC);
 1327              		.loc 1 746 0
 1328 0024 7B68     		ldr	r3, [r7, #4]
 1329 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1330 0028 9BB2     		uxth	r3, r3
 1331 002a 23F48053 		bic	r3, r3, #4096
 1332 002e 9AB2     		uxth	r2, r3
 1333 0030 7B68     		ldr	r3, [r7, #4]
 1334 0032 1A80     		strh	r2, [r3]	@ movhi
 1335              	.L60:
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1336              		.loc 1 748 0
 1337 0034 0C37     		adds	r7, r7, #12
 1338 0036 BD46     		mov	sp, r7
 1339              		@ sp needed
 1340 0038 5DF8047B 		ldr	r7, [sp], #4
 1341 003c 7047     		bx	lr
 1342              		.cfi_endproc
 1343              	.LFE129:
 1345 003e 00BF     		.section	.text.I2C_PECPositionConfig,"ax",%progbits
 1346              		.align	2
 1347              		.global	I2C_PECPositionConfig
 1348              		.thumb
 1349              		.thumb_func
 1351              	I2C_PECPositionConfig:
 1352              	.LFB130:
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C PEC position.
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_PECPosition: specifies the PEC position. 
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Next: indicates that the next byte is PEC
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Current: indicates that current byte is PEC
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *       
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_NACKPositionConfig()
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in SMBUS mode while I2C_NACKPositionConfig() 
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in I2C mode.
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1353              		.loc 1 765 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 8
 1356              		@ frame_needed = 1, uses_anonymous_args = 0
 1357              		@ link register save eliminated.
 1358 0000 80B4     		push	{r7}
 1359              	.LCFI60:
 1360              		.cfi_def_cfa_offset 4
 1361              		.cfi_offset 7, -4
 1362 0002 83B0     		sub	sp, sp, #12
 1363              	.LCFI61:
 1364              		.cfi_def_cfa_offset 16
 1365 0004 00AF     		add	r7, sp, #0
 1366              	.LCFI62:
 1367              		.cfi_def_cfa_register 7
 1368 0006 7860     		str	r0, [r7, #4]
 1369 0008 0B46     		mov	r3, r1
 1370 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_PEC_POSITION(I2C_PECPosition));
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
 1371              		.loc 1 769 0
 1372 000c 7B88     		ldrh	r3, [r7, #2]
 1373 000e B3F5006F 		cmp	r3, #2048
 1374 0012 08D1     		bne	.L64
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is PEC */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_PECPosition_Next;
 1375              		.loc 1 772 0
 1376 0014 7B68     		ldr	r3, [r7, #4]
 1377 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1378 0018 9BB2     		uxth	r3, r3
 1379 001a 43F40063 		orr	r3, r3, #2048
 1380 001e 9AB2     		uxth	r2, r3
 1381 0020 7B68     		ldr	r3, [r7, #4]
 1382 0022 1A80     		strh	r2, [r3]	@ movhi
 1383 0024 07E0     		b	.L63
 1384              	.L64:
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is PEC */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_PECPosition_Current;
 1385              		.loc 1 777 0
 1386 0026 7B68     		ldr	r3, [r7, #4]
 1387 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1388 002a 9BB2     		uxth	r3, r3
 1389 002c 23F40063 		bic	r3, r3, #2048
 1390 0030 9AB2     		uxth	r2, r3
 1391 0032 7B68     		ldr	r3, [r7, #4]
 1392 0034 1A80     		strh	r2, [r3]	@ movhi
 1393              	.L63:
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1394              		.loc 1 779 0
 1395 0036 0C37     		adds	r7, r7, #12
 1396 0038 BD46     		mov	sp, r7
 1397              		@ sp needed
 1398 003a 5DF8047B 		ldr	r7, [sp], #4
 1399 003e 7047     		bx	lr
 1400              		.cfi_endproc
 1401              	.LFE130:
 1403              		.section	.text.I2C_CalculatePEC,"ax",%progbits
 1404              		.align	2
 1405              		.global	I2C_CalculatePEC
 1406              		.thumb
 1407              		.thumb_func
 1409              	I2C_CalculatePEC:
 1410              	.LFB131:
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the PEC value calculation of the transferred bytes.
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx PEC value calculation.
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1411              		.loc 1 789 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 8
 1414              		@ frame_needed = 1, uses_anonymous_args = 0
 1415              		@ link register save eliminated.
 1416 0000 80B4     		push	{r7}
 1417              	.LCFI63:
 1418              		.cfi_def_cfa_offset 4
 1419              		.cfi_offset 7, -4
 1420 0002 83B0     		sub	sp, sp, #12
 1421              	.LCFI64:
 1422              		.cfi_def_cfa_offset 16
 1423 0004 00AF     		add	r7, sp, #0
 1424              	.LCFI65:
 1425              		.cfi_def_cfa_register 7
 1426 0006 7860     		str	r0, [r7, #4]
 1427 0008 0B46     		mov	r3, r1
 1428 000a FB70     		strb	r3, [r7, #3]
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1429              		.loc 1 793 0
 1430 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1431 000e 002B     		cmp	r3, #0
 1432 0010 08D0     		beq	.L67
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC calculation */
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENPEC;
 1433              		.loc 1 796 0
 1434 0012 7B68     		ldr	r3, [r7, #4]
 1435 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1436 0016 9BB2     		uxth	r3, r3
 1437 0018 43F02003 		orr	r3, r3, #32
 1438 001c 9AB2     		uxth	r2, r3
 1439 001e 7B68     		ldr	r3, [r7, #4]
 1440 0020 1A80     		strh	r2, [r3]	@ movhi
 1441 0022 07E0     		b	.L66
 1442              	.L67:
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC calculation */
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENPEC);
 1443              		.loc 1 801 0
 1444 0024 7B68     		ldr	r3, [r7, #4]
 1445 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1446 0028 9BB2     		uxth	r3, r3
 1447 002a 23F02003 		bic	r3, r3, #32
 1448 002e 9AB2     		uxth	r2, r3
 1449 0030 7B68     		ldr	r3, [r7, #4]
 1450 0032 1A80     		strh	r2, [r3]	@ movhi
 1451              	.L66:
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1452              		.loc 1 803 0
 1453 0034 0C37     		adds	r7, r7, #12
 1454 0036 BD46     		mov	sp, r7
 1455              		@ sp needed
 1456 0038 5DF8047B 		ldr	r7, [sp], #4
 1457 003c 7047     		bx	lr
 1458              		.cfi_endproc
 1459              	.LFE131:
 1461 003e 00BF     		.section	.text.I2C_GetPEC,"ax",%progbits
 1462              		.align	2
 1463              		.global	I2C_GetPEC
 1464              		.thumb
 1465              		.thumb_func
 1467              	I2C_GetPEC:
 1468              	.LFB132:
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the PEC value for the specified I2C.
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The PEC value.
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1469              		.loc 1 811 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 8
 1472              		@ frame_needed = 1, uses_anonymous_args = 0
 1473              		@ link register save eliminated.
 1474 0000 80B4     		push	{r7}
 1475              	.LCFI66:
 1476              		.cfi_def_cfa_offset 4
 1477              		.cfi_offset 7, -4
 1478 0002 83B0     		sub	sp, sp, #12
 1479              	.LCFI67:
 1480              		.cfi_def_cfa_offset 16
 1481 0004 00AF     		add	r7, sp, #0
 1482              	.LCFI68:
 1483              		.cfi_def_cfa_register 7
 1484 0006 7860     		str	r0, [r7, #4]
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected I2C PEC value */
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return ((I2Cx->SR2) >> 8);
 1485              		.loc 1 815 0
 1486 0008 7B68     		ldr	r3, [r7, #4]
 1487 000a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1488 000c 9BB2     		uxth	r3, r3
 1489 000e 1B0A     		lsrs	r3, r3, #8
 1490 0010 9BB2     		uxth	r3, r3
 1491 0012 DBB2     		uxtb	r3, r3
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1492              		.loc 1 816 0
 1493 0014 1846     		mov	r0, r3
 1494 0016 0C37     		adds	r7, r7, #12
 1495 0018 BD46     		mov	sp, r7
 1496              		@ sp needed
 1497 001a 5DF8047B 		ldr	r7, [sp], #4
 1498 001e 7047     		bx	lr
 1499              		.cfi_endproc
 1500              	.LFE132:
 1502              		.section	.text.I2C_DMACmd,"ax",%progbits
 1503              		.align	2
 1504              		.global	I2C_DMACmd
 1505              		.thumb
 1506              		.thumb_func
 1508              	I2C_DMACmd:
 1509              	.LFB133:
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group4 DMA transfers management functions
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   DMA transfers management functions 
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                          DMA transfers management functions
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C DMA channels 
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   requests.
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C DMA requests.
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA transfer.
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1510              		.loc 1 844 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 8
 1513              		@ frame_needed = 1, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 1515 0000 80B4     		push	{r7}
 1516              	.LCFI69:
 1517              		.cfi_def_cfa_offset 4
 1518              		.cfi_offset 7, -4
 1519 0002 83B0     		sub	sp, sp, #12
 1520              	.LCFI70:
 1521              		.cfi_def_cfa_offset 16
 1522 0004 00AF     		add	r7, sp, #0
 1523              	.LCFI71:
 1524              		.cfi_def_cfa_register 7
 1525 0006 7860     		str	r0, [r7, #4]
 1526 0008 0B46     		mov	r3, r1
 1527 000a FB70     		strb	r3, [r7, #3]
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1528              		.loc 1 848 0
 1529 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1530 000e 002B     		cmp	r3, #0
 1531 0010 08D0     		beq	.L72
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C DMA requests */
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_DMAEN;
 1532              		.loc 1 851 0
 1533 0012 7B68     		ldr	r3, [r7, #4]
 1534 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1535 0016 9BB2     		uxth	r3, r3
 1536 0018 43F40063 		orr	r3, r3, #2048
 1537 001c 9AB2     		uxth	r2, r3
 1538 001e 7B68     		ldr	r3, [r7, #4]
 1539 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 1540 0022 07E0     		b	.L71
 1541              	.L72:
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C DMA requests */
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_DMAEN);
 1542              		.loc 1 856 0
 1543 0024 7B68     		ldr	r3, [r7, #4]
 1544 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1545 0028 9BB2     		uxth	r3, r3
 1546 002a 23F40063 		bic	r3, r3, #2048
 1547 002e 9AB2     		uxth	r2, r3
 1548 0030 7B68     		ldr	r3, [r7, #4]
 1549 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1550              	.L71:
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1551              		.loc 1 858 0
 1552 0034 0C37     		adds	r7, r7, #12
 1553 0036 BD46     		mov	sp, r7
 1554              		@ sp needed
 1555 0038 5DF8047B 		ldr	r7, [sp], #4
 1556 003c 7047     		bx	lr
 1557              		.cfi_endproc
 1558              	.LFE133:
 1560 003e 00BF     		.section	.text.I2C_DMALastTransferCmd,"ax",%progbits
 1561              		.align	2
 1562              		.global	I2C_DMALastTransferCmd
 1563              		.thumb
 1564              		.thumb_func
 1566              	I2C_DMALastTransferCmd:
 1567              	.LFB134:
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Specifies that the next DMA transfer is the last one.
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA last transfer.
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1568              		.loc 1 868 0
 1569              		.cfi_startproc
 1570              		@ args = 0, pretend = 0, frame = 8
 1571              		@ frame_needed = 1, uses_anonymous_args = 0
 1572              		@ link register save eliminated.
 1573 0000 80B4     		push	{r7}
 1574              	.LCFI72:
 1575              		.cfi_def_cfa_offset 4
 1576              		.cfi_offset 7, -4
 1577 0002 83B0     		sub	sp, sp, #12
 1578              	.LCFI73:
 1579              		.cfi_def_cfa_offset 16
 1580 0004 00AF     		add	r7, sp, #0
 1581              	.LCFI74:
 1582              		.cfi_def_cfa_register 7
 1583 0006 7860     		str	r0, [r7, #4]
 1584 0008 0B46     		mov	r3, r1
 1585 000a FB70     		strb	r3, [r7, #3]
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1586              		.loc 1 872 0
 1587 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1588 000e 002B     		cmp	r3, #0
 1589 0010 08D0     		beq	.L75
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is the last transfer */
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_LAST;
 1590              		.loc 1 875 0
 1591 0012 7B68     		ldr	r3, [r7, #4]
 1592 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1593 0016 9BB2     		uxth	r3, r3
 1594 0018 43F48053 		orr	r3, r3, #4096
 1595 001c 9AB2     		uxth	r2, r3
 1596 001e 7B68     		ldr	r3, [r7, #4]
 1597 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 1598 0022 07E0     		b	.L74
 1599              	.L75:
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is not the last transfer */
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_LAST);
 1600              		.loc 1 880 0
 1601 0024 7B68     		ldr	r3, [r7, #4]
 1602 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1603 0028 9BB2     		uxth	r3, r3
 1604 002a 23F48053 		bic	r3, r3, #4096
 1605 002e 9AB2     		uxth	r2, r3
 1606 0030 7B68     		ldr	r3, [r7, #4]
 1607 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1608              	.L74:
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1609              		.loc 1 882 0
 1610 0034 0C37     		adds	r7, r7, #12
 1611 0036 BD46     		mov	sp, r7
 1612              		@ sp needed
 1613 0038 5DF8047B 		ldr	r7, [sp], #4
 1614 003c 7047     		bx	lr
 1615              		.cfi_endproc
 1616              	.LFE134:
 1618 003e 00BF     		.section	.text.I2C_ReadRegister,"ax",%progbits
 1619              		.align	2
 1620              		.global	I2C_ReadRegister
 1621              		.thumb
 1622              		.thumb_func
 1624              	I2C_ReadRegister:
 1625              	.LFB135:
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group5 Interrupts events and flags management functions
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Interrupts, events and flags management functions
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                 Interrupts, events and flags management functions
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C Interrupts 
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   sources and check or clear the flags or pending bits status.
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   The user should identify which mode will be used in his application to manage 
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           I2C State Monitoring Functions                    
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================   
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This I2C driver provides three different ways for I2C state monitoring
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   depending on the application requirements and constraints:
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      1. Basic state monitoring (Using I2C_CheckEvent() function)
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -----------------------------------------------------------
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It compares the status registers (SR1 and SR2) content to a given event
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (can be the combination of one or more flags).
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It returns SUCCESS if the current status includes the given flags 
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         and returns ERROR if one or more flags are missing in the current status.
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - When to use
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - This function is suitable for most applications as well as for startup 
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                activity since the events are fully described in the product reference 
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                manual (RM0090).
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - It is also suitable for users who need to define their own events.
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - Limitations
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - If an error occurs (ie. error flags are set besides to the monitored 
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                flags), the I2C_CheckEvent() function may return SUCCESS despite 
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the communication hold or corrupted real state. 
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                In this case, it is advised to use error interrupts to monitor 
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the error events and handle them in the interrupt IRQ handler.
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      @note 
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          For error management, it is advised to use the following functions:
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2C_ITConfig() to configure and enable the error interrupts (I2C_IT_ERR).
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2Cx_ER_IRQHandler() which is called when the error interrupt occurs.
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              Where x is the peripheral instance (I2C1, I2C2 ...)
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2C_GetFlagStatus() or I2C_GetITStatus()  to be called into the 
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              I2Cx_ER_IRQHandler() function in order to determine which error occurred.
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2C_ClearFlag() or I2C_ClearITPendingBit() and/or I2C_SoftwareResetCmd() 
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              and/or I2C_GenerateStop() in order to clear the error flag and source 
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              and return to correct  communication status.
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      2. Advanced state monitoring (Using the function I2C_GetLastEvent())
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -------------------------------------------------------------------- 
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         Using the function I2C_GetLastEvent() which returns the image of both status 
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         registers in a single word (uint32_t) (Status Register 2 value is shifted left 
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         by 16 bits and concatenated to Status Register 1).
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - When to use
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - This function is suitable for the same applications above but it 
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                allows to overcome the mentioned limitation of I2C_GetFlagStatus() 
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function.
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - The returned value could be compared to events already defined in 
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the library (stm32f4xx_i2c.h) or to custom values defined by user.
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                This function is suitable when multiple flags are monitored at the 
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                same time.
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - At the opposite of I2C_CheckEvent() function, this function allows 
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                user to choose when an event is accepted (when all events flags are 
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                set and no other flags are set or just when the needed flags are set 
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                like I2C_CheckEvent() function.
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - Limitations
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - User may need to define his own events.
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - Same remark concerning the error management is applicable for this 
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function if user decides to check only regular communication flags 
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                (and ignores error flags).
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      3. Flag-based state monitoring (Using the function I2C_GetFlagStatus())
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -----------------------------------------------------------------------
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       Using the function I2C_GetFlagStatus() which simply returns the status of 
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       one single flag (ie. I2C_FLAG_RXNE ...). 
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - When to use
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - This function could be used for specific applications or in debug 
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                phase.
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - It is suitable when only one flag checking is needed (most I2C 
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                events are monitored through multiple flags).
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - Limitations: 
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - When calling this function, the Status register is accessed. 
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                Some flags are cleared when the status register is accessed. 
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                So checking the status of one Flag, may clear other ones.
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - Function may need to be called twice or more in order to monitor 
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                one single event.
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    For detailed description of Events, please refer to section I2C_Events in 
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    stm32f4xx_i2c.h file.
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****        
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Reads the specified I2C register and returns its value.
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Register: specifies the register to read.
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR1:  CR1 register.
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR2:   CR2 register.
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR1:  OAR1 register.
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR2:  OAR2 register.
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_DR:    DR register.
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR1:   SR1 register.
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR2:   SR2 register.
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CCR:   CCR register.
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_TRISE: TRISE register.
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the read register.
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1626              		.loc 1 1006 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 16
 1629              		@ frame_needed = 1, uses_anonymous_args = 0
 1630              		@ link register save eliminated.
 1631 0000 80B4     		push	{r7}
 1632              	.LCFI75:
 1633              		.cfi_def_cfa_offset 4
 1634              		.cfi_offset 7, -4
 1635 0002 85B0     		sub	sp, sp, #20
 1636              	.LCFI76:
 1637              		.cfi_def_cfa_offset 24
 1638 0004 00AF     		add	r7, sp, #0
 1639              	.LCFI77:
 1640              		.cfi_def_cfa_register 7
 1641 0006 7860     		str	r0, [r7, #4]
 1642 0008 0B46     		mov	r3, r1
 1643 000a FB70     		strb	r3, [r7, #3]
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
 1644              		.loc 1 1007 0
 1645 000c 0023     		movs	r3, #0
 1646 000e FB60     		str	r3, [r7, #12]
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp = (uint32_t) I2Cx;
 1647              		.loc 1 1013 0
 1648 0010 7B68     		ldr	r3, [r7, #4]
 1649 0012 FB60     		str	r3, [r7, #12]
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp += I2C_Register;
 1650              		.loc 1 1014 0
 1651 0014 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1652 0016 FB68     		ldr	r3, [r7, #12]
 1653 0018 1344     		add	r3, r3, r2
 1654 001a FB60     		str	r3, [r7, #12]
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected register value */
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (*(__IO uint16_t *) tmp);
 1655              		.loc 1 1017 0
 1656 001c FB68     		ldr	r3, [r7, #12]
 1657 001e 1B88     		ldrh	r3, [r3]	@ movhi
 1658 0020 9BB2     		uxth	r3, r3
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1659              		.loc 1 1018 0
 1660 0022 1846     		mov	r0, r3
 1661 0024 1437     		adds	r7, r7, #20
 1662 0026 BD46     		mov	sp, r7
 1663              		@ sp needed
 1664 0028 5DF8047B 		ldr	r7, [sp], #4
 1665 002c 7047     		bx	lr
 1666              		.cfi_endproc
 1667              	.LFE135:
 1669 002e 00BF     		.section	.text.I2C_ITConfig,"ax",%progbits
 1670              		.align	2
 1671              		.global	I2C_ITConfig
 1672              		.thumb
 1673              		.thumb_func
 1675              	I2C_ITConfig:
 1676              	.LFB136:
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C interrupts.
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the I2C interrupts sources to be enabled or disabled. 
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BUF: Buffer interrupt mask
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_EVT: Event interrupt mask
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ERR: Error interrupt mask
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the specified I2C interrupts.
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1677              		.loc 1 1033 0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 8
 1680              		@ frame_needed = 1, uses_anonymous_args = 0
 1681              		@ link register save eliminated.
 1682 0000 80B4     		push	{r7}
 1683              	.LCFI78:
 1684              		.cfi_def_cfa_offset 4
 1685              		.cfi_offset 7, -4
 1686 0002 83B0     		sub	sp, sp, #12
 1687              	.LCFI79:
 1688              		.cfi_def_cfa_offset 16
 1689 0004 00AF     		add	r7, sp, #0
 1690              	.LCFI80:
 1691              		.cfi_def_cfa_register 7
 1692 0006 7860     		str	r0, [r7, #4]
 1693 0008 1346     		mov	r3, r2
 1694 000a 0A46     		mov	r2, r1	@ movhi
 1695 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1696 000e 7B70     		strb	r3, [r7, #1]
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CONFIG_IT(I2C_IT));
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1697              		.loc 1 1039 0
 1698 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1699 0012 002B     		cmp	r3, #0
 1700 0014 08D0     		beq	.L80
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C interrupts */
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_IT;
 1701              		.loc 1 1042 0
 1702 0016 7B68     		ldr	r3, [r7, #4]
 1703 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1704 001a 9AB2     		uxth	r2, r3
 1705 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1706 001e 1343     		orrs	r3, r3, r2
 1707 0020 9AB2     		uxth	r2, r3
 1708 0022 7B68     		ldr	r3, [r7, #4]
 1709 0024 9A80     		strh	r2, [r3, #4]	@ movhi
 1710 0026 09E0     		b	.L79
 1711              	.L80:
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C interrupts */
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~I2C_IT;
 1712              		.loc 1 1047 0
 1713 0028 7B68     		ldr	r3, [r7, #4]
 1714 002a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1715 002c 9AB2     		uxth	r2, r3
 1716 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1717 0030 DB43     		mvns	r3, r3
 1718 0032 9BB2     		uxth	r3, r3
 1719 0034 1340     		ands	r3, r3, r2
 1720 0036 9AB2     		uxth	r2, r3
 1721 0038 7B68     		ldr	r3, [r7, #4]
 1722 003a 9A80     		strh	r2, [r3, #4]	@ movhi
 1723              	.L79:
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1724              		.loc 1 1049 0
 1725 003c 0C37     		adds	r7, r7, #12
 1726 003e BD46     		mov	sp, r7
 1727              		@ sp needed
 1728 0040 5DF8047B 		ldr	r7, [sp], #4
 1729 0044 7047     		bx	lr
 1730              		.cfi_endproc
 1731              	.LFE136:
 1733 0046 00BF     		.section	.text.I2C_CheckEvent,"ax",%progbits
 1734              		.align	2
 1735              		.global	I2C_CheckEvent
 1736              		.thumb
 1737              		.thumb_func
 1739              	I2C_CheckEvent:
 1740              	.LFB137:
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           1. Basic state monitoring                    
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the last I2Cx Event is equal to the one passed
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         as parameter.
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_EVENT: specifies the event to be checked. 
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED: EV1
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED: EV1
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED: EV1
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED: EV1
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED: EV1
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_RECEIVED: EV2
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF): EV2
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL): EV2
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_TRANSMITTED: EV3
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF): EV3
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL): EV3
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_ACK_FAILURE: EV3_2
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_STOP_DETECTED: EV4
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_SELECT: EV5
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED: EV6     
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED: EV6
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_RECEIVED: EV7
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTING: EV8
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTED: EV8_2
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_ADDRESS10: EV9
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval An ErrorStatus enumeration value:
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - SUCCESS: Last event is equal to the I2C_EVENT
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - ERROR: Last event is different from the I2C_EVENT
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1741              		.loc 1 1092 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 24
 1744              		@ frame_needed = 1, uses_anonymous_args = 0
 1745              		@ link register save eliminated.
 1746 0000 80B4     		push	{r7}
 1747              	.LCFI81:
 1748              		.cfi_def_cfa_offset 4
 1749              		.cfi_offset 7, -4
 1750 0002 87B0     		sub	sp, sp, #28
 1751              	.LCFI82:
 1752              		.cfi_def_cfa_offset 32
 1753 0004 00AF     		add	r7, sp, #0
 1754              	.LCFI83:
 1755              		.cfi_def_cfa_register 7
 1756 0006 7860     		str	r0, [r7, #4]
 1757 0008 3960     		str	r1, [r7]
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 1758              		.loc 1 1093 0
 1759 000a 0023     		movs	r3, #0
 1760 000c 3B61     		str	r3, [r7, #16]
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 1761              		.loc 1 1094 0
 1762 000e 0023     		movs	r3, #0
 1763 0010 FB60     		str	r3, [r7, #12]
 1764 0012 0023     		movs	r3, #0
 1765 0014 BB60     		str	r3, [r7, #8]
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ErrorStatus status = ERROR;
 1766              		.loc 1 1095 0
 1767 0016 0023     		movs	r3, #0
 1768 0018 FB75     		strb	r3, [r7, #23]
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_EVENT(I2C_EVENT));
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1769              		.loc 1 1102 0
 1770 001a 7B68     		ldr	r3, [r7, #4]
 1771 001c 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1772 001e 9BB2     		uxth	r3, r3
 1773 0020 FB60     		str	r3, [r7, #12]
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1774              		.loc 1 1103 0
 1775 0022 7B68     		ldr	r3, [r7, #4]
 1776 0024 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1777 0026 9BB2     		uxth	r3, r3
 1778 0028 BB60     		str	r3, [r7, #8]
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 1779              		.loc 1 1104 0
 1780 002a BB68     		ldr	r3, [r7, #8]
 1781 002c 1B04     		lsls	r3, r3, #16
 1782 002e BB60     		str	r3, [r7, #8]
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1783              		.loc 1 1107 0
 1784 0030 FA68     		ldr	r2, [r7, #12]
 1785 0032 BB68     		ldr	r3, [r7, #8]
 1786 0034 1343     		orrs	r3, r3, r2
 1787 0036 23F07F43 		bic	r3, r3, #-16777216
 1788 003a 3B61     		str	r3, [r7, #16]
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check whether the last event contains the I2C_EVENT */
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if ((lastevent & I2C_EVENT) == I2C_EVENT)
 1789              		.loc 1 1110 0
 1790 003c 3A69     		ldr	r2, [r7, #16]
 1791 003e 3B68     		ldr	r3, [r7]
 1792 0040 1A40     		ands	r2, r2, r3
 1793 0042 3B68     		ldr	r3, [r7]
 1794 0044 9A42     		cmp	r2, r3
 1795 0046 02D1     		bne	.L83
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* SUCCESS: last event is equal to I2C_EVENT */
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = SUCCESS;
 1796              		.loc 1 1113 0
 1797 0048 0123     		movs	r3, #1
 1798 004a FB75     		strb	r3, [r7, #23]
 1799 004c 01E0     		b	.L84
 1800              	.L83:
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* ERROR: last event is different from I2C_EVENT */
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = ERROR;
 1801              		.loc 1 1118 0
 1802 004e 0023     		movs	r3, #0
 1803 0050 FB75     		strb	r3, [r7, #23]
 1804              	.L84:
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return status;
 1805              		.loc 1 1121 0
 1806 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1807              		.loc 1 1122 0
 1808 0054 1846     		mov	r0, r3
 1809 0056 1C37     		adds	r7, r7, #28
 1810 0058 BD46     		mov	sp, r7
 1811              		@ sp needed
 1812 005a 5DF8047B 		ldr	r7, [sp], #4
 1813 005e 7047     		bx	lr
 1814              		.cfi_endproc
 1815              	.LFE137:
 1817              		.section	.text.I2C_GetLastEvent,"ax",%progbits
 1818              		.align	2
 1819              		.global	I2C_GetLastEvent
 1820              		.thumb
 1821              		.thumb_func
 1823              	I2C_GetLastEvent:
 1824              	.LFB138:
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           2. Advanced state monitoring                   
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the last I2Cx Event.
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The last event
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx)
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1825              		.loc 1 1140 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 24
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
 1830 0000 80B4     		push	{r7}
 1831              	.LCFI84:
 1832              		.cfi_def_cfa_offset 4
 1833              		.cfi_offset 7, -4
 1834 0002 87B0     		sub	sp, sp, #28
 1835              	.LCFI85:
 1836              		.cfi_def_cfa_offset 32
 1837 0004 00AF     		add	r7, sp, #0
 1838              	.LCFI86:
 1839              		.cfi_def_cfa_register 7
 1840 0006 7860     		str	r0, [r7, #4]
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 1841              		.loc 1 1141 0
 1842 0008 0023     		movs	r3, #0
 1843 000a 7B61     		str	r3, [r7, #20]
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 1844              		.loc 1 1142 0
 1845 000c 0023     		movs	r3, #0
 1846 000e 3B61     		str	r3, [r7, #16]
 1847 0010 0023     		movs	r3, #0
 1848 0012 FB60     		str	r3, [r7, #12]
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1849              		.loc 1 1148 0
 1850 0014 7B68     		ldr	r3, [r7, #4]
 1851 0016 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1852 0018 9BB2     		uxth	r3, r3
 1853 001a 3B61     		str	r3, [r7, #16]
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1854              		.loc 1 1149 0
 1855 001c 7B68     		ldr	r3, [r7, #4]
 1856 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1857 0020 9BB2     		uxth	r3, r3
 1858 0022 FB60     		str	r3, [r7, #12]
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 1859              		.loc 1 1150 0
 1860 0024 FB68     		ldr	r3, [r7, #12]
 1861 0026 1B04     		lsls	r3, r3, #16
 1862 0028 FB60     		str	r3, [r7, #12]
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1863              		.loc 1 1153 0
 1864 002a 3A69     		ldr	r2, [r7, #16]
 1865 002c FB68     		ldr	r3, [r7, #12]
 1866 002e 1343     		orrs	r3, r3, r2
 1867 0030 23F07F43 		bic	r3, r3, #-16777216
 1868 0034 7B61     		str	r3, [r7, #20]
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return lastevent;
 1869              		.loc 1 1156 0
 1870 0036 7B69     		ldr	r3, [r7, #20]
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1871              		.loc 1 1157 0
 1872 0038 1846     		mov	r0, r3
 1873 003a 1C37     		adds	r7, r7, #28
 1874 003c BD46     		mov	sp, r7
 1875              		@ sp needed
 1876 003e 5DF8047B 		ldr	r7, [sp], #4
 1877 0042 7047     		bx	lr
 1878              		.cfi_endproc
 1879              	.LFE138:
 1881              		.section	.text.I2C_GetFlagStatus,"ax",%progbits
 1882              		.align	2
 1883              		.global	I2C_GetFlagStatus
 1884              		.thumb
 1885              		.thumb_func
 1887              	I2C_GetFlagStatus:
 1888              	.LFB139:
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           3. Flag-based state monitoring                   
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C flag is set or not.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to check. 
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_DUALF: Dual flag (Slave mode)
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBHOST: SMBus host header (Slave mode)
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBDEFAULT: SMBus default header (Slave mode)
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_GENCALL: General call header flag (Slave mode)
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TRA: Transmitter/Receiver flag
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BUSY: Bus busy flag
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_MSL: Master/Slave flag
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TXE: Data register empty flag (Transmitter)
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_RXNE: Data register not empty (Receiver) flag
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_STOPF: Stop detection flag (Slave mode)
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADD10: 10-bit header sent flag (Master mode)
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BTF: Byte transfer finished flag
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address sent flag (Master mode) "ADSL"
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                Address matched flag (Slave mode)"ENDAD"
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SB: Start bit flag (Master mode)
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1889              		.loc 1 1195 0
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 24
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893              		@ link register save eliminated.
 1894 0000 80B4     		push	{r7}
 1895              	.LCFI87:
 1896              		.cfi_def_cfa_offset 4
 1897              		.cfi_offset 7, -4
 1898 0002 87B0     		sub	sp, sp, #28
 1899              	.LCFI88:
 1900              		.cfi_def_cfa_offset 32
 1901 0004 00AF     		add	r7, sp, #0
 1902              	.LCFI89:
 1903              		.cfi_def_cfa_register 7
 1904 0006 7860     		str	r0, [r7, #4]
 1905 0008 3960     		str	r1, [r7]
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
 1906              		.loc 1 1196 0
 1907 000a 0023     		movs	r3, #0
 1908 000c FB75     		strb	r3, [r7, #23]
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t i2creg = 0, i2cxbase = 0;
 1909              		.loc 1 1197 0
 1910 000e 0023     		movs	r3, #0
 1911 0010 3B61     		str	r3, [r7, #16]
 1912 0012 0023     		movs	r3, #0
 1913 0014 FB60     		str	r3, [r7, #12]
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_FLAG(I2C_FLAG));
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx peripheral base address */
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2cxbase = (uint32_t)I2Cx;
 1914              		.loc 1 1204 0
 1915 0016 7B68     		ldr	r3, [r7, #4]
 1916 0018 FB60     		str	r3, [r7, #12]
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read flag register index */
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2creg = I2C_FLAG >> 28;
 1917              		.loc 1 1207 0
 1918 001a 3B68     		ldr	r3, [r7]
 1919 001c 1B0F     		lsrs	r3, r3, #28
 1920 001e 3B61     		str	r3, [r7, #16]
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_FLAG &= FLAG_MASK;
 1921              		.loc 1 1210 0
 1922 0020 3B68     		ldr	r3, [r7]
 1923 0022 23F07F43 		bic	r3, r3, #-16777216
 1924 0026 3B60     		str	r3, [r7]
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(i2creg != 0)
 1925              		.loc 1 1212 0
 1926 0028 3B69     		ldr	r3, [r7, #16]
 1927 002a 002B     		cmp	r3, #0
 1928 002c 03D0     		beq	.L89
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR1 register address */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x14;
 1929              		.loc 1 1215 0
 1930 002e FB68     		ldr	r3, [r7, #12]
 1931 0030 1433     		adds	r3, r3, #20
 1932 0032 FB60     		str	r3, [r7, #12]
 1933 0034 05E0     		b	.L90
 1934              	.L89:
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Flag in I2Cx SR2 Register */
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2C_FLAG = (uint32_t)(I2C_FLAG >> 16);
 1935              		.loc 1 1220 0
 1936 0036 3B68     		ldr	r3, [r7]
 1937 0038 1B0C     		lsrs	r3, r3, #16
 1938 003a 3B60     		str	r3, [r7]
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x18;
 1939              		.loc 1 1222 0
 1940 003c FB68     		ldr	r3, [r7, #12]
 1941 003e 1833     		adds	r3, r3, #24
 1942 0040 FB60     		str	r3, [r7, #12]
 1943              	.L90:
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(((*(__IO uint32_t *)i2cxbase) & I2C_FLAG) != (uint32_t)RESET)
 1944              		.loc 1 1225 0
 1945 0042 FB68     		ldr	r3, [r7, #12]
 1946 0044 1A68     		ldr	r2, [r3]
 1947 0046 3B68     		ldr	r3, [r7]
 1948 0048 1340     		ands	r3, r3, r2
 1949 004a 002B     		cmp	r3, #0
 1950 004c 02D0     		beq	.L91
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is set */
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
 1951              		.loc 1 1228 0
 1952 004e 0123     		movs	r3, #1
 1953 0050 FB75     		strb	r3, [r7, #23]
 1954 0052 01E0     		b	.L92
 1955              	.L91:
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is reset */
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
 1956              		.loc 1 1233 0
 1957 0054 0023     		movs	r3, #0
 1958 0056 FB75     		strb	r3, [r7, #23]
 1959              	.L92:
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_FLAG status */
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
 1960              		.loc 1 1237 0
 1961 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1962              		.loc 1 1238 0
 1963 005a 1846     		mov	r0, r3
 1964 005c 1C37     		adds	r7, r7, #28
 1965 005e BD46     		mov	sp, r7
 1966              		@ sp needed
 1967 0060 5DF8047B 		ldr	r7, [sp], #4
 1968 0064 7047     		bx	lr
 1969              		.cfi_endproc
 1970              	.LFE139:
 1972 0066 00BF     		.section	.text.I2C_ClearFlag,"ax",%progbits
 1973              		.align	2
 1974              		.global	I2C_ClearFlag
 1975              		.thumb
 1976              		.thumb_func
 1978              	I2C_ClearFlag:
 1979              	.LFB140:
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's pending flags.
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to clear. 
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *   
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetFlagStatus()) followed by a write operation 
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetFlagStatus()) followed by writing the 
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          second byte of the address in DR register.
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetFlagStatus()) followed by a 
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetFlagStatus()) followed by a read operation to 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared software sequence: a read operation to I2C_SR1
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_GetFlagStatus()) followed by a write operation to I2C_DR
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_SendData()).
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1980              		.loc 1 1272 0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 16
 1983              		@ frame_needed = 1, uses_anonymous_args = 0
 1984              		@ link register save eliminated.
 1985 0000 80B4     		push	{r7}
 1986              	.LCFI90:
 1987              		.cfi_def_cfa_offset 4
 1988              		.cfi_offset 7, -4
 1989 0002 85B0     		sub	sp, sp, #20
 1990              	.LCFI91:
 1991              		.cfi_def_cfa_offset 24
 1992 0004 00AF     		add	r7, sp, #0
 1993              	.LCFI92:
 1994              		.cfi_def_cfa_register 7
 1995 0006 7860     		str	r0, [r7, #4]
 1996 0008 3960     		str	r1, [r7]
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 1997              		.loc 1 1273 0
 1998 000a 0023     		movs	r3, #0
 1999 000c FB60     		str	r3, [r7, #12]
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_FLAG(I2C_FLAG));
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_FLAG & FLAG_MASK;
 2000              		.loc 1 1278 0
 2001 000e 3B68     		ldr	r3, [r7]
 2002 0010 23F07F43 		bic	r3, r3, #-16777216
 2003 0014 FB60     		str	r3, [r7, #12]
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 2004              		.loc 1 1280 0
 2005 0016 FB68     		ldr	r3, [r7, #12]
 2006 0018 9BB2     		uxth	r3, r3
 2007 001a DB43     		mvns	r3, r3
 2008 001c 9AB2     		uxth	r2, r3
 2009 001e 7B68     		ldr	r3, [r7, #4]
 2010 0020 9A82     		strh	r2, [r3, #20]	@ movhi
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2011              		.loc 1 1281 0
 2012 0022 1437     		adds	r7, r7, #20
 2013 0024 BD46     		mov	sp, r7
 2014              		@ sp needed
 2015 0026 5DF8047B 		ldr	r7, [sp], #4
 2016 002a 7047     		bx	lr
 2017              		.cfi_endproc
 2018              	.LFE140:
 2020              		.section	.text.I2C_GetITStatus,"ax",%progbits
 2021              		.align	2
 2022              		.global	I2C_GetITStatus
 2023              		.thumb
 2024              		.thumb_func
 2026              	I2C_GetITStatus:
 2027              	.LFB141:
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C interrupt has occurred or not.
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt source to check. 
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert flag
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error flag
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception flag
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun flag (Slave mode)
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure flag
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost flag (Master mode)
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error flag
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TXE: Data register empty flag (Transmitter)
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_RXNE: Data register not empty (Receiver) flag
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_STOPF: Stop detection flag (Slave mode)
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADD10: 10-bit header sent flag (Master mode)
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BTF: Byte transfer finished flag
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADDR: Address sent flag (Master mode) "ADSL"
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                              Address matched flag (Slave mode)"ENDAD"
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SB: Start bit flag (Master mode)
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2028              		.loc 1 1306 0
 2029              		.cfi_startproc
 2030              		@ args = 0, pretend = 0, frame = 16
 2031              		@ frame_needed = 1, uses_anonymous_args = 0
 2032              		@ link register save eliminated.
 2033 0000 80B4     		push	{r7}
 2034              	.LCFI93:
 2035              		.cfi_def_cfa_offset 4
 2036              		.cfi_offset 7, -4
 2037 0002 85B0     		sub	sp, sp, #20
 2038              	.LCFI94:
 2039              		.cfi_def_cfa_offset 24
 2040 0004 00AF     		add	r7, sp, #0
 2041              	.LCFI95:
 2042              		.cfi_def_cfa_register 7
 2043 0006 7860     		str	r0, [r7, #4]
 2044 0008 3960     		str	r1, [r7]
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ITStatus bitstatus = RESET;
 2045              		.loc 1 1307 0
 2046 000a 0023     		movs	r3, #0
 2047 000c FB73     		strb	r3, [r7, #15]
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t enablestatus = 0;
 2048              		.loc 1 1308 0
 2049 000e 0023     		movs	r3, #0
 2050 0010 BB60     		str	r3, [r7, #8]
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_IT(I2C_IT));
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check if the interrupt source is enabled or not */
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 2051              		.loc 1 1315 0
 2052 0012 3B68     		ldr	r3, [r7]
 2053 0014 03F0E063 		and	r3, r3, #117440512
 2054 0018 1A0C     		lsrs	r2, r3, #16
 2055 001a 7B68     		ldr	r3, [r7, #4]
 2056 001c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2057 001e 9BB2     		uxth	r3, r3
 2058 0020 1340     		ands	r3, r3, r2
 2059 0022 BB60     		str	r3, [r7, #8]
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_IT &= FLAG_MASK;
 2060              		.loc 1 1318 0
 2061 0024 3B68     		ldr	r3, [r7]
 2062 0026 23F07F43 		bic	r3, r3, #-16777216
 2063 002a 3B60     		str	r3, [r7]
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the status of the specified I2C flag */
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (((I2Cx->SR1 & I2C_IT) != (uint32_t)RESET) && enablestatus)
 2064              		.loc 1 1321 0
 2065 002c 7B68     		ldr	r3, [r7, #4]
 2066 002e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 2067 0030 9BB2     		uxth	r3, r3
 2068 0032 1A46     		mov	r2, r3
 2069 0034 3B68     		ldr	r3, [r7]
 2070 0036 1340     		ands	r3, r3, r2
 2071 0038 002B     		cmp	r3, #0
 2072 003a 05D0     		beq	.L96
 2073              		.loc 1 1321 0 is_stmt 0 discriminator 1
 2074 003c BB68     		ldr	r3, [r7, #8]
 2075 003e 002B     		cmp	r3, #0
 2076 0040 02D0     		beq	.L96
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is set */
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
 2077              		.loc 1 1324 0 is_stmt 1
 2078 0042 0123     		movs	r3, #1
 2079 0044 FB73     		strb	r3, [r7, #15]
 2080 0046 01E0     		b	.L97
 2081              	.L96:
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is reset */
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
 2082              		.loc 1 1329 0
 2083 0048 0023     		movs	r3, #0
 2084 004a FB73     		strb	r3, [r7, #15]
 2085              	.L97:
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_IT status */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
 2086              		.loc 1 1332 0
 2087 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2088              		.loc 1 1333 0
 2089 004e 1846     		mov	r0, r3
 2090 0050 1437     		adds	r7, r7, #20
 2091 0052 BD46     		mov	sp, r7
 2092              		@ sp needed
 2093 0054 5DF8047B 		ldr	r7, [sp], #4
 2094 0058 7047     		bx	lr
 2095              		.cfi_endproc
 2096              	.LFE141:
 2098 005a 00BF     		.section	.text.I2C_ClearITPendingBit,"ax",%progbits
 2099              		.align	2
 2100              		.global	I2C_ClearITPendingBit
 2101              		.thumb
 2102              		.thumb_func
 2104              	I2C_ClearITPendingBit:
 2105              	.LFB142:
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's interrupt pending bits.
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt pending bit to clear. 
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert interrupt
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error interrupt
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception  interrupt
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun interrupt (Slave mode)
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure interrupt
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost interrupt (Master mode)
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error interrupt
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetITStatus()) followed by writing the second 
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          byte of the address in I2C_DR register.
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetITStatus()) followed by a 
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a read operation to 
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared by software sequence: a read operation to 
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_DR register (I2C_SendData()).
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2106              		.loc 1 1366 0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 16
 2109              		@ frame_needed = 1, uses_anonymous_args = 0
 2110              		@ link register save eliminated.
 2111 0000 80B4     		push	{r7}
 2112              	.LCFI96:
 2113              		.cfi_def_cfa_offset 4
 2114              		.cfi_offset 7, -4
 2115 0002 85B0     		sub	sp, sp, #20
 2116              	.LCFI97:
 2117              		.cfi_def_cfa_offset 24
 2118 0004 00AF     		add	r7, sp, #0
 2119              	.LCFI98:
 2120              		.cfi_def_cfa_register 7
 2121 0006 7860     		str	r0, [r7, #4]
 2122 0008 3960     		str	r1, [r7]
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 2123              		.loc 1 1367 0
 2124 000a 0023     		movs	r3, #0
 2125 000c FB60     		str	r3, [r7, #12]
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_IT(I2C_IT));
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_IT & FLAG_MASK;
 2126              		.loc 1 1373 0
 2127 000e 3B68     		ldr	r3, [r7]
 2128 0010 23F07F43 		bic	r3, r3, #-16777216
 2129 0014 FB60     		str	r3, [r7, #12]
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 2130              		.loc 1 1376 0
 2131 0016 FB68     		ldr	r3, [r7, #12]
 2132 0018 9BB2     		uxth	r3, r3
 2133 001a DB43     		mvns	r3, r3
 2134 001c 9AB2     		uxth	r2, r3
 2135 001e 7B68     		ldr	r3, [r7, #4]
 2136 0020 9A82     		strh	r2, [r3, #20]	@ movhi
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2137              		.loc 1 1377 0
 2138 0022 1437     		adds	r7, r7, #20
 2139 0024 BD46     		mov	sp, r7
 2140              		@ sp needed
 2141 0026 5DF8047B 		ldr	r7, [sp], #4
 2142 002a 7047     		bx	lr
 2143              		.cfi_endproc
 2144              	.LFE142:
 2146              		.text
 2147              	.Letext0:
 2148              		.file 2 "/home/shihyu/data/STM32F4/gcc-arm-none-eabi-4_8-2013q4/arm-none-eabi/include/stdint.h"
 2149              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 2150              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 2151              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
 2152              		.file 6 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_i2c.c
     /tmp/ccBhI8tk.s:20     .text.I2C_DeInit:00000000 $t
     /tmp/ccBhI8tk.s:25     .text.I2C_DeInit:00000000 I2C_DeInit
     /tmp/ccBhI8tk.s:96     .text.I2C_DeInit:00000068 $d
     /tmp/ccBhI8tk.s:103    .text.I2C_Init:00000000 $t
     /tmp/ccBhI8tk.s:108    .text.I2C_Init:00000000 I2C_Init
     /tmp/ccBhI8tk.s:331    .text.I2C_Init:00000174 $d
     /tmp/ccBhI8tk.s:339    .text.I2C_StructInit:00000000 $t
     /tmp/ccBhI8tk.s:344    .text.I2C_StructInit:00000000 I2C_StructInit
     /tmp/ccBhI8tk.s:396    .text.I2C_Cmd:00000000 $t
     /tmp/ccBhI8tk.s:401    .text.I2C_Cmd:00000000 I2C_Cmd
     /tmp/ccBhI8tk.s:454    .text.I2C_GenerateSTART:00000000 $t
     /tmp/ccBhI8tk.s:459    .text.I2C_GenerateSTART:00000000 I2C_GenerateSTART
     /tmp/ccBhI8tk.s:512    .text.I2C_GenerateSTOP:00000000 $t
     /tmp/ccBhI8tk.s:517    .text.I2C_GenerateSTOP:00000000 I2C_GenerateSTOP
     /tmp/ccBhI8tk.s:570    .text.I2C_Send7bitAddress:00000000 $t
     /tmp/ccBhI8tk.s:575    .text.I2C_Send7bitAddress:00000000 I2C_Send7bitAddress
     /tmp/ccBhI8tk.s:627    .text.I2C_AcknowledgeConfig:00000000 $t
     /tmp/ccBhI8tk.s:632    .text.I2C_AcknowledgeConfig:00000000 I2C_AcknowledgeConfig
     /tmp/ccBhI8tk.s:685    .text.I2C_OwnAddress2Config:00000000 $t
     /tmp/ccBhI8tk.s:690    .text.I2C_OwnAddress2Config:00000000 I2C_OwnAddress2Config
     /tmp/ccBhI8tk.s:744    .text.I2C_DualAddressCmd:00000000 $t
     /tmp/ccBhI8tk.s:749    .text.I2C_DualAddressCmd:00000000 I2C_DualAddressCmd
     /tmp/ccBhI8tk.s:802    .text.I2C_GeneralCallCmd:00000000 $t
     /tmp/ccBhI8tk.s:807    .text.I2C_GeneralCallCmd:00000000 I2C_GeneralCallCmd
     /tmp/ccBhI8tk.s:860    .text.I2C_SoftwareResetCmd:00000000 $t
     /tmp/ccBhI8tk.s:865    .text.I2C_SoftwareResetCmd:00000000 I2C_SoftwareResetCmd
     /tmp/ccBhI8tk.s:919    .text.I2C_StretchClockCmd:00000000 $t
     /tmp/ccBhI8tk.s:924    .text.I2C_StretchClockCmd:00000000 I2C_StretchClockCmd
     /tmp/ccBhI8tk.s:977    .text.I2C_FastModeDutyCycleConfig:00000000 $t
     /tmp/ccBhI8tk.s:982    .text.I2C_FastModeDutyCycleConfig:00000000 I2C_FastModeDutyCycleConfig
     /tmp/ccBhI8tk.s:1035   .text.I2C_NACKPositionConfig:00000000 $t
     /tmp/ccBhI8tk.s:1040   .text.I2C_NACKPositionConfig:00000000 I2C_NACKPositionConfig
     /tmp/ccBhI8tk.s:1093   .text.I2C_SMBusAlertConfig:00000000 $t
     /tmp/ccBhI8tk.s:1098   .text.I2C_SMBusAlertConfig:00000000 I2C_SMBusAlertConfig
     /tmp/ccBhI8tk.s:1151   .text.I2C_ARPCmd:00000000 $t
     /tmp/ccBhI8tk.s:1156   .text.I2C_ARPCmd:00000000 I2C_ARPCmd
     /tmp/ccBhI8tk.s:1209   .text.I2C_SendData:00000000 $t
     /tmp/ccBhI8tk.s:1214   .text.I2C_SendData:00000000 I2C_SendData
     /tmp/ccBhI8tk.s:1249   .text.I2C_ReceiveData:00000000 $t
     /tmp/ccBhI8tk.s:1254   .text.I2C_ReceiveData:00000000 I2C_ReceiveData
     /tmp/ccBhI8tk.s:1288   .text.I2C_TransmitPEC:00000000 $t
     /tmp/ccBhI8tk.s:1293   .text.I2C_TransmitPEC:00000000 I2C_TransmitPEC
     /tmp/ccBhI8tk.s:1346   .text.I2C_PECPositionConfig:00000000 $t
     /tmp/ccBhI8tk.s:1351   .text.I2C_PECPositionConfig:00000000 I2C_PECPositionConfig
     /tmp/ccBhI8tk.s:1404   .text.I2C_CalculatePEC:00000000 $t
     /tmp/ccBhI8tk.s:1409   .text.I2C_CalculatePEC:00000000 I2C_CalculatePEC
     /tmp/ccBhI8tk.s:1462   .text.I2C_GetPEC:00000000 $t
     /tmp/ccBhI8tk.s:1467   .text.I2C_GetPEC:00000000 I2C_GetPEC
     /tmp/ccBhI8tk.s:1503   .text.I2C_DMACmd:00000000 $t
     /tmp/ccBhI8tk.s:1508   .text.I2C_DMACmd:00000000 I2C_DMACmd
     /tmp/ccBhI8tk.s:1561   .text.I2C_DMALastTransferCmd:00000000 $t
     /tmp/ccBhI8tk.s:1566   .text.I2C_DMALastTransferCmd:00000000 I2C_DMALastTransferCmd
     /tmp/ccBhI8tk.s:1619   .text.I2C_ReadRegister:00000000 $t
     /tmp/ccBhI8tk.s:1624   .text.I2C_ReadRegister:00000000 I2C_ReadRegister
     /tmp/ccBhI8tk.s:1670   .text.I2C_ITConfig:00000000 $t
     /tmp/ccBhI8tk.s:1675   .text.I2C_ITConfig:00000000 I2C_ITConfig
     /tmp/ccBhI8tk.s:1734   .text.I2C_CheckEvent:00000000 $t
     /tmp/ccBhI8tk.s:1739   .text.I2C_CheckEvent:00000000 I2C_CheckEvent
     /tmp/ccBhI8tk.s:1818   .text.I2C_GetLastEvent:00000000 $t
     /tmp/ccBhI8tk.s:1823   .text.I2C_GetLastEvent:00000000 I2C_GetLastEvent
     /tmp/ccBhI8tk.s:1882   .text.I2C_GetFlagStatus:00000000 $t
     /tmp/ccBhI8tk.s:1887   .text.I2C_GetFlagStatus:00000000 I2C_GetFlagStatus
     /tmp/ccBhI8tk.s:1973   .text.I2C_ClearFlag:00000000 $t
     /tmp/ccBhI8tk.s:1978   .text.I2C_ClearFlag:00000000 I2C_ClearFlag
     /tmp/ccBhI8tk.s:2021   .text.I2C_GetITStatus:00000000 $t
     /tmp/ccBhI8tk.s:2026   .text.I2C_GetITStatus:00000000 I2C_GetITStatus
     /tmp/ccBhI8tk.s:2099   .text.I2C_ClearITPendingBit:00000000 $t
     /tmp/ccBhI8tk.s:2104   .text.I2C_ClearITPendingBit:00000000 I2C_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
