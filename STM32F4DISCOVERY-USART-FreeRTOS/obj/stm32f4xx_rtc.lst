   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_rtc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	RTC_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	RTC_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @file    stm32f4xx_rtc.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Initialization
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Calendar (Time and Date) configuration
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Alarms (Alarm A and Alarm B) configuration
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - WakeUp Timer configuration
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Daylight Saving configuration
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Output pin Configuration
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Coarse digital Calibration configuration
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Smooth digital Calibration configuration
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - TimeStamp configuration
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Tampers configuration
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Backup Data Registers configuration
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Shift control synchronisation    
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           - Interrupts and flags management
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *  @verbatim
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                               Backup Domain Operating Condition
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The real-time clock (RTC), the RTC backup registers, and the backup 
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          SRAM (BKP SRAM) can be powered from the VBAT voltage when the main 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          VDD supply is powered off.
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          To retain the content of the RTC backup registers, backup SRAM, 
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          and supply the RTC when VDD is turned off, VBAT pin can be connected 
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          to an optional standby voltage supplied by a battery or by another 
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          source.
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          To allow the RTC to operate even when the main digital supply (VDD) 
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          is turned off, the VBAT pin powers the following blocks:
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            1 - The RTC
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            2 - The LSE oscillator
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            3 - The backup SRAM when the low power backup regulator is enabled
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            4 - PC13 to PC15 I/Os, plus PI8 I/O (when available)
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          When the backup domain is supplied by VDD (analog switch connected 
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          to VDD), the following functions are available:
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            1 - PC14 and PC15 can be used as either GPIO or LSE pins
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            2 - PC13 can be used as a GPIO or as the RTC_AF1 pin
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            3 - PI8 can be used as a GPIO or as the RTC_AF2 pin
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          When the backup domain is supplied by VBAT (analog switch connected 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          to VBAT because VDD is not present), the following functions are available:
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            1 - PC14 and PC15 can be used as LSE pins only
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            2 - PC13 can be used as the RTC_AF1 pin 
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            3 - PI8 can be used as the RTC_AF2 pin
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    Backup Domain Reset
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The backup domain reset sets all RTC registers and the RCC_BDCR 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          register to their reset values. The BKPSRAM is not affected by this
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          reset. The only way of resetting the BKPSRAM is through the Flash 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          interface by requesting a protection level change from 1 to 0.
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          A backup domain reset is generated when one of the following events
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          occurs:
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            1 - Software reset, triggered by setting the BDRST bit in the 
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                RCC Backup domain control register (RCC_BDCR). You can use the
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                RCC_BackupResetCmd().
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            2 - VDD or VBAT power on, if both supplies have previously been
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                powered off.
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                   Backup Domain Access
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          After reset, the backup domain (RTC registers, RTC backup data 
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          registers and backup SRAM) is protected against possible unwanted 
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          write accesses. 
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          To enable access to the RTC Domain and RTC registers, proceed as follows:
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the Power Controller (PWR) APB1 interface clock using the
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RCC_APB1PeriphClockCmd() function.
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable access to RTC domain using the PWR_BackupAccessCmd() function.
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Select the RTC clock source using the RCC_RTCCLKConfig() function.
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable RTC Clock using the RCC_RTCCLKCmd() function.
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                   RTC Driver: how to use it
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the RTC domain access (see description in the section above)
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Prescaler (Asynchronous and Synchronous) and
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC hour format using the RTC_Init() function.
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Time and Date configuration
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===========================
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To configure the RTC Calendar (Time and Date) use the RTC_SetTime()
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              and RTC_SetDate() functions.
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC Calendar, use the RTC_GetTime() and RTC_GetDate()
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              functions.
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Use the RTC_DayLightSavingConfig() function to add or sub one
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              hour to the RTC Calendar.    
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Alarm configuration
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To configure the RTC Alarm use the RTC_SetAlarm() function.
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the selected RTC Alarm using the RTC_AlarmCmd() function
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC Alarm, use the RTC_GetAlarm() function.
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC alarm SubSecond, use the RTC_GetAlarmSubSecond() function.
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          RTC Wakeup configuration
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ========================
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Wakeup Clock source use the RTC_WakeUpClockConfig()
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC WakeUp Counter using the RTC_SetWakeUpCounter() 
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function  
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the RTC WakeUp using the RTC_WakeUpCmd() function  
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC WakeUp Counter register, use the RTC_GetWakeUpCounter() 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Outputs configuration
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          =====================
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The RTC has 2 different outputs:
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFO_ALARM: this output is used to manage the RTC Alarm A, Alarm B
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              and WaKeUp signals.          
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              To output the selected RTC signal on RTC_AF1 pin, use the 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_OutputConfig() function.                
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFO_CALIB: this output is 512Hz signal or 1Hz .  
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              To output the RTC Clock on RTC_AF1 pin, use the RTC_CalibOutputCmd()
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Smooth digital Calibration configuration
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          =================================    
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Original Digital Calibration Value and the corresponding
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              calibration cycle period (32s,16s and 8s) using the RTC_SmoothCalibConfig() 
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Coarse digital Calibration configuration
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          =================================
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Coarse Calibration Value and the corresponding
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              sign using the RTC_CoarseCalibConfig() function.
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the RTC Coarse Calibration using the RTC_CoarseCalibCmd() 
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function  
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          TimeStamp configuration
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          =======================
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC_AF1 trigger and enables the RTC TimeStamp 
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              using the RTC_TimeStampCmd() function.
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC TimeStamp Time and Date register, use the 
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_GetTimeStamp() function.
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC TimeStamp SubSecond register, use the 
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_GetTimeStampSubSecond() function.
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - The TAMPER1 alternate function can be mapped either to RTC_AF1(PC13)
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              or RTC_AF2 (PI8) depending on the value of TAMP1INSEL bit in 
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_TAFCR register. You can use the  RTC_TamperPinSelection()
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function to select the corresponding pin.     
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Tamper configuration
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ====================
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the RTC Tamper using the RTC_TamperCmd() function.
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *             - Configure the Tamper filter count using RTC_TamperFilterConfig()
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function. 
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the RTC Tamper trigger Edge or Level according to the Tamper 
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              filter (if equal to 0 Edge else Level) value using the RTC_TamperConfig() function
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the Tamper sampling frequency using RTC_TamperSamplingFreqConfig()
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Configure the Tamper precharge or discharge duration using 
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_TamperPinsPrechargeDuration() function.
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the Tamper Pull-UP using RTC_TamperPullUpDisableCmd() function.
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - Enable the Time stamp on Tamper detection event using  
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_TSOnTamperDetecCmd() function.
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - The TIMESTAMP alternate function can be mapped to either RTC_AF1 
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              or RTC_AF2 depending on the value of the TSINSEL bit in the 
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              RTC_TAFCR register. You can use the  RTC_TimeStampPinSelection()
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function to select the corresponding pin. 
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          Backup Data Registers configuration
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To write to the RTC Backup Data registers, use the RTC_WriteBackupRegister()
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.  
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - To read the RTC Backup Data registers, use the RTC_ReadBackupRegister()
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *              function.
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * 
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                  RTC and low power modes
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           The MCU can be woken up from a low power mode by an RTC alternate 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           function.
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           The RTC alternate functions are the RTC alarms (Alarm A and Alarm B), 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           These RTC alternate functions can wake up the system from the Stop 
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           and Standby lowpower modes.
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           The system can also wake up from low power modes without depending 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           on an external interrupt (Auto-wakeup mode), by using the RTC alarm 
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           or the RTC wakeup events.
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           The RTC provides a programmable time base for waking up from the 
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           Stop or Standby mode at regular intervals.
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           Wakeup from STOP and Standby modes is possible only when the RTC 
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           clock source is LSE or LSI.
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                            Selection of RTC_AF1 alternate functions
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The RTC_AF1 pin (PC13) can be used for the following purposes:
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFO_ALARM output
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFO_CALIB output
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFI_TAMPER
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFI_TIMESTAMP
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * +----------------------------------------------------------------------------------------------
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |     Pin         |AFO_ALARM |AFO_CALIB |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  configuration  | ENABLED  | ENABLED  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  and function   |          |          |           |              | selection  |  selection   
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   Alarm out     |          |          |           |              |    Don't   |     Don't    
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   output OD     |     1    |Don't care|Don't care | Don't care   |    care    |     care     
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   Alarm out     |          |          |           |              |    Don't   |     Don't    
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   output PP     |     1    |Don't care|Don't care | Don't care   |    care    |     care     
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * | Calibration out |          |          |           |              |    Don't   |     Don't    
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   output PP     |     0    |    1     |Don't care | Don't care   |    care    |     care     
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TAMPER input   |          |          |           |              |            |     Don't    
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   floating      |     0    |    0     |     1     |      0       |      0     |     care     
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TIMESTAMP and  |          |          |           |              |            |              
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TAMPER input   |     0    |    0     |     1     |      1       |      0     |      0       
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   floating      |          |          |           |              |            |              
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * | TIMESTAMP input |          |          |           |              |    Don't   |              
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |    floating     |     0    |    0     |     0     |      1       |    care    |      0       
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  Standard GPIO  |     0    |    0     |     0     |      0       | Don't care |  Don't care  
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * +----------------------------------------------------------------------------------------------
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                            Selection of RTC_AF2 alternate functions
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          ===================================================================
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          The RTC_AF2 pin (PI8) can be used for the following purposes:
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFI_TAMPER
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            - AFI_TIMESTAMP
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * +---------------------------------------------------------------------------------------+
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |     Pin         |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    |ALARMOUTTYPE  |
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  configuration  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin |  AFO_ALARM   |
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  and function   |           |              | selection  |  selection   |Configuration |
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TAMPER input   |           |              |            |     Don't    |              |
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   floating      |     1     |      0       |      1     |     care     |  Don't care  |
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TIMESTAMP and  |           |              |            |              |              |
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  TAMPER input   |     1     |      1       |      1     |      1       |  Don't care  |
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |   floating      |           |              |            |              |              |
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * | TIMESTAMP input |           |              |    Don't   |              |              |
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |    floating     |     0     |      1       |    care    |      1       |  Don't care  |
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * |  Standard GPIO  |     0     |      0       | Don't care |  Don't care  |  Don't care  |
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * +---------------------------------------------------------------------------------------+
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *  @endverbatim
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ******************************************************************************
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @attention
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ******************************************************************************
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */ 
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Includes ------------------------------------------------------------------*/
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #include "stm32f4xx_rtc.h"
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #include "stm32f4xx_rcc.h"
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC 
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief RTC driver modules
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private define ------------------------------------------------------------*/
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Masks Definition */
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_TR_RESERVED_MASK    ((uint32_t)0x007F7F7F)
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_DR_RESERVED_MASK    ((uint32_t)0x00FFFF3F) 
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_INIT_MASK           ((uint32_t)0xFFFFFFFF)  
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_RSF_MASK            ((uint32_t)0xFFFFFF5F)
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_FLAGS_MASK          ((uint32_t)(RTC_FLAG_TSOVF | RTC_FLAG_TSF | RTC_FLAG_WUTF | \
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_ALRBF | RTC_FLAG_ALRAF | RTC_FLAG_INITF | \
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_RSF | RTC_FLAG_INITS | RTC_FLAG_WUTWF | \
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_ALRBWF | RTC_FLAG_ALRAWF | RTC_FLAG_TAMP1F ))
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define INITMODE_TIMEOUT         ((uint32_t) 0x00010000)
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define SYNCHRO_TIMEOUT          ((uint32_t) 0x00020000)
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RECALPF_TIMEOUT          ((uint32_t) 0x00020000)
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define SHPF_TIMEOUT             ((uint32_t) 0x00001000)
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private macro -------------------------------------------------------------*/
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private variables ---------------------------------------------------------*/
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value);
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value);
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private functions ---------------------------------------------------------*/
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Private_Functions
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */ 
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group1 Initialization and Configuration functions
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Initialization and Configuration functions 
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                  Initialization and Configuration functions
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to initialize and configure the RTC
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   Prescaler (Synchronous and Asynchronous), RTC Hour format, disable RTC registers
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   Write protection, enter and exit the RTC initialization mode, RTC registers
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   synchronization check and reference clock detection enable.
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   1. The RTC Prescaler is programmed to generate the RTC 1Hz time base. It is
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      split into 2 programmable prescalers to minimize power consumption.
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      - A 7-bit asynchronous prescaler and A 13-bit synchronous prescaler.
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      - When both prescalers are used, it is recommended to configure the asynchronous
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        prescaler to a high value to minimize consumption.
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   2. All RTC registers are Write protected. Writing to the RTC registers
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      is enabled by writing a key into the Write Protection register, RTC_WPR.
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   3. To Configure the RTC Calendar, user application should enter initialization
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      mode. In this mode, the calendar counter is stopped and its value can be 
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      updated. When the initialization sequence is complete, the calendar restarts 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      counting after 4 RTCCLK cycles.
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   4. To read the calendar through the shadow registers after Calendar initialization,
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      calendar update or after wakeup from low power modes the software must first 
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      clear the RSF flag. The software must then wait until it is set again before 
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      reading the calendar, which means that the calendar registers have been 
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      correctly copied into the RTC_TR and RTC_DR shadow registers.
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      The RTC_WaitForSynchro() function implements the above software sequence 
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      (RSF clear and RSF check).
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Deinitializes the RTC registers to their default reset values.
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This function doesn't reset the RTC Clock source and RTC Backup Data
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         registers.       
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are deinitialized
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not deinitialized
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_DeInit(void)
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
  28              		.loc 1 368 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
  43              		.loc 1 369 0
  44 0006 0023     		movs	r3, #0
  45 0008 7B60     		str	r3, [r7, #4]
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
  46              		.loc 1 370 0
  47 000a 0023     		movs	r3, #0
  48 000c BB60     		str	r3, [r7, #8]
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
  49              		.loc 1 371 0
  50 000e 0023     		movs	r3, #0
  51 0010 FB73     		strb	r3, [r7, #15]
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
  52              		.loc 1 374 0
  53 0012 304B     		ldr	r3, .L9
  54 0014 CA22     		movs	r2, #202
  55 0016 5A62     		str	r2, [r3, #36]
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
  56              		.loc 1 375 0
  57 0018 2E4B     		ldr	r3, .L9
  58 001a 5322     		movs	r2, #83
  59 001c 5A62     		str	r2, [r3, #36]
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
  60              		.loc 1 378 0
  61 001e FFF7FEFF 		bl	RTC_EnterInitMode
  62 0022 0346     		mov	r3, r0
  63 0024 002B     		cmp	r3, #0
  64 0026 02D1     		bne	.L2
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
  65              		.loc 1 380 0
  66 0028 0023     		movs	r3, #0
  67 002a FB73     		strb	r3, [r7, #15]
  68 002c 49E0     		b	.L3
  69              	.L2:
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset TR, DR and CR registers */
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TR = (uint32_t)0x00000000;
  70              		.loc 1 385 0
  71 002e 294B     		ldr	r3, .L9
  72 0030 0022     		movs	r2, #0
  73 0032 1A60     		str	r2, [r3]
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
  74              		.loc 1 386 0
  75 0034 274B     		ldr	r3, .L9
  76 0036 42F20112 		movw	r2, #8449
  77 003a 5A60     		str	r2, [r3, #4]
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)0x00000007;
  78              		.loc 1 388 0
  79 003c 254B     		ldr	r3, .L9
  80 003e 254A     		ldr	r2, .L9
  81 0040 9268     		ldr	r2, [r2, #8]
  82 0042 02F00702 		and	r2, r2, #7
  83 0046 9A60     		str	r2, [r3, #8]
  84              	.L5:
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
  85              		.loc 1 393 0 discriminator 1
  86 0048 224B     		ldr	r3, .L9
  87 004a DB68     		ldr	r3, [r3, #12]
  88 004c 03F00403 		and	r3, r3, #4
  89 0050 BB60     		str	r3, [r7, #8]
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
  90              		.loc 1 394 0 discriminator 1
  91 0052 7B68     		ldr	r3, [r7, #4]
  92 0054 0133     		adds	r3, r3, #1
  93 0056 7B60     		str	r3, [r7, #4]
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
  94              		.loc 1 395 0 discriminator 1
  95 0058 7B68     		ldr	r3, [r7, #4]
  96 005a B3F5803F 		cmp	r3, #65536
  97 005e 02D0     		beq	.L4
  98 0060 BB68     		ldr	r3, [r7, #8]
  99 0062 002B     		cmp	r3, #0
 100 0064 F0D0     		beq	.L5
 101              	.L4:
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
 102              		.loc 1 397 0
 103 0066 1B4B     		ldr	r3, .L9
 104 0068 DB68     		ldr	r3, [r3, #12]
 105 006a 03F00403 		and	r3, r3, #4
 106 006e 002B     		cmp	r3, #0
 107 0070 02D1     		bne	.L6
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 108              		.loc 1 399 0
 109 0072 0023     		movs	r3, #0
 110 0074 FB73     		strb	r3, [r7, #15]
 111 0076 24E0     		b	.L3
 112              	.L6:
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Reset all RTC CR register bits */
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR &= (uint32_t)0x00000000;
 113              		.loc 1 404 0
 114 0078 164B     		ldr	r3, .L9
 115 007a 9B68     		ldr	r3, [r3, #8]
 116 007c 154B     		ldr	r3, .L9
 117 007e 0022     		movs	r2, #0
 118 0080 9A60     		str	r2, [r3, #8]
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 119              		.loc 1 405 0
 120 0082 144B     		ldr	r3, .L9
 121 0084 4FF6FF72 		movw	r2, #65535
 122 0088 5A61     		str	r2, [r3, #20]
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 123              		.loc 1 406 0
 124 008a 124B     		ldr	r3, .L9
 125 008c 124A     		ldr	r2, .L9+4
 126 008e 1A61     		str	r2, [r3, #16]
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 127              		.loc 1 407 0
 128 0090 104B     		ldr	r3, .L9
 129 0092 0022     		movs	r2, #0
 130 0094 9A61     		str	r2, [r3, #24]
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMAR = (uint32_t)0x00000000;        
 131              		.loc 1 408 0
 132 0096 0F4B     		ldr	r3, .L9
 133 0098 0022     		movs	r2, #0
 134 009a DA61     		str	r2, [r3, #28]
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMBR = (uint32_t)0x00000000;
 135              		.loc 1 409 0
 136 009c 0D4B     		ldr	r3, .L9
 137 009e 0022     		movs	r2, #0
 138 00a0 1A62     		str	r2, [r3, #32]
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Reset ISR register and exit initialization mode */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ISR = (uint32_t)0x00000000;
 139              		.loc 1 412 0
 140 00a2 0C4B     		ldr	r3, .L9
 141 00a4 0022     		movs	r2, #0
 142 00a6 DA60     		str	r2, [r3, #12]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Reset Tamper and alternate functions configuration register */
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->TAFCR = 0x00000000;
 143              		.loc 1 415 0
 144 00a8 0A4B     		ldr	r3, .L9
 145 00aa 0022     		movs	r2, #0
 146 00ac 1A64     		str	r2, [r3, #64]
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
 147              		.loc 1 417 0
 148 00ae FFF7FEFF 		bl	RTC_WaitForSynchro
 149 00b2 0346     		mov	r3, r0
 150 00b4 002B     		cmp	r3, #0
 151 00b6 02D1     		bne	.L7
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = ERROR;
 152              		.loc 1 419 0
 153 00b8 0023     		movs	r3, #0
 154 00ba FB73     		strb	r3, [r7, #15]
 155 00bc 01E0     		b	.L3
 156              	.L7:
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       else
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = SUCCESS;      
 157              		.loc 1 423 0
 158 00be 0123     		movs	r3, #1
 159 00c0 FB73     		strb	r3, [r7, #15]
 160              	.L3:
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;  
 161              		.loc 1 429 0
 162 00c2 044B     		ldr	r3, .L9
 163 00c4 FF22     		movs	r2, #255
 164 00c6 5A62     		str	r2, [r3, #36]
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 165              		.loc 1 431 0
 166 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 167              		.loc 1 432 0
 168 00ca 1846     		mov	r0, r3
 169 00cc 1037     		adds	r7, r7, #16
 170 00ce BD46     		mov	sp, r7
 171              		@ sp needed
 172 00d0 80BD     		pop	{r7, pc}
 173              	.L10:
 174 00d2 00BF     		.align	2
 175              	.L9:
 176 00d4 00280040 		.word	1073752064
 177 00d8 FF007F00 		.word	8323327
 178              		.cfi_endproc
 179              	.LFE110:
 181              		.section	.text.RTC_Init,"ax",%progbits
 182              		.align	2
 183              		.global	RTC_Init
 184              		.thumb
 185              		.thumb_func
 187              	RTC_Init:
 188              	.LFB111:
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Initializes the RTC registers according to the specified parameters 
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         in RTC_InitStruct.
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure that contains 
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         the configuration information for the RTC peripheral.
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Prescaler register is write protected and can be written in 
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialization mode only.  
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are initialized
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not initialized  
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_Init(RTC_InitTypeDef* RTC_InitStruct)
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 189              		.loc 1 446 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 16
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 84B0     		sub	sp, sp, #16
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 24
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI5:
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 205              		.loc 1 447 0
 206 0008 0023     		movs	r3, #0
 207 000a FB73     		strb	r3, [r7, #15]
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(RTC_InitStruct->RTC_HourFormat));
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(RTC_InitStruct->RTC_AsynchPrediv));
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(RTC_InitStruct->RTC_SynchPrediv));
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 208              		.loc 1 455 0
 209 000c 194B     		ldr	r3, .L15
 210 000e CA22     		movs	r2, #202
 211 0010 5A62     		str	r2, [r3, #36]
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 212              		.loc 1 456 0
 213 0012 184B     		ldr	r3, .L15
 214 0014 5322     		movs	r2, #83
 215 0016 5A62     		str	r2, [r3, #36]
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 216              		.loc 1 459 0
 217 0018 FFF7FEFF 		bl	RTC_EnterInitMode
 218 001c 0346     		mov	r3, r0
 219 001e 002B     		cmp	r3, #0
 220 0020 02D1     		bne	.L12
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 221              		.loc 1 461 0
 222 0022 0023     		movs	r3, #0
 223 0024 FB73     		strb	r3, [r7, #15]
 224 0026 1CE0     		b	.L13
 225              	.L12:
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Clear RTC CR FMT Bit */
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= ((uint32_t)~(RTC_CR_FMT));
 226              		.loc 1 466 0
 227 0028 124B     		ldr	r3, .L15
 228 002a 124A     		ldr	r2, .L15
 229 002c 9268     		ldr	r2, [r2, #8]
 230 002e 22F04002 		bic	r2, r2, #64
 231 0032 9A60     		str	r2, [r3, #8]
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set RTC_CR register */
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |=  ((uint32_t)(RTC_InitStruct->RTC_HourFormat));
 232              		.loc 1 468 0
 233 0034 0F4B     		ldr	r3, .L15
 234 0036 0F4A     		ldr	r2, .L15
 235 0038 9168     		ldr	r1, [r2, #8]
 236 003a 7A68     		ldr	r2, [r7, #4]
 237 003c 1268     		ldr	r2, [r2]
 238 003e 0A43     		orrs	r2, r2, r1
 239 0040 9A60     		str	r2, [r3, #8]
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the RTC PRER */
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->PRER = (uint32_t)(RTC_InitStruct->RTC_SynchPrediv);
 240              		.loc 1 471 0
 241 0042 0C4B     		ldr	r3, .L15
 242 0044 7A68     		ldr	r2, [r7, #4]
 243 0046 9268     		ldr	r2, [r2, #8]
 244 0048 1A61     		str	r2, [r3, #16]
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 245              		.loc 1 472 0
 246 004a 0A4B     		ldr	r3, .L15
 247 004c 094A     		ldr	r2, .L15
 248 004e 1169     		ldr	r1, [r2, #16]
 249 0050 7A68     		ldr	r2, [r7, #4]
 250 0052 5268     		ldr	r2, [r2, #4]
 251 0054 1204     		lsls	r2, r2, #16
 252 0056 0A43     		orrs	r2, r2, r1
 253 0058 1A61     		str	r2, [r3, #16]
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 254              		.loc 1 475 0
 255 005a FFF7FEFF 		bl	RTC_ExitInitMode
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
 256              		.loc 1 477 0
 257 005e 0123     		movs	r3, #1
 258 0060 FB73     		strb	r3, [r7, #15]
 259              	.L13:
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 260              		.loc 1 480 0
 261 0062 044B     		ldr	r3, .L15
 262 0064 FF22     		movs	r2, #255
 263 0066 5A62     		str	r2, [r3, #36]
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 264              		.loc 1 482 0
 265 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 266              		.loc 1 483 0
 267 006a 1846     		mov	r0, r3
 268 006c 1037     		adds	r7, r7, #16
 269 006e BD46     		mov	sp, r7
 270              		@ sp needed
 271 0070 80BD     		pop	{r7, pc}
 272              	.L16:
 273 0072 00BF     		.align	2
 274              	.L15:
 275 0074 00280040 		.word	1073752064
 276              		.cfi_endproc
 277              	.LFE111:
 279              		.section	.text.RTC_StructInit,"ax",%progbits
 280              		.align	2
 281              		.global	RTC_StructInit
 282              		.thumb
 283              		.thumb_func
 285              	RTC_StructInit:
 286              	.LFB112:
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_InitStruct member with its default value.
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure which will be 
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialized.
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_StructInit(RTC_InitTypeDef* RTC_InitStruct)
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 287              		.loc 1 492 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              	.LCFI6:
 294              		.cfi_def_cfa_offset 4
 295              		.cfi_offset 7, -4
 296 0002 83B0     		sub	sp, sp, #12
 297              	.LCFI7:
 298              		.cfi_def_cfa_offset 16
 299 0004 00AF     		add	r7, sp, #0
 300              	.LCFI8:
 301              		.cfi_def_cfa_register 7
 302 0006 7860     		str	r0, [r7, #4]
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Initialize the RTC_HourFormat member */
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_HourFormat = RTC_HourFormat_24;
 303              		.loc 1 494 0
 304 0008 7B68     		ldr	r3, [r7, #4]
 305 000a 0022     		movs	r2, #0
 306 000c 1A60     		str	r2, [r3]
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Initialize the RTC_AsynchPrediv member */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_AsynchPrediv = (uint32_t)0x7F;
 307              		.loc 1 497 0
 308 000e 7B68     		ldr	r3, [r7, #4]
 309 0010 7F22     		movs	r2, #127
 310 0012 5A60     		str	r2, [r3, #4]
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Initialize the RTC_SynchPrediv member */
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_SynchPrediv = (uint32_t)0xFF; 
 311              		.loc 1 500 0
 312 0014 7B68     		ldr	r3, [r7, #4]
 313 0016 FF22     		movs	r2, #255
 314 0018 9A60     		str	r2, [r3, #8]
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 315              		.loc 1 501 0
 316 001a 0C37     		adds	r7, r7, #12
 317 001c BD46     		mov	sp, r7
 318              		@ sp needed
 319 001e 5DF8047B 		ldr	r7, [sp], #4
 320 0022 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE112:
 324              		.section	.text.RTC_WriteProtectionCmd,"ax",%progbits
 325              		.align	2
 326              		.global	RTC_WriteProtectionCmd
 327              		.thumb
 328              		.thumb_func
 330              	RTC_WriteProtectionCmd:
 331              	.LFB113:
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC registers write protection.
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   All the RTC registers are write protected except for RTC_ISR[13:8], 
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_TAFCR and RTC_BKPxR.
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   Writing a wrong key reactivates the write protection.
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The protection mechanism is not affected by system reset.  
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the write protection.
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_WriteProtectionCmd(FunctionalState NewState)
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 332              		.loc 1 514 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337 0000 80B4     		push	{r7}
 338              	.LCFI9:
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 7, -4
 341 0002 83B0     		sub	sp, sp, #12
 342              	.LCFI10:
 343              		.cfi_def_cfa_offset 16
 344 0004 00AF     		add	r7, sp, #0
 345              	.LCFI11:
 346              		.cfi_def_cfa_register 7
 347 0006 0346     		mov	r3, r0
 348 0008 FB71     		strb	r3, [r7, #7]
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 349              		.loc 1 518 0
 350 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 351 000c 002B     		cmp	r3, #0
 352 000e 03D0     		beq	.L19
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the write protection for RTC registers */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0xFF;   
 353              		.loc 1 521 0
 354 0010 074B     		ldr	r3, .L21
 355 0012 FF22     		movs	r2, #255
 356 0014 5A62     		str	r2, [r3, #36]
 357 0016 05E0     		b	.L18
 358              	.L19:
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the write protection for RTC registers */
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0xCA;
 359              		.loc 1 526 0
 360 0018 054B     		ldr	r3, .L21
 361 001a CA22     		movs	r2, #202
 362 001c 5A62     		str	r2, [r3, #36]
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0x53;    
 363              		.loc 1 527 0
 364 001e 044B     		ldr	r3, .L21
 365 0020 5322     		movs	r2, #83
 366 0022 5A62     		str	r2, [r3, #36]
 367              	.L18:
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 368              		.loc 1 529 0
 369 0024 0C37     		adds	r7, r7, #12
 370 0026 BD46     		mov	sp, r7
 371              		@ sp needed
 372 0028 5DF8047B 		ldr	r7, [sp], #4
 373 002c 7047     		bx	lr
 374              	.L22:
 375 002e 00BF     		.align	2
 376              	.L21:
 377 0030 00280040 		.word	1073752064
 378              		.cfi_endproc
 379              	.LFE113:
 381              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 382              		.align	2
 383              		.global	RTC_EnterInitMode
 384              		.thumb
 385              		.thumb_func
 387              	RTC_EnterInitMode:
 388              	.LFB114:
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enters the RTC Initialization mode.
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.    
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC is in Init mode
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC is not in Init mode  
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_EnterInitMode(void)
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 389              		.loc 1 541 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 16
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394 0000 80B4     		push	{r7}
 395              	.LCFI12:
 396              		.cfi_def_cfa_offset 4
 397              		.cfi_offset 7, -4
 398 0002 85B0     		sub	sp, sp, #20
 399              	.LCFI13:
 400              		.cfi_def_cfa_offset 24
 401 0004 00AF     		add	r7, sp, #0
 402              	.LCFI14:
 403              		.cfi_def_cfa_register 7
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t initcounter = 0x00;
 404              		.loc 1 542 0
 405 0006 0023     		movs	r3, #0
 406 0008 7B60     		str	r3, [r7, #4]
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 407              		.loc 1 543 0
 408 000a 0023     		movs	r3, #0
 409 000c FB73     		strb	r3, [r7, #15]
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t initstatus = 0x00;
 410              		.loc 1 544 0
 411 000e 0023     		movs	r3, #0
 412 0010 BB60     		str	r3, [r7, #8]
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check if the Initialization mode is set */
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 413              		.loc 1 547 0
 414 0012 174B     		ldr	r3, .L31
 415 0014 DB68     		ldr	r3, [r3, #12]
 416 0016 03F04003 		and	r3, r3, #64
 417 001a 002B     		cmp	r3, #0
 418 001c 1ED1     		bne	.L24
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the Initialization mode */
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ISR = (uint32_t)RTC_INIT_MASK;
 419              		.loc 1 550 0
 420 001e 144B     		ldr	r3, .L31
 421 0020 4FF0FF32 		mov	r2, #-1
 422 0024 DA60     		str	r2, [r3, #12]
 423              	.L26:
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       initstatus = RTC->ISR & RTC_ISR_INITF;
 424              		.loc 1 555 0 discriminator 1
 425 0026 124B     		ldr	r3, .L31
 426 0028 DB68     		ldr	r3, [r3, #12]
 427 002a 03F04003 		and	r3, r3, #64
 428 002e BB60     		str	r3, [r7, #8]
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       initcounter++;  
 429              		.loc 1 556 0 discriminator 1
 430 0030 7B68     		ldr	r3, [r7, #4]
 431 0032 0133     		adds	r3, r3, #1
 432 0034 7B60     		str	r3, [r7, #4]
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((initcounter != INITMODE_TIMEOUT) && (initstatus == 0x00));
 433              		.loc 1 557 0 discriminator 1
 434 0036 7B68     		ldr	r3, [r7, #4]
 435 0038 B3F5803F 		cmp	r3, #65536
 436 003c 02D0     		beq	.L25
 437 003e BB68     		ldr	r3, [r7, #8]
 438 0040 002B     		cmp	r3, #0
 439 0042 F0D0     		beq	.L26
 440              	.L25:
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_INITF) != RESET)
 441              		.loc 1 559 0
 442 0044 0A4B     		ldr	r3, .L31
 443 0046 DB68     		ldr	r3, [r3, #12]
 444 0048 03F04003 		and	r3, r3, #64
 445 004c 002B     		cmp	r3, #0
 446 004e 02D0     		beq	.L27
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 447              		.loc 1 561 0
 448 0050 0123     		movs	r3, #1
 449 0052 FB73     		strb	r3, [r7, #15]
 450 0054 04E0     		b	.L29
 451              	.L27:
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 452              		.loc 1 565 0
 453 0056 0023     		movs	r3, #0
 454 0058 FB73     		strb	r3, [r7, #15]
 455 005a 01E0     		b	.L29
 456              	.L24:
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }        
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;  
 457              		.loc 1 570 0
 458 005c 0123     		movs	r3, #1
 459 005e FB73     		strb	r3, [r7, #15]
 460              	.L29:
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (status);  
 461              		.loc 1 573 0
 462 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 463              		.loc 1 574 0
 464 0062 1846     		mov	r0, r3
 465 0064 1437     		adds	r7, r7, #20
 466 0066 BD46     		mov	sp, r7
 467              		@ sp needed
 468 0068 5DF8047B 		ldr	r7, [sp], #4
 469 006c 7047     		bx	lr
 470              	.L32:
 471 006e 00BF     		.align	2
 472              	.L31:
 473 0070 00280040 		.word	1073752064
 474              		.cfi_endproc
 475              	.LFE114:
 477              		.section	.text.RTC_ExitInitMode,"ax",%progbits
 478              		.align	2
 479              		.global	RTC_ExitInitMode
 480              		.thumb
 481              		.thumb_func
 483              	RTC_ExitInitMode:
 484              	.LFB115:
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Exits the RTC Initialization mode.
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   When the initialization sequence is complete, the calendar restarts 
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         counting after 4 RTCCLK cycles.  
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.      
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ExitInitMode(void)
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** { 
 485              		.loc 1 586 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490 0000 80B4     		push	{r7}
 491              	.LCFI15:
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 7, -4
 494 0002 00AF     		add	r7, sp, #0
 495              	.LCFI16:
 496              		.cfi_def_cfa_register 7
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Exit Initialization mode */
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR &= (uint32_t)~RTC_ISR_INIT;  
 497              		.loc 1 588 0
 498 0004 044B     		ldr	r3, .L34
 499 0006 044A     		ldr	r2, .L34
 500 0008 D268     		ldr	r2, [r2, #12]
 501 000a 22F08002 		bic	r2, r2, #128
 502 000e DA60     		str	r2, [r3, #12]
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 503              		.loc 1 589 0
 504 0010 BD46     		mov	sp, r7
 505              		@ sp needed
 506 0012 5DF8047B 		ldr	r7, [sp], #4
 507 0016 7047     		bx	lr
 508              	.L35:
 509              		.align	2
 510              	.L34:
 511 0018 00280040 		.word	1073752064
 512              		.cfi_endproc
 513              	.LFE115:
 515              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 516              		.align	2
 517              		.global	RTC_WaitForSynchro
 518              		.thumb
 519              		.thumb_func
 521              	RTC_WaitForSynchro:
 522              	.LFB116:
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Waits until the RTC Time and Date registers (RTC_TR and RTC_DR) are 
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         synchronized with RTC APB clock.
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function. 
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes 
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         the software must first clear the RSF flag. 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         The software must then wait until it is set again before reading 
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         the calendar, which means that the calendar registers have been 
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.   
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are synchronised
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not synchronised
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_WaitForSynchro(void)
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 523              		.loc 1 608 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 16
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 0000 80B4     		push	{r7}
 529              	.LCFI17:
 530              		.cfi_def_cfa_offset 4
 531              		.cfi_offset 7, -4
 532 0002 85B0     		sub	sp, sp, #20
 533              	.LCFI18:
 534              		.cfi_def_cfa_offset 24
 535 0004 00AF     		add	r7, sp, #0
 536              	.LCFI19:
 537              		.cfi_def_cfa_register 7
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 538              		.loc 1 609 0
 539 0006 0023     		movs	r3, #0
 540 0008 7B60     		str	r3, [r7, #4]
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 541              		.loc 1 610 0
 542 000a 0023     		movs	r3, #0
 543 000c FB73     		strb	r3, [r7, #15]
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t synchrostatus = 0x00;
 544              		.loc 1 611 0
 545 000e 0023     		movs	r3, #0
 546 0010 BB60     		str	r3, [r7, #8]
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 547              		.loc 1 614 0
 548 0012 184B     		ldr	r3, .L42
 549 0014 CA22     		movs	r2, #202
 550 0016 5A62     		str	r2, [r3, #36]
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 551              		.loc 1 615 0
 552 0018 164B     		ldr	r3, .L42
 553 001a 5322     		movs	r2, #83
 554 001c 5A62     		str	r2, [r3, #36]
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear RSF flag */
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR &= (uint32_t)RTC_RSF_MASK;
 555              		.loc 1 618 0
 556 001e 154B     		ldr	r3, .L42
 557 0020 144A     		ldr	r2, .L42
 558 0022 D268     		ldr	r2, [r2, #12]
 559 0024 22F0A002 		bic	r2, r2, #160
 560 0028 DA60     		str	r2, [r3, #12]
 561              	.L38:
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Wait the registers to be synchronised */
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   do
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     synchrostatus = RTC->ISR & RTC_ISR_RSF;
 562              		.loc 1 623 0 discriminator 1
 563 002a 124B     		ldr	r3, .L42
 564 002c DB68     		ldr	r3, [r3, #12]
 565 002e 03F02003 		and	r3, r3, #32
 566 0032 BB60     		str	r3, [r7, #8]
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     synchrocounter++;  
 567              		.loc 1 624 0 discriminator 1
 568 0034 7B68     		ldr	r3, [r7, #4]
 569 0036 0133     		adds	r3, r3, #1
 570 0038 7B60     		str	r3, [r7, #4]
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } while((synchrocounter != SYNCHRO_TIMEOUT) && (synchrostatus == 0x00));
 571              		.loc 1 625 0 discriminator 1
 572 003a 7B68     		ldr	r3, [r7, #4]
 573 003c B3F5003F 		cmp	r3, #131072
 574 0040 02D0     		beq	.L37
 575 0042 BB68     		ldr	r3, [r7, #8]
 576 0044 002B     		cmp	r3, #0
 577 0046 F0D0     		beq	.L38
 578              	.L37:
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RSF) != RESET)
 579              		.loc 1 627 0
 580 0048 0A4B     		ldr	r3, .L42
 581 004a DB68     		ldr	r3, [r3, #12]
 582 004c 03F02003 		and	r3, r3, #32
 583 0050 002B     		cmp	r3, #0
 584 0052 02D0     		beq	.L39
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 585              		.loc 1 629 0
 586 0054 0123     		movs	r3, #1
 587 0056 FB73     		strb	r3, [r7, #15]
 588 0058 01E0     		b	.L40
 589              	.L39:
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 590              		.loc 1 633 0
 591 005a 0023     		movs	r3, #0
 592 005c FB73     		strb	r3, [r7, #15]
 593              	.L40:
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }        
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 594              		.loc 1 637 0
 595 005e 054B     		ldr	r3, .L42
 596 0060 FF22     		movs	r2, #255
 597 0062 5A62     		str	r2, [r3, #36]
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (status); 
 598              		.loc 1 639 0
 599 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 600              		.loc 1 640 0
 601 0066 1846     		mov	r0, r3
 602 0068 1437     		adds	r7, r7, #20
 603 006a BD46     		mov	sp, r7
 604              		@ sp needed
 605 006c 5DF8047B 		ldr	r7, [sp], #4
 606 0070 7047     		bx	lr
 607              	.L43:
 608 0072 00BF     		.align	2
 609              	.L42:
 610 0074 00280040 		.word	1073752064
 611              		.cfi_endproc
 612              	.LFE116:
 614              		.section	.text.RTC_RefClockCmd,"ax",%progbits
 615              		.align	2
 616              		.global	RTC_RefClockCmd
 617              		.thumb
 618              		.thumb_func
 620              	RTC_RefClockCmd:
 621              	.LFB117:
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC reference clock detection.
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the RTC reference clock.
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC reference clock detection is enabled
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC reference clock detection is disabled  
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_RefClockCmd(FunctionalState NewState)
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** { 
 622              		.loc 1 651 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 16
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626 0000 80B5     		push	{r7, lr}
 627              	.LCFI20:
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 84B0     		sub	sp, sp, #16
 632              	.LCFI21:
 633              		.cfi_def_cfa_offset 24
 634 0004 00AF     		add	r7, sp, #0
 635              	.LCFI22:
 636              		.cfi_def_cfa_register 7
 637 0006 0346     		mov	r3, r0
 638 0008 FB71     		strb	r3, [r7, #7]
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 639              		.loc 1 652 0
 640 000a 0023     		movs	r3, #0
 641 000c FB73     		strb	r3, [r7, #15]
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 642              		.loc 1 658 0
 643 000e 154B     		ldr	r3, .L50
 644 0010 CA22     		movs	r2, #202
 645 0012 5A62     		str	r2, [r3, #36]
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 646              		.loc 1 659 0
 647 0014 134B     		ldr	r3, .L50
 648 0016 5322     		movs	r2, #83
 649 0018 5A62     		str	r2, [r3, #36]
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 650              		.loc 1 662 0
 651 001a FFF7FEFF 		bl	RTC_EnterInitMode
 652 001e 0346     		mov	r3, r0
 653 0020 002B     		cmp	r3, #0
 654 0022 02D1     		bne	.L45
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 655              		.loc 1 664 0
 656 0024 0023     		movs	r3, #0
 657 0026 FB73     		strb	r3, [r7, #15]
 658 0028 13E0     		b	.L46
 659              	.L45:
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {  
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if (NewState != DISABLE)
 660              		.loc 1 668 0
 661 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 662 002c 002B     		cmp	r3, #0
 663 002e 06D0     		beq	.L47
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Enable the RTC reference clock detection */
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR |= RTC_CR_REFCKON;   
 664              		.loc 1 671 0
 665 0030 0C4B     		ldr	r3, .L50
 666 0032 0C4A     		ldr	r2, .L50
 667 0034 9268     		ldr	r2, [r2, #8]
 668 0036 42F01002 		orr	r2, r2, #16
 669 003a 9A60     		str	r2, [r3, #8]
 670 003c 05E0     		b	.L48
 671              	.L47:
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Disable the RTC reference clock detection */
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR &= ~RTC_CR_REFCKON;    
 672              		.loc 1 676 0
 673 003e 094B     		ldr	r3, .L50
 674 0040 084A     		ldr	r2, .L50
 675 0042 9268     		ldr	r2, [r2, #8]
 676 0044 22F01002 		bic	r2, r2, #16
 677 0048 9A60     		str	r2, [r3, #8]
 678              	.L48:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 679              		.loc 1 679 0
 680 004a FFF7FEFF 		bl	RTC_ExitInitMode
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 681              		.loc 1 681 0
 682 004e 0123     		movs	r3, #1
 683 0050 FB73     		strb	r3, [r7, #15]
 684              	.L46:
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;  
 685              		.loc 1 685 0
 686 0052 044B     		ldr	r3, .L50
 687 0054 FF22     		movs	r2, #255
 688 0056 5A62     		str	r2, [r3, #36]
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status; 
 689              		.loc 1 687 0
 690 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 691              		.loc 1 688 0
 692 005a 1846     		mov	r0, r3
 693 005c 1037     		adds	r7, r7, #16
 694 005e BD46     		mov	sp, r7
 695              		@ sp needed
 696 0060 80BD     		pop	{r7, pc}
 697              	.L51:
 698 0062 00BF     		.align	2
 699              	.L50:
 700 0064 00280040 		.word	1073752064
 701              		.cfi_endproc
 702              	.LFE117:
 704              		.section	.text.RTC_BypassShadowCmd,"ax",%progbits
 705              		.align	2
 706              		.global	RTC_BypassShadowCmd
 707              		.thumb
 708              		.thumb_func
 710              	RTC_BypassShadowCmd:
 711              	.LFB118:
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Bypass Shadow feature.
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         directly from the Calendar counter.
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the Bypass Shadow feature.
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         This parameter can be: ENABLE or DISABLE.
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_BypassShadowCmd(FunctionalState NewState)
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 712              		.loc 1 699 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 80B4     		push	{r7}
 718              	.LCFI23:
 719              		.cfi_def_cfa_offset 4
 720              		.cfi_offset 7, -4
 721 0002 83B0     		sub	sp, sp, #12
 722              	.LCFI24:
 723              		.cfi_def_cfa_offset 16
 724 0004 00AF     		add	r7, sp, #0
 725              	.LCFI25:
 726              		.cfi_def_cfa_register 7
 727 0006 0346     		mov	r3, r0
 728 0008 FB71     		strb	r3, [r7, #7]
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 729              		.loc 1 704 0
 730 000a 0F4B     		ldr	r3, .L55
 731 000c CA22     		movs	r2, #202
 732 000e 5A62     		str	r2, [r3, #36]
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 733              		.loc 1 705 0
 734 0010 0D4B     		ldr	r3, .L55
 735 0012 5322     		movs	r2, #83
 736 0014 5A62     		str	r2, [r3, #36]
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 737              		.loc 1 707 0
 738 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 739 0018 002B     		cmp	r3, #0
 740 001a 06D0     		beq	.L53
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the BYPSHAD bit */
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint8_t)RTC_CR_BYPSHAD;
 741              		.loc 1 710 0
 742 001c 0A4B     		ldr	r3, .L55
 743 001e 0A4A     		ldr	r2, .L55
 744 0020 9268     		ldr	r2, [r2, #8]
 745 0022 42F02002 		orr	r2, r2, #32
 746 0026 9A60     		str	r2, [r3, #8]
 747 0028 05E0     		b	.L54
 748              	.L53:
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset the BYPSHAD bit */
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint8_t)~RTC_CR_BYPSHAD;
 749              		.loc 1 715 0
 750 002a 074B     		ldr	r3, .L55
 751 002c 064A     		ldr	r2, .L55
 752 002e 9268     		ldr	r2, [r2, #8]
 753 0030 02F0DF02 		and	r2, r2, #223
 754 0034 9A60     		str	r2, [r3, #8]
 755              	.L54:
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 756              		.loc 1 719 0
 757 0036 044B     		ldr	r3, .L55
 758 0038 FF22     		movs	r2, #255
 759 003a 5A62     		str	r2, [r3, #36]
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 760              		.loc 1 720 0
 761 003c 0C37     		adds	r7, r7, #12
 762 003e BD46     		mov	sp, r7
 763              		@ sp needed
 764 0040 5DF8047B 		ldr	r7, [sp], #4
 765 0044 7047     		bx	lr
 766              	.L56:
 767 0046 00BF     		.align	2
 768              	.L55:
 769 0048 00280040 		.word	1073752064
 770              		.cfi_endproc
 771              	.LFE118:
 773              		.section	.text.RTC_SetTime,"ax",%progbits
 774              		.align	2
 775              		.global	RTC_SetTime
 776              		.thumb
 777              		.thumb_func
 779              	RTC_SetTime:
 780              	.LFB119:
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group2 Time and Date configuration functions
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Time and Date configuration functions 
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    Time and Date configuration functions
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to program and read the RTC Calendar
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   (Time and Date).
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Set the RTC current time.
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that contains 
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                        the time configuration information for the RTC.     
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Time register is configured
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Time register is not configured
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 781              		.loc 1 754 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 16
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785 0000 90B5     		push	{r4, r7, lr}
 786              	.LCFI26:
 787              		.cfi_def_cfa_offset 12
 788              		.cfi_offset 4, -12
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 85B0     		sub	sp, sp, #20
 792              	.LCFI27:
 793              		.cfi_def_cfa_offset 32
 794 0004 00AF     		add	r7, sp, #0
 795              	.LCFI28:
 796              		.cfi_def_cfa_register 7
 797 0006 7860     		str	r0, [r7, #4]
 798 0008 3960     		str	r1, [r7]
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 799              		.loc 1 755 0
 800 000a 0023     		movs	r3, #0
 801 000c FB60     		str	r3, [r7, #12]
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 802              		.loc 1 756 0
 803 000e 0023     		movs	r3, #0
 804 0010 FB72     		strb	r3, [r7, #11]
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 805              		.loc 1 761 0
 806 0012 7B68     		ldr	r3, [r7, #4]
 807 0014 002B     		cmp	r3, #0
 808 0016 09D1     		bne	.L58
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 809              		.loc 1 763 0
 810 0018 394B     		ldr	r3, .L68
 811 001a 9B68     		ldr	r3, [r3, #8]
 812 001c 03F04003 		and	r3, r3, #64
 813 0020 002B     		cmp	r3, #0
 814 0022 14D1     		bne	.L60
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_TimeStruct->RTC_Hours));
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12));
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 815              		.loc 1 770 0
 816 0024 3B68     		ldr	r3, [r7]
 817 0026 0022     		movs	r2, #0
 818 0028 DA70     		strb	r2, [r3, #3]
 819 002a 10E0     		b	.L60
 820              	.L58:
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_TimeStruct->RTC_Hours));
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_TimeStruct->RTC_Minutes));
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_TimeStruct->RTC_Seconds));
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 821              		.loc 1 778 0
 822 002c 344B     		ldr	r3, .L68
 823 002e 9B68     		ldr	r3, [r3, #8]
 824 0030 03F04003 		and	r3, r3, #64
 825 0034 002B     		cmp	r3, #0
 826 0036 07D0     		beq	.L61
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 827              		.loc 1 780 0
 828 0038 3B68     		ldr	r3, [r7]
 829 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 003c 1846     		mov	r0, r3
 831 003e FFF7FEFF 		bl	RTC_Bcd2ToByte
 832 0042 0346     		mov	r3, r0
 833 0044 FB60     		str	r3, [r7, #12]
 834 0046 02E0     		b	.L60
 835              	.L61:
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12)); 
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 836              		.loc 1 786 0
 837 0048 3B68     		ldr	r3, [r7]
 838 004a 0022     		movs	r2, #0
 839 004c DA70     		strb	r2, [r3, #3]
 840              	.L60:
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours)));
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes)));
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds)));
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 841              		.loc 1 794 0
 842 004e 7B68     		ldr	r3, [r7, #4]
 843 0050 002B     		cmp	r3, #0
 844 0052 0FD0     		beq	.L62
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 845              		.loc 1 796 0
 846 0054 3B68     		ldr	r3, [r7]
 847 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 848 0058 1A04     		lsls	r2, r3, #16
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 849              		.loc 1 797 0
 850 005a 3B68     		ldr	r3, [r7]
 851 005c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 852 005e 1B02     		lsls	r3, r3, #8
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 853              		.loc 1 796 0
 854 0060 1A43     		orrs	r2, r2, r3
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 855              		.loc 1 798 0
 856 0062 3B68     		ldr	r3, [r7]
 857 0064 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 858              		.loc 1 797 0
 859 0066 1A43     		orrs	r2, r2, r3
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_H12) << 16)); 
 860              		.loc 1 799 0
 861 0068 3B68     		ldr	r3, [r7]
 862 006a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 863 006c 1B04     		lsls	r3, r3, #16
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 864              		.loc 1 796 0
 865 006e 1343     		orrs	r3, r3, r2
 866 0070 FB60     		str	r3, [r7, #12]
 867 0072 1BE0     		b	.L63
 868              	.L62:
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 869              		.loc 1 803 0
 870 0074 3B68     		ldr	r3, [r7]
 871 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 872 0078 1846     		mov	r0, r3
 873 007a FFF7FEFF 		bl	RTC_ByteToBcd2
 874 007e 0346     		mov	r3, r0
 875 0080 1C04     		lsls	r4, r3, #16
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 876              		.loc 1 804 0
 877 0082 3B68     		ldr	r3, [r7]
 878 0084 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 879 0086 1846     		mov	r0, r3
 880 0088 FFF7FEFF 		bl	RTC_ByteToBcd2
 881 008c 0346     		mov	r3, r0
 882 008e 1B02     		lsls	r3, r3, #8
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 883              		.loc 1 803 0
 884 0090 1C43     		orrs	r4, r4, r3
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 885              		.loc 1 805 0
 886 0092 3B68     		ldr	r3, [r7]
 887 0094 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 888 0096 1846     		mov	r0, r3
 889 0098 FFF7FEFF 		bl	RTC_ByteToBcd2
 890 009c 0346     		mov	r3, r0
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 891              		.loc 1 804 0
 892 009e 44EA0302 		orr	r2, r4, r3
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
 893              		.loc 1 806 0
 894 00a2 3B68     		ldr	r3, [r7]
 895 00a4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 896 00a6 1B04     		lsls	r3, r3, #16
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 897              		.loc 1 803 0
 898 00a8 1343     		orrs	r3, r3, r2
 899 00aa FB60     		str	r3, [r7, #12]
 900              	.L63:
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 901              		.loc 1 810 0
 902 00ac 144B     		ldr	r3, .L68
 903 00ae CA22     		movs	r2, #202
 904 00b0 5A62     		str	r2, [r3, #36]
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 905              		.loc 1 811 0
 906 00b2 134B     		ldr	r3, .L68
 907 00b4 5322     		movs	r2, #83
 908 00b6 5A62     		str	r2, [r3, #36]
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 909              		.loc 1 814 0
 910 00b8 FFF7FEFF 		bl	RTC_EnterInitMode
 911 00bc 0346     		mov	r3, r0
 912 00be 002B     		cmp	r3, #0
 913 00c0 02D1     		bne	.L64
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 914              		.loc 1 816 0
 915 00c2 0023     		movs	r3, #0
 916 00c4 FB72     		strb	r3, [r7, #11]
 917 00c6 12E0     		b	.L65
 918              	.L64:
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the RTC_TR register */
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 919              		.loc 1 821 0
 920 00c8 0D4A     		ldr	r2, .L68
 921 00ca FB68     		ldr	r3, [r7, #12]
 922 00cc 03F07F33 		and	r3, r3, #2139062143
 923 00d0 23F0FE43 		bic	r3, r3, #2130706432
 924 00d4 1360     		str	r3, [r2]
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode(); 
 925              		.loc 1 824 0
 926 00d6 FFF7FEFF 		bl	RTC_ExitInitMode
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 927              		.loc 1 826 0
 928 00da FFF7FEFF 		bl	RTC_WaitForSynchro
 929 00de 0346     		mov	r3, r0
 930 00e0 002B     		cmp	r3, #0
 931 00e2 02D1     		bne	.L66
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 932              		.loc 1 828 0
 933 00e4 0023     		movs	r3, #0
 934 00e6 FB72     		strb	r3, [r7, #11]
 935 00e8 01E0     		b	.L65
 936              	.L66:
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 937              		.loc 1 832 0
 938 00ea 0123     		movs	r3, #1
 939 00ec FB72     		strb	r3, [r7, #11]
 940              	.L65:
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 941              		.loc 1 837 0
 942 00ee 044B     		ldr	r3, .L68
 943 00f0 FF22     		movs	r2, #255
 944 00f2 5A62     		str	r2, [r3, #36]
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 945              		.loc 1 839 0
 946 00f4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 947              		.loc 1 840 0
 948 00f6 1846     		mov	r0, r3
 949 00f8 1437     		adds	r7, r7, #20
 950 00fa BD46     		mov	sp, r7
 951              		@ sp needed
 952 00fc 90BD     		pop	{r4, r7, pc}
 953              	.L69:
 954 00fe 00BF     		.align	2
 955              	.L68:
 956 0100 00280040 		.word	1073752064
 957              		.cfi_endproc
 958              	.LFE119:
 960              		.section	.text.RTC_TimeStructInit,"ax",%progbits
 961              		.align	2
 962              		.global	RTC_TimeStructInit
 963              		.thumb
 964              		.thumb_func
 966              	RTC_TimeStructInit:
 967              	.LFB120:
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_TimeStruct member with its default value
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         (Time = 00h:00min:00sec).
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure which will be 
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialized.
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStructInit(RTC_TimeTypeDef* RTC_TimeStruct)
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 968              		.loc 1 850 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 8
 971              		@ frame_needed = 1, uses_anonymous_args = 0
 972              		@ link register save eliminated.
 973 0000 80B4     		push	{r7}
 974              	.LCFI29:
 975              		.cfi_def_cfa_offset 4
 976              		.cfi_offset 7, -4
 977 0002 83B0     		sub	sp, sp, #12
 978              	.LCFI30:
 979              		.cfi_def_cfa_offset 16
 980 0004 00AF     		add	r7, sp, #0
 981              	.LCFI31:
 982              		.cfi_def_cfa_register 7
 983 0006 7860     		str	r0, [r7, #4]
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Time = 00h:00min:00sec */
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = RTC_H12_AM;
 984              		.loc 1 852 0
 985 0008 7B68     		ldr	r3, [r7, #4]
 986 000a 0022     		movs	r2, #0
 987 000c DA70     		strb	r2, [r3, #3]
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = 0;
 988              		.loc 1 853 0
 989 000e 7B68     		ldr	r3, [r7, #4]
 990 0010 0022     		movs	r2, #0
 991 0012 1A70     		strb	r2, [r3]
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = 0;
 992              		.loc 1 854 0
 993 0014 7B68     		ldr	r3, [r7, #4]
 994 0016 0022     		movs	r2, #0
 995 0018 5A70     		strb	r2, [r3, #1]
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = 0; 
 996              		.loc 1 855 0
 997 001a 7B68     		ldr	r3, [r7, #4]
 998 001c 0022     		movs	r2, #0
 999 001e 9A70     		strb	r2, [r3, #2]
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1000              		.loc 1 856 0
 1001 0020 0C37     		adds	r7, r7, #12
 1002 0022 BD46     		mov	sp, r7
 1003              		@ sp needed
 1004 0024 5DF8047B 		ldr	r7, [sp], #4
 1005 0028 7047     		bx	lr
 1006              		.cfi_endproc
 1007              	.LFE120:
 1009 002a 00BF     		.section	.text.RTC_GetTime,"ax",%progbits
 1010              		.align	2
 1011              		.global	RTC_GetTime
 1012              		.thumb
 1013              		.thumb_func
 1015              	RTC_GetTime:
 1016              	.LFB121:
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC current Time.
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that will 
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                        contain the returned current time configuration.     
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1017              		.loc 1 869 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 16
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
 1022              	.LCFI32:
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 84B0     		sub	sp, sp, #16
 1027              	.LCFI33:
 1028              		.cfi_def_cfa_offset 24
 1029 0004 00AF     		add	r7, sp, #0
 1030              	.LCFI34:
 1031              		.cfi_def_cfa_register 7
 1032 0006 7860     		str	r0, [r7, #4]
 1033 0008 3960     		str	r1, [r7]
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1034              		.loc 1 870 0
 1035 000a 0023     		movs	r3, #0
 1036 000c FB60     		str	r3, [r7, #12]
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_TR register */
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TR & RTC_TR_RESERVED_MASK); 
 1037              		.loc 1 876 0
 1038 000e 224B     		ldr	r3, .L73
 1039 0010 1B68     		ldr	r3, [r3]
 1040 0012 03F07F33 		and	r3, r3, #2139062143
 1041 0016 23F0FE43 		bic	r3, r3, #2130706432
 1042 001a FB60     		str	r3, [r7, #12]
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the structure fields with the read parameters */
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 1043              		.loc 1 879 0
 1044 001c FB68     		ldr	r3, [r7, #12]
 1045 001e 03F47C13 		and	r3, r3, #4128768
 1046 0022 1B0C     		lsrs	r3, r3, #16
 1047 0024 DAB2     		uxtb	r2, r3
 1048 0026 3B68     		ldr	r3, [r7]
 1049 0028 1A70     		strb	r2, [r3]
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 1050              		.loc 1 880 0
 1051 002a FB68     		ldr	r3, [r7, #12]
 1052 002c 03F4FE43 		and	r3, r3, #32512
 1053 0030 1B0A     		lsrs	r3, r3, #8
 1054 0032 DAB2     		uxtb	r2, r3
 1055 0034 3B68     		ldr	r3, [r7]
 1056 0036 5A70     		strb	r2, [r3, #1]
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 1057              		.loc 1 881 0
 1058 0038 FB68     		ldr	r3, [r7, #12]
 1059 003a DBB2     		uxtb	r3, r3
 1060 003c 03F07F03 		and	r3, r3, #127
 1061 0040 DAB2     		uxtb	r2, r3
 1062 0042 3B68     		ldr	r3, [r7]
 1063 0044 9A70     		strb	r2, [r3, #2]
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 1064              		.loc 1 882 0
 1065 0046 FB68     		ldr	r3, [r7, #12]
 1066 0048 03F48003 		and	r3, r3, #4194304
 1067 004c 1B0C     		lsrs	r3, r3, #16
 1068 004e DAB2     		uxtb	r2, r3
 1069 0050 3B68     		ldr	r3, [r7]
 1070 0052 DA70     		strb	r2, [r3, #3]
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1071              		.loc 1 885 0
 1072 0054 7B68     		ldr	r3, [r7, #4]
 1073 0056 002B     		cmp	r3, #0
 1074 0058 1AD1     		bne	.L71
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the structure parameters to Binary format */
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 1075              		.loc 1 888 0
 1076 005a 3B68     		ldr	r3, [r7]
 1077 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 005e 1846     		mov	r0, r3
 1079 0060 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1080 0064 0346     		mov	r3, r0
 1081 0066 1A46     		mov	r2, r3
 1082 0068 3B68     		ldr	r3, [r7]
 1083 006a 1A70     		strb	r2, [r3]
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 1084              		.loc 1 889 0
 1085 006c 3B68     		ldr	r3, [r7]
 1086 006e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1087 0070 1846     		mov	r0, r3
 1088 0072 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1089 0076 0346     		mov	r3, r0
 1090 0078 1A46     		mov	r2, r3
 1091 007a 3B68     		ldr	r3, [r7]
 1092 007c 5A70     		strb	r2, [r3, #1]
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 1093              		.loc 1 890 0
 1094 007e 3B68     		ldr	r3, [r7]
 1095 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1096 0082 1846     		mov	r0, r3
 1097 0084 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1098 0088 0346     		mov	r3, r0
 1099 008a 1A46     		mov	r2, r3
 1100 008c 3B68     		ldr	r3, [r7]
 1101 008e 9A70     		strb	r2, [r3, #2]
 1102              	.L71:
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1103              		.loc 1 892 0
 1104 0090 1037     		adds	r7, r7, #16
 1105 0092 BD46     		mov	sp, r7
 1106              		@ sp needed
 1107 0094 80BD     		pop	{r7, pc}
 1108              	.L74:
 1109 0096 00BF     		.align	2
 1110              	.L73:
 1111 0098 00280040 		.word	1073752064
 1112              		.cfi_endproc
 1113              	.LFE121:
 1115              		.section	.text.RTC_GetSubSecond,"ax",%progbits
 1116              		.align	2
 1117              		.global	RTC_GetSubSecond
 1118              		.thumb
 1119              		.thumb_func
 1121              	RTC_GetSubSecond:
 1122              	.LFB122:
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Gets the RTC current Calendar Subseconds value.
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This function freeze the Time and Date registers after reading the 
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         SSR register.
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC current Calendar Subseconds value.
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetSubSecond(void)
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1123              		.loc 1 902 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 8
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128 0000 80B4     		push	{r7}
 1129              	.LCFI35:
 1130              		.cfi_def_cfa_offset 4
 1131              		.cfi_offset 7, -4
 1132 0002 83B0     		sub	sp, sp, #12
 1133              	.LCFI36:
 1134              		.cfi_def_cfa_offset 16
 1135 0004 00AF     		add	r7, sp, #0
 1136              	.LCFI37:
 1137              		.cfi_def_cfa_register 7
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1138              		.loc 1 903 0
 1139 0006 0023     		movs	r3, #0
 1140 0008 7B60     		str	r3, [r7, #4]
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get subseconds values from the correspondent registers*/
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->SSR);
 1141              		.loc 1 906 0
 1142 000a 064B     		ldr	r3, .L77
 1143 000c 9B6A     		ldr	r3, [r3, #40]
 1144 000e 7B60     		str	r3, [r7, #4]
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Read DR register to unfroze calendar registers */
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   (void) (RTC->DR);
 1145              		.loc 1 909 0
 1146 0010 044B     		ldr	r3, .L77
 1147 0012 5B68     		ldr	r3, [r3, #4]
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmpreg);
 1148              		.loc 1 911 0
 1149 0014 7B68     		ldr	r3, [r7, #4]
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1150              		.loc 1 912 0
 1151 0016 1846     		mov	r0, r3
 1152 0018 0C37     		adds	r7, r7, #12
 1153 001a BD46     		mov	sp, r7
 1154              		@ sp needed
 1155 001c 5DF8047B 		ldr	r7, [sp], #4
 1156 0020 7047     		bx	lr
 1157              	.L78:
 1158 0022 00BF     		.align	2
 1159              	.L77:
 1160 0024 00280040 		.word	1073752064
 1161              		.cfi_endproc
 1162              	.LFE122:
 1164              		.section	.text.RTC_SetDate,"ax",%progbits
 1165              		.align	2
 1166              		.global	RTC_SetDate
 1167              		.thumb
 1168              		.thumb_func
 1170              	RTC_SetDate:
 1171              	.LFB123:
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Set the RTC current date.
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure that contains 
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                         the date configuration information for the RTC.
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Date register is configured
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Date register is not configured
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1172              		.loc 1 927 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 16
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176 0000 90B5     		push	{r4, r7, lr}
 1177              	.LCFI38:
 1178              		.cfi_def_cfa_offset 12
 1179              		.cfi_offset 4, -12
 1180              		.cfi_offset 7, -8
 1181              		.cfi_offset 14, -4
 1182 0002 85B0     		sub	sp, sp, #20
 1183              	.LCFI39:
 1184              		.cfi_def_cfa_offset 32
 1185 0004 00AF     		add	r7, sp, #0
 1186              	.LCFI40:
 1187              		.cfi_def_cfa_register 7
 1188 0006 7860     		str	r0, [r7, #4]
 1189 0008 3960     		str	r1, [r7]
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1190              		.loc 1 928 0
 1191 000a 0023     		movs	r3, #0
 1192 000c FB60     		str	r3, [r7, #12]
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 1193              		.loc 1 929 0
 1194 000e 0023     		movs	r3, #0
 1195 0010 FB72     		strb	r3, [r7, #11]
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC_Format == RTC_Format_BIN) && ((RTC_DateStruct->RTC_Month & 0x10) == 0x10))
 1196              		.loc 1 934 0
 1197 0012 7B68     		ldr	r3, [r7, #4]
 1198 0014 002B     		cmp	r3, #0
 1199 0016 0ED1     		bne	.L80
 1200              		.loc 1 934 0 is_stmt 0 discriminator 1
 1201 0018 3B68     		ldr	r3, [r7]
 1202 001a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1203 001c 03F01003 		and	r3, r3, #16
 1204 0020 002B     		cmp	r3, #0
 1205 0022 08D0     		beq	.L80
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (RTC_DateStruct->RTC_Month & (uint32_t)~(0x10)) + 0x0A;
 1206              		.loc 1 936 0 is_stmt 1
 1207 0024 3B68     		ldr	r3, [r7]
 1208 0026 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1209 0028 23F01003 		bic	r3, r3, #16
 1210 002c DBB2     		uxtb	r3, r3
 1211 002e 0A33     		adds	r3, r3, #10
 1212 0030 DAB2     		uxtb	r2, r3
 1213 0032 3B68     		ldr	r3, [r7]
 1214 0034 5A70     		strb	r2, [r3, #1]
 1215              	.L80:
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1216              		.loc 1 938 0
 1217 0036 7B68     		ldr	r3, [r7, #4]
 1218 0038 002B     		cmp	r3, #0
 1219 003a 0DD0     		beq	.L81
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_DateStruct->RTC_Year));
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_DateStruct->RTC_Month));
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_DATE(RTC_DateStruct->RTC_Date));
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year)));
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1220              		.loc 1 947 0
 1221 003c 3B68     		ldr	r3, [r7]
 1222 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1223 0040 1846     		mov	r0, r3
 1224 0042 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1225 0046 0346     		mov	r3, r0
 1226 0048 FB60     		str	r3, [r7, #12]
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MONTH(tmpreg));
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 1227              		.loc 1 949 0
 1228 004a 3B68     		ldr	r3, [r7]
 1229 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1230 004e 1846     		mov	r0, r3
 1231 0050 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1232 0054 0346     		mov	r3, r0
 1233 0056 FB60     		str	r3, [r7, #12]
 1234              	.L81:
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_DATE(tmpreg));
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WEEKDAY(RTC_DateStruct->RTC_WeekDay));
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 1235              		.loc 1 955 0
 1236 0058 7B68     		ldr	r3, [r7, #4]
 1237 005a 002B     		cmp	r3, #0
 1238 005c 0FD0     		beq	.L82
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 1239              		.loc 1 957 0
 1240 005e 3B68     		ldr	r3, [r7]
 1241 0060 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1242 0062 1A04     		lsls	r2, r3, #16
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1243              		.loc 1 958 0
 1244 0064 3B68     		ldr	r3, [r7]
 1245 0066 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1246 0068 1B02     		lsls	r3, r3, #8
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 1247              		.loc 1 957 0
 1248 006a 1A43     		orrs	r2, r2, r3
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 1249              		.loc 1 959 0
 1250 006c 3B68     		ldr	r3, [r7]
 1251 006e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1252              		.loc 1 958 0
 1253 0070 1A43     		orrs	r2, r2, r3
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_WeekDay) << 13)); 
 1254              		.loc 1 960 0
 1255 0072 3B68     		ldr	r3, [r7]
 1256 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 0076 5B03     		lsls	r3, r3, #13
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 1258              		.loc 1 957 0
 1259 0078 1343     		orrs	r3, r3, r2
 1260 007a FB60     		str	r3, [r7, #12]
 1261 007c 1BE0     		b	.L83
 1262              	.L82:
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 1263              		.loc 1 964 0
 1264 007e 3B68     		ldr	r3, [r7]
 1265 0080 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1266 0082 1846     		mov	r0, r3
 1267 0084 FFF7FEFF 		bl	RTC_ByteToBcd2
 1268 0088 0346     		mov	r3, r0
 1269 008a 1C04     		lsls	r4, r3, #16
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1270              		.loc 1 965 0
 1271 008c 3B68     		ldr	r3, [r7]
 1272 008e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1273 0090 1846     		mov	r0, r3
 1274 0092 FFF7FEFF 		bl	RTC_ByteToBcd2
 1275 0096 0346     		mov	r3, r0
 1276 0098 1B02     		lsls	r3, r3, #8
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 1277              		.loc 1 964 0
 1278 009a 1C43     		orrs	r4, r4, r3
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 1279              		.loc 1 966 0
 1280 009c 3B68     		ldr	r3, [r7]
 1281 009e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1282 00a0 1846     		mov	r0, r3
 1283 00a2 FFF7FEFF 		bl	RTC_ByteToBcd2
 1284 00a6 0346     		mov	r3, r0
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1285              		.loc 1 965 0
 1286 00a8 44EA0302 		orr	r2, r4, r3
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
 1287              		.loc 1 967 0
 1288 00ac 3B68     		ldr	r3, [r7]
 1289 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1290 00b0 5B03     		lsls	r3, r3, #13
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 1291              		.loc 1 964 0
 1292 00b2 1343     		orrs	r3, r3, r2
 1293 00b4 FB60     		str	r3, [r7, #12]
 1294              	.L83:
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 1295              		.loc 1 971 0
 1296 00b6 144B     		ldr	r3, .L88
 1297 00b8 CA22     		movs	r2, #202
 1298 00ba 5A62     		str	r2, [r3, #36]
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1299              		.loc 1 972 0
 1300 00bc 124B     		ldr	r3, .L88
 1301 00be 5322     		movs	r2, #83
 1302 00c0 5A62     		str	r2, [r3, #36]
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 1303              		.loc 1 975 0
 1304 00c2 FFF7FEFF 		bl	RTC_EnterInitMode
 1305 00c6 0346     		mov	r3, r0
 1306 00c8 002B     		cmp	r3, #0
 1307 00ca 02D1     		bne	.L84
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 1308              		.loc 1 977 0
 1309 00cc 0023     		movs	r3, #0
 1310 00ce FB72     		strb	r3, [r7, #11]
 1311 00d0 12E0     		b	.L85
 1312              	.L84:
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the RTC_DR register */
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)(tmpreg & RTC_DR_RESERVED_MASK);
 1313              		.loc 1 982 0
 1314 00d2 0D4A     		ldr	r2, .L88
 1315 00d4 FB68     		ldr	r3, [r7, #12]
 1316 00d6 23F07F43 		bic	r3, r3, #-16777216
 1317 00da 23F0C003 		bic	r3, r3, #192
 1318 00de 5360     		str	r3, [r2, #4]
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode(); 
 1319              		.loc 1 985 0
 1320 00e0 FFF7FEFF 		bl	RTC_ExitInitMode
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 1321              		.loc 1 987 0
 1322 00e4 FFF7FEFF 		bl	RTC_WaitForSynchro
 1323 00e8 0346     		mov	r3, r0
 1324 00ea 002B     		cmp	r3, #0
 1325 00ec 02D1     		bne	.L86
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 1326              		.loc 1 989 0
 1327 00ee 0023     		movs	r3, #0
 1328 00f0 FB72     		strb	r3, [r7, #11]
 1329 00f2 01E0     		b	.L85
 1330              	.L86:
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 1331              		.loc 1 993 0
 1332 00f4 0123     		movs	r3, #1
 1333 00f6 FB72     		strb	r3, [r7, #11]
 1334              	.L85:
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;   
 1335              		.loc 1 997 0
 1336 00f8 034B     		ldr	r3, .L88
 1337 00fa FF22     		movs	r2, #255
 1338 00fc 5A62     		str	r2, [r3, #36]
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 1339              		.loc 1 999 0
 1340 00fe FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1341              		.loc 1 1000 0
 1342 0100 1846     		mov	r0, r3
 1343 0102 1437     		adds	r7, r7, #20
 1344 0104 BD46     		mov	sp, r7
 1345              		@ sp needed
 1346 0106 90BD     		pop	{r4, r7, pc}
 1347              	.L89:
 1348              		.align	2
 1349              	.L88:
 1350 0108 00280040 		.word	1073752064
 1351              		.cfi_endproc
 1352              	.LFE123:
 1354              		.section	.text.RTC_DateStructInit,"ax",%progbits
 1355              		.align	2
 1356              		.global	RTC_DateStructInit
 1357              		.thumb
 1358              		.thumb_func
 1360              	RTC_DateStructInit:
 1361              	.LFB124:
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_DateStruct member with its default value
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         (Monday, January 01 xx00).
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure which will be 
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialized.
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_DateStructInit(RTC_DateTypeDef* RTC_DateStruct)
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1362              		.loc 1 1010 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 8
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367 0000 80B4     		push	{r7}
 1368              	.LCFI41:
 1369              		.cfi_def_cfa_offset 4
 1370              		.cfi_offset 7, -4
 1371 0002 83B0     		sub	sp, sp, #12
 1372              	.LCFI42:
 1373              		.cfi_def_cfa_offset 16
 1374 0004 00AF     		add	r7, sp, #0
 1375              	.LCFI43:
 1376              		.cfi_def_cfa_register 7
 1377 0006 7860     		str	r0, [r7, #4]
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Monday, January 01 xx00 */
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = RTC_Weekday_Monday;
 1378              		.loc 1 1012 0
 1379 0008 7B68     		ldr	r3, [r7, #4]
 1380 000a 0122     		movs	r2, #1
 1381 000c 1A70     		strb	r2, [r3]
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
 1382              		.loc 1 1013 0
 1383 000e 7B68     		ldr	r3, [r7, #4]
 1384 0010 0122     		movs	r2, #1
 1385 0012 9A70     		strb	r2, [r3, #2]
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = RTC_Month_January;
 1386              		.loc 1 1014 0
 1387 0014 7B68     		ldr	r3, [r7, #4]
 1388 0016 0122     		movs	r2, #1
 1389 0018 5A70     		strb	r2, [r3, #1]
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
 1390              		.loc 1 1015 0
 1391 001a 7B68     		ldr	r3, [r7, #4]
 1392 001c 0022     		movs	r2, #0
 1393 001e DA70     		strb	r2, [r3, #3]
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1394              		.loc 1 1016 0
 1395 0020 0C37     		adds	r7, r7, #12
 1396 0022 BD46     		mov	sp, r7
 1397              		@ sp needed
 1398 0024 5DF8047B 		ldr	r7, [sp], #4
 1399 0028 7047     		bx	lr
 1400              		.cfi_endproc
 1401              	.LFE124:
 1403 002a 00BF     		.section	.text.RTC_GetDate,"ax",%progbits
 1404              		.align	2
 1405              		.global	RTC_GetDate
 1406              		.thumb
 1407              		.thumb_func
 1409              	RTC_GetDate:
 1410              	.LFB125:
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC current date. 
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param RTC_DateStruct: pointer to a RTC_DateTypeDef structure that will 
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                        contain the returned current date configuration.     
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1411              		.loc 1 1029 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 16
 1414              		@ frame_needed = 1, uses_anonymous_args = 0
 1415 0000 80B5     		push	{r7, lr}
 1416              	.LCFI44:
 1417              		.cfi_def_cfa_offset 8
 1418              		.cfi_offset 7, -8
 1419              		.cfi_offset 14, -4
 1420 0002 84B0     		sub	sp, sp, #16
 1421              	.LCFI45:
 1422              		.cfi_def_cfa_offset 24
 1423 0004 00AF     		add	r7, sp, #0
 1424              	.LCFI46:
 1425              		.cfi_def_cfa_register 7
 1426 0006 7860     		str	r0, [r7, #4]
 1427 0008 3960     		str	r1, [r7]
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1428              		.loc 1 1030 0
 1429 000a 0023     		movs	r3, #0
 1430 000c FB60     		str	r3, [r7, #12]
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_TR register */
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->DR & RTC_DR_RESERVED_MASK); 
 1431              		.loc 1 1036 0
 1432 000e 244B     		ldr	r3, .L93
 1433 0010 5B68     		ldr	r3, [r3, #4]
 1434 0012 23F07F43 		bic	r3, r3, #-16777216
 1435 0016 23F0C003 		bic	r3, r3, #192
 1436 001a FB60     		str	r3, [r7, #12]
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the structure fields with the read parameters */
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = (uint8_t)((tmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16);
 1437              		.loc 1 1039 0
 1438 001c FB68     		ldr	r3, [r7, #12]
 1439 001e 03F47F03 		and	r3, r3, #16711680
 1440 0022 1B0C     		lsrs	r3, r3, #16
 1441 0024 DAB2     		uxtb	r2, r3
 1442 0026 3B68     		ldr	r3, [r7]
 1443 0028 DA70     		strb	r2, [r3, #3]
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1444              		.loc 1 1040 0
 1445 002a FB68     		ldr	r3, [r7, #12]
 1446 002c 03F4F853 		and	r3, r3, #7936
 1447 0030 1B0A     		lsrs	r3, r3, #8
 1448 0032 DAB2     		uxtb	r2, r3
 1449 0034 3B68     		ldr	r3, [r7]
 1450 0036 5A70     		strb	r2, [r3, #1]
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 1451              		.loc 1 1041 0
 1452 0038 FB68     		ldr	r3, [r7, #12]
 1453 003a DBB2     		uxtb	r3, r3
 1454 003c 03F03F03 		and	r3, r3, #63
 1455 0040 DAB2     		uxtb	r2, r3
 1456 0042 3B68     		ldr	r3, [r7]
 1457 0044 9A70     		strb	r2, [r3, #2]
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);  
 1458              		.loc 1 1042 0
 1459 0046 FB68     		ldr	r3, [r7, #12]
 1460 0048 03F46043 		and	r3, r3, #57344
 1461 004c 5B0B     		lsrs	r3, r3, #13
 1462 004e DAB2     		uxtb	r2, r3
 1463 0050 3B68     		ldr	r3, [r7]
 1464 0052 1A70     		strb	r2, [r3]
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1465              		.loc 1 1045 0
 1466 0054 7B68     		ldr	r3, [r7, #4]
 1467 0056 002B     		cmp	r3, #0
 1468 0058 1ED1     		bne	.L91
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the structure parameters to Binary format */
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Year = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year);
 1469              		.loc 1 1048 0
 1470 005a 3B68     		ldr	r3, [r7]
 1471 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1472 005e 1846     		mov	r0, r3
 1473 0060 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1474 0064 0346     		mov	r3, r0
 1475 0066 1A46     		mov	r2, r3
 1476 0068 3B68     		ldr	r3, [r7]
 1477 006a DA70     		strb	r2, [r3, #3]
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1478              		.loc 1 1049 0
 1479 006c 3B68     		ldr	r3, [r7]
 1480 006e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1481 0070 1846     		mov	r0, r3
 1482 0072 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1483 0076 0346     		mov	r3, r0
 1484 0078 1A46     		mov	r2, r3
 1485 007a 3B68     		ldr	r3, [r7]
 1486 007c 5A70     		strb	r2, [r3, #1]
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 1487              		.loc 1 1050 0
 1488 007e 3B68     		ldr	r3, [r7]
 1489 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1490 0082 1846     		mov	r0, r3
 1491 0084 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1492 0088 0346     		mov	r3, r0
 1493 008a 1A46     		mov	r2, r3
 1494 008c 3B68     		ldr	r3, [r7]
 1495 008e 9A70     		strb	r2, [r3, #2]
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_WeekDay = (uint8_t)(RTC_DateStruct->RTC_WeekDay);   
 1496              		.loc 1 1051 0
 1497 0090 3B68     		ldr	r3, [r7]
 1498 0092 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1499 0094 3B68     		ldr	r3, [r7]
 1500 0096 1A70     		strb	r2, [r3]
 1501              	.L91:
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1502              		.loc 1 1053 0
 1503 0098 1037     		adds	r7, r7, #16
 1504 009a BD46     		mov	sp, r7
 1505              		@ sp needed
 1506 009c 80BD     		pop	{r7, pc}
 1507              	.L94:
 1508 009e 00BF     		.align	2
 1509              	.L93:
 1510 00a0 00280040 		.word	1073752064
 1511              		.cfi_endproc
 1512              	.LFE125:
 1514              		.section	.text.RTC_SetAlarm,"ax",%progbits
 1515              		.align	2
 1516              		.global	RTC_SetAlarm
 1517              		.thumb
 1518              		.thumb_func
 1520              	RTC_SetAlarm:
 1521              	.LFB126:
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group3 Alarms configuration functions
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Alarms (Alarm A and Alarm B) configuration functions 
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               Alarms (Alarm A and Alarm B) configuration functions
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to program and read the RTC Alarms.
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Set the specified RTC Alarm.
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_AlarmCmd(DISABLE)).    
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that 
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          contains the alarm configuration parameters.     
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_SetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1522              		.loc 1 1090 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 24
 1525              		@ frame_needed = 1, uses_anonymous_args = 0
 1526 0000 90B5     		push	{r4, r7, lr}
 1527              	.LCFI47:
 1528              		.cfi_def_cfa_offset 12
 1529              		.cfi_offset 4, -12
 1530              		.cfi_offset 7, -8
 1531              		.cfi_offset 14, -4
 1532 0002 87B0     		sub	sp, sp, #28
 1533              	.LCFI48:
 1534              		.cfi_def_cfa_offset 40
 1535 0004 00AF     		add	r7, sp, #0
 1536              	.LCFI49:
 1537              		.cfi_def_cfa_register 7
 1538 0006 F860     		str	r0, [r7, #12]
 1539 0008 B960     		str	r1, [r7, #8]
 1540 000a 7A60     		str	r2, [r7, #4]
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1541              		.loc 1 1091 0
 1542 000c 0023     		movs	r3, #0
 1543 000e 7B61     		str	r3, [r7, #20]
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_ALARM_MASK(RTC_AlarmStruct->RTC_AlarmMask));
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel));
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1544              		.loc 1 1099 0
 1545 0010 FB68     		ldr	r3, [r7, #12]
 1546 0012 002B     		cmp	r3, #0
 1547 0014 09D1     		bne	.L96
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 1548              		.loc 1 1101 0
 1549 0016 474B     		ldr	r3, .L106
 1550 0018 9B68     		ldr	r3, [r3, #8]
 1551 001a 03F04003 		and	r3, r3, #64
 1552 001e 002B     		cmp	r3, #0
 1553 0020 27D1     		bne	.L98
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
 1554              		.loc 1 1108 0
 1555 0022 7B68     		ldr	r3, [r7, #4]
 1556 0024 0022     		movs	r2, #0
 1557 0026 DA70     		strb	r2, [r3, #3]
 1558 0028 23E0     		b	.L98
 1559              	.L96:
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes));
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds));
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 1560              		.loc 1 1125 0
 1561 002a 424B     		ldr	r3, .L106
 1562 002c 9B68     		ldr	r3, [r3, #8]
 1563 002e 03F04003 		and	r3, r3, #64
 1564 0032 002B     		cmp	r3, #0
 1565 0034 07D0     		beq	.L99
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours);
 1566              		.loc 1 1127 0
 1567 0036 7B68     		ldr	r3, [r7, #4]
 1568 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569 003a 1846     		mov	r0, r3
 1570 003c FFF7FEFF 		bl	RTC_Bcd2ToByte
 1571 0040 0346     		mov	r3, r0
 1572 0042 7B61     		str	r3, [r7, #20]
 1573 0044 02E0     		b	.L100
 1574              	.L99:
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
 1575              		.loc 1 1133 0
 1576 0046 7B68     		ldr	r3, [r7, #4]
 1577 0048 0022     		movs	r2, #0
 1578 004a DA70     		strb	r2, [r3, #3]
 1579              	.L100:
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours)));
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes)));
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)));
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
 1580              		.loc 1 1140 0
 1581 004c 7B68     		ldr	r3, [r7, #4]
 1582 004e 9B68     		ldr	r3, [r3, #8]
 1583 0050 002B     		cmp	r3, #0
 1584 0052 07D1     		bne	.L101
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
 1585              		.loc 1 1142 0
 1586 0054 7B68     		ldr	r3, [r7, #4]
 1587 0056 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1588 0058 1846     		mov	r0, r3
 1589 005a FFF7FEFF 		bl	RTC_Bcd2ToByte
 1590 005e 0346     		mov	r3, r0
 1591 0060 7B61     		str	r3, [r7, #20]
 1592 0062 06E0     		b	.L98
 1593              	.L101:
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
 1594              		.loc 1 1147 0
 1595 0064 7B68     		ldr	r3, [r7, #4]
 1596 0066 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1597 0068 1846     		mov	r0, r3
 1598 006a FFF7FEFF 		bl	RTC_Bcd2ToByte
 1599 006e 0346     		mov	r3, r0
 1600 0070 7B61     		str	r3, [r7, #20]
 1601              	.L98:
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }    
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 1602              		.loc 1 1153 0
 1603 0072 FB68     		ldr	r3, [r7, #12]
 1604 0074 002B     		cmp	r3, #0
 1605 0076 19D0     		beq	.L102
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1606              		.loc 1 1155 0
 1607 0078 7B68     		ldr	r3, [r7, #4]
 1608 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1609 007c 1A04     		lsls	r2, r3, #16
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1610              		.loc 1 1156 0
 1611 007e 7B68     		ldr	r3, [r7, #4]
 1612 0080 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1613 0082 1B02     		lsls	r3, r3, #8
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1614              		.loc 1 1155 0
 1615 0084 1A43     		orrs	r2, r2, r3
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 1616              		.loc 1 1157 0
 1617 0086 7B68     		ldr	r3, [r7, #4]
 1618 0088 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1619              		.loc 1 1156 0
 1620 008a 1A43     		orrs	r2, r2, r3
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1621              		.loc 1 1158 0
 1622 008c 7B68     		ldr	r3, [r7, #4]
 1623 008e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1624 0090 1B04     		lsls	r3, r3, #16
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 1625              		.loc 1 1157 0
 1626 0092 1A43     		orrs	r2, r2, r3
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1627              		.loc 1 1159 0
 1628 0094 7B68     		ldr	r3, [r7, #4]
 1629 0096 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1630 0098 1B06     		lsls	r3, r3, #24
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1631              		.loc 1 1158 0
 1632 009a 1A43     		orrs	r2, r2, r3
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 1633              		.loc 1 1160 0
 1634 009c 7B68     		ldr	r3, [r7, #4]
 1635 009e 9B68     		ldr	r3, [r3, #8]
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1636              		.loc 1 1159 0
 1637 00a0 1A43     		orrs	r2, r2, r3
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
 1638              		.loc 1 1161 0
 1639 00a2 7B68     		ldr	r3, [r7, #4]
 1640 00a4 5B68     		ldr	r3, [r3, #4]
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1641              		.loc 1 1155 0
 1642 00a6 1343     		orrs	r3, r3, r2
 1643 00a8 7B61     		str	r3, [r7, #20]
 1644 00aa 2BE0     		b	.L103
 1645              	.L102:
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1646              		.loc 1 1165 0
 1647 00ac 7B68     		ldr	r3, [r7, #4]
 1648 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1649 00b0 1846     		mov	r0, r3
 1650 00b2 FFF7FEFF 		bl	RTC_ByteToBcd2
 1651 00b6 0346     		mov	r3, r0
 1652 00b8 1C04     		lsls	r4, r3, #16
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1653              		.loc 1 1166 0
 1654 00ba 7B68     		ldr	r3, [r7, #4]
 1655 00bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1656 00be 1846     		mov	r0, r3
 1657 00c0 FFF7FEFF 		bl	RTC_ByteToBcd2
 1658 00c4 0346     		mov	r3, r0
 1659 00c6 1B02     		lsls	r3, r3, #8
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1660              		.loc 1 1165 0
 1661 00c8 1C43     		orrs	r4, r4, r3
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 1662              		.loc 1 1167 0
 1663 00ca 7B68     		ldr	r3, [r7, #4]
 1664 00cc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1665 00ce 1846     		mov	r0, r3
 1666 00d0 FFF7FEFF 		bl	RTC_ByteToBcd2
 1667 00d4 0346     		mov	r3, r0
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1668              		.loc 1 1166 0
 1669 00d6 44EA0302 		orr	r2, r4, r3
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1670              		.loc 1 1168 0
 1671 00da 7B68     		ldr	r3, [r7, #4]
 1672 00dc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1673 00de 1B04     		lsls	r3, r3, #16
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 1674              		.loc 1 1167 0
 1675 00e0 42EA0304 		orr	r4, r2, r3
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1676              		.loc 1 1169 0
 1677 00e4 7B68     		ldr	r3, [r7, #4]
 1678 00e6 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1679 00e8 1846     		mov	r0, r3
 1680 00ea FFF7FEFF 		bl	RTC_ByteToBcd2
 1681 00ee 0346     		mov	r3, r0
 1682 00f0 1B06     		lsls	r3, r3, #24
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1683              		.loc 1 1168 0
 1684 00f2 44EA0302 		orr	r2, r4, r3
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 1685              		.loc 1 1170 0
 1686 00f6 7B68     		ldr	r3, [r7, #4]
 1687 00f8 9B68     		ldr	r3, [r3, #8]
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1688              		.loc 1 1169 0
 1689 00fa 1A43     		orrs	r2, r2, r3
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
 1690              		.loc 1 1171 0
 1691 00fc 7B68     		ldr	r3, [r7, #4]
 1692 00fe 5B68     		ldr	r3, [r3, #4]
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1693              		.loc 1 1165 0
 1694 0100 1343     		orrs	r3, r3, r2
 1695 0102 7B61     		str	r3, [r7, #20]
 1696              	.L103:
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 1697              		.loc 1 1175 0
 1698 0104 0B4B     		ldr	r3, .L106
 1699 0106 CA22     		movs	r2, #202
 1700 0108 5A62     		str	r2, [r3, #36]
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1701              		.loc 1 1176 0
 1702 010a 0A4B     		ldr	r3, .L106
 1703 010c 5322     		movs	r2, #83
 1704 010e 5A62     		str	r2, [r3, #36]
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Alarm register */
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 1705              		.loc 1 1179 0
 1706 0110 BB68     		ldr	r3, [r7, #8]
 1707 0112 B3F5807F 		cmp	r3, #256
 1708 0116 03D1     		bne	.L104
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMAR = (uint32_t)tmpreg;
 1709              		.loc 1 1181 0
 1710 0118 064B     		ldr	r3, .L106
 1711 011a 7A69     		ldr	r2, [r7, #20]
 1712 011c DA61     		str	r2, [r3, #28]
 1713 011e 02E0     		b	.L105
 1714              	.L104:
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMBR = (uint32_t)tmpreg;
 1715              		.loc 1 1185 0
 1716 0120 044B     		ldr	r3, .L106
 1717 0122 7A69     		ldr	r2, [r7, #20]
 1718 0124 1A62     		str	r2, [r3, #32]
 1719              	.L105:
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;   
 1720              		.loc 1 1189 0
 1721 0126 034B     		ldr	r3, .L106
 1722 0128 FF22     		movs	r2, #255
 1723 012a 5A62     		str	r2, [r3, #36]
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1724              		.loc 1 1190 0
 1725 012c 1C37     		adds	r7, r7, #28
 1726 012e BD46     		mov	sp, r7
 1727              		@ sp needed
 1728 0130 90BD     		pop	{r4, r7, pc}
 1729              	.L107:
 1730 0132 00BF     		.align	2
 1731              	.L106:
 1732 0134 00280040 		.word	1073752064
 1733              		.cfi_endproc
 1734              	.LFE126:
 1736              		.section	.text.RTC_AlarmStructInit,"ax",%progbits
 1737              		.align	2
 1738              		.global	RTC_AlarmStructInit
 1739              		.thumb
 1740              		.thumb_func
 1742              	RTC_AlarmStructInit:
 1743              	.LFB127:
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_AlarmStruct member with its default value
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         (Time = 00h:00mn:00sec / Date = 1st day of the month/Mask =
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         all fields are masked).
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a @ref RTC_AlarmTypeDef structure which
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         will be initialized.
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_AlarmStructInit(RTC_AlarmTypeDef* RTC_AlarmStruct)
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1744              		.loc 1 1201 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 8
 1747              		@ frame_needed = 1, uses_anonymous_args = 0
 1748              		@ link register save eliminated.
 1749 0000 80B4     		push	{r7}
 1750              	.LCFI50:
 1751              		.cfi_def_cfa_offset 4
 1752              		.cfi_offset 7, -4
 1753 0002 83B0     		sub	sp, sp, #12
 1754              	.LCFI51:
 1755              		.cfi_def_cfa_offset 16
 1756 0004 00AF     		add	r7, sp, #0
 1757              	.LCFI52:
 1758              		.cfi_def_cfa_register 7
 1759 0006 7860     		str	r0, [r7, #4]
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = RTC_H12_AM;
 1760              		.loc 1 1203 0
 1761 0008 7B68     		ldr	r3, [r7, #4]
 1762 000a 0022     		movs	r2, #0
 1763 000c DA70     		strb	r2, [r3, #3]
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
 1764              		.loc 1 1204 0
 1765 000e 7B68     		ldr	r3, [r7, #4]
 1766 0010 0022     		movs	r2, #0
 1767 0012 1A70     		strb	r2, [r3]
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
 1768              		.loc 1 1205 0
 1769 0014 7B68     		ldr	r3, [r7, #4]
 1770 0016 0022     		movs	r2, #0
 1771 0018 5A70     		strb	r2, [r3, #1]
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
 1772              		.loc 1 1206 0
 1773 001a 7B68     		ldr	r3, [r7, #4]
 1774 001c 0022     		movs	r2, #0
 1775 001e 9A70     		strb	r2, [r3, #2]
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Date Settings : Date = 1st day of the month */
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = RTC_AlarmDateWeekDaySel_Date;
 1776              		.loc 1 1209 0
 1777 0020 7B68     		ldr	r3, [r7, #4]
 1778 0022 0022     		movs	r2, #0
 1779 0024 9A60     		str	r2, [r3, #8]
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
 1780              		.loc 1 1210 0
 1781 0026 7B68     		ldr	r3, [r7, #4]
 1782 0028 0122     		movs	r2, #1
 1783 002a 1A73     		strb	r2, [r3, #12]
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = RTC_AlarmMask_None;
 1784              		.loc 1 1213 0
 1785 002c 7B68     		ldr	r3, [r7, #4]
 1786 002e 0022     		movs	r2, #0
 1787 0030 5A60     		str	r2, [r3, #4]
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1788              		.loc 1 1214 0
 1789 0032 0C37     		adds	r7, r7, #12
 1790 0034 BD46     		mov	sp, r7
 1791              		@ sp needed
 1792 0036 5DF8047B 		ldr	r7, [sp], #4
 1793 003a 7047     		bx	lr
 1794              		.cfi_endproc
 1795              	.LFE127:
 1797              		.section	.text.RTC_GetAlarm,"ax",%progbits
 1798              		.align	2
 1799              		.global	RTC_GetAlarm
 1800              		.thumb
 1801              		.thumb_func
 1803              	RTC_GetAlarm:
 1804              	.LFB128:
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be read.
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that will 
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          contains the output alarm configuration values.     
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1805              		.loc 1 1231 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 24
 1808              		@ frame_needed = 1, uses_anonymous_args = 0
 1809 0000 80B5     		push	{r7, lr}
 1810              	.LCFI53:
 1811              		.cfi_def_cfa_offset 8
 1812              		.cfi_offset 7, -8
 1813              		.cfi_offset 14, -4
 1814 0002 86B0     		sub	sp, sp, #24
 1815              	.LCFI54:
 1816              		.cfi_def_cfa_offset 32
 1817 0004 00AF     		add	r7, sp, #0
 1818              	.LCFI55:
 1819              		.cfi_def_cfa_register 7
 1820 0006 F860     		str	r0, [r7, #12]
 1821 0008 B960     		str	r1, [r7, #8]
 1822 000a 7A60     		str	r2, [r7, #4]
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1823              		.loc 1 1232 0
 1824 000c 0023     		movs	r3, #0
 1825 000e 7B61     		str	r3, [r7, #20]
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm)); 
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_ALRMxR register */
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 1826              		.loc 1 1239 0
 1827 0010 BB68     		ldr	r3, [r7, #8]
 1828 0012 B3F5807F 		cmp	r3, #256
 1829 0016 03D1     		bne	.L110
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMAR);
 1830              		.loc 1 1241 0
 1831 0018 2E4B     		ldr	r3, .L113
 1832 001a DB69     		ldr	r3, [r3, #28]
 1833 001c 7B61     		str	r3, [r7, #20]
 1834 001e 02E0     		b	.L111
 1835              	.L110:
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMBR);
 1836              		.loc 1 1245 0
 1837 0020 2C4B     		ldr	r3, .L113
 1838 0022 1B6A     		ldr	r3, [r3, #32]
 1839 0024 7B61     		str	r3, [r7, #20]
 1840              	.L111:
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the structure with the read parameters */
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | \
 1841              		.loc 1 1249 0
 1842 0026 7B69     		ldr	r3, [r7, #20]
 1843 0028 03F47C13 		and	r3, r3, #4128768
 1844 002c 1B0C     		lsrs	r3, r3, #16
 1845 002e DAB2     		uxtb	r2, r3
 1846 0030 7B68     		ldr	r3, [r7, #4]
 1847 0032 1A70     		strb	r2, [r3]
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | \
 1848              		.loc 1 1251 0
 1849 0034 7B69     		ldr	r3, [r7, #20]
 1850 0036 03F4FE43 		and	r3, r3, #32512
 1851 003a 1B0A     		lsrs	r3, r3, #8
 1852 003c DAB2     		uxtb	r2, r3
 1853 003e 7B68     		ldr	r3, [r7, #4]
 1854 0040 5A70     		strb	r2, [r3, #1]
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | \
 1855              		.loc 1 1253 0
 1856 0042 7B69     		ldr	r3, [r7, #20]
 1857 0044 DBB2     		uxtb	r3, r3
 1858 0046 03F07F03 		and	r3, r3, #127
 1859 004a DAB2     		uxtb	r2, r3
 1860 004c 7B68     		ldr	r3, [r7, #4]
 1861 004e 9A70     		strb	r2, [r3, #2]
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
 1862              		.loc 1 1255 0
 1863 0050 7B69     		ldr	r3, [r7, #20]
 1864 0052 03F48003 		and	r3, r3, #4194304
 1865 0056 1B0C     		lsrs	r3, r3, #16
 1866 0058 DAB2     		uxtb	r2, r3
 1867 005a 7B68     		ldr	r3, [r7, #4]
 1868 005c DA70     		strb	r2, [r3, #3]
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 1869              		.loc 1 1256 0
 1870 005e 7B69     		ldr	r3, [r7, #20]
 1871 0060 03F07C53 		and	r3, r3, #1056964608
 1872 0064 1B0E     		lsrs	r3, r3, #24
 1873 0066 DAB2     		uxtb	r2, r3
 1874 0068 7B68     		ldr	r3, [r7, #4]
 1875 006a 1A73     		strb	r2, [r3, #12]
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 1876              		.loc 1 1257 0
 1877 006c 7B69     		ldr	r3, [r7, #20]
 1878 006e 03F08042 		and	r2, r3, #1073741824
 1879 0072 7B68     		ldr	r3, [r7, #4]
 1880 0074 9A60     		str	r2, [r3, #8]
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
 1881              		.loc 1 1258 0
 1882 0076 7B69     		ldr	r3, [r7, #20]
 1883 0078 03F08032 		and	r2, r3, #-2139062144
 1884 007c 7B68     		ldr	r3, [r7, #4]
 1885 007e 5A60     		str	r2, [r3, #4]
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1886              		.loc 1 1260 0
 1887 0080 FB68     		ldr	r3, [r7, #12]
 1888 0082 002B     		cmp	r3, #0
 1889 0084 23D1     		bne	.L109
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
 1890              		.loc 1 1262 0
 1891 0086 7B68     		ldr	r3, [r7, #4]
 1892 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1893 008a 1846     		mov	r0, r3
 1894 008c FFF7FEFF 		bl	RTC_Bcd2ToByte
 1895 0090 0346     		mov	r3, r0
 1896 0092 1A46     		mov	r2, r3
 1897 0094 7B68     		ldr	r3, [r7, #4]
 1898 0096 1A70     		strb	r2, [r3]
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Hours);
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
 1899              		.loc 1 1264 0
 1900 0098 7B68     		ldr	r3, [r7, #4]
 1901 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1902 009c 1846     		mov	r0, r3
 1903 009e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1904 00a2 0346     		mov	r3, r0
 1905 00a4 1A46     		mov	r2, r3
 1906 00a6 7B68     		ldr	r3, [r7, #4]
 1907 00a8 5A70     		strb	r2, [r3, #1]
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Minutes);
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
 1908              		.loc 1 1266 0
 1909 00aa 7B68     		ldr	r3, [r7, #4]
 1910 00ac 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1911 00ae 1846     		mov	r0, r3
 1912 00b0 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1913 00b4 0346     		mov	r3, r0
 1914 00b6 1A46     		mov	r2, r3
 1915 00b8 7B68     		ldr	r3, [r7, #4]
 1916 00ba 9A70     		strb	r2, [r3, #2]
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Seconds);
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmDateWeekDay = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
 1917              		.loc 1 1268 0
 1918 00bc 7B68     		ldr	r3, [r7, #4]
 1919 00be 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1920 00c0 1846     		mov	r0, r3
 1921 00c2 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1922 00c6 0346     		mov	r3, r0
 1923 00c8 1A46     		mov	r2, r3
 1924 00ca 7B68     		ldr	r3, [r7, #4]
 1925 00cc 1A73     		strb	r2, [r3, #12]
 1926              	.L109:
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1927              		.loc 1 1270 0
 1928 00ce 1837     		adds	r7, r7, #24
 1929 00d0 BD46     		mov	sp, r7
 1930              		@ sp needed
 1931 00d2 80BD     		pop	{r7, pc}
 1932              	.L114:
 1933              		.align	2
 1934              	.L113:
 1935 00d4 00280040 		.word	1073752064
 1936              		.cfi_endproc
 1937              	.LFE128:
 1939              		.section	.text.RTC_AlarmCmd,"ax",%progbits
 1940              		.align	2
 1941              		.global	RTC_AlarmCmd
 1942              		.thumb
 1943              		.thumb_func
 1945              	RTC_AlarmCmd:
 1946              	.LFB129:
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the specified RTC Alarm.
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the specified alarm.
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Alarm is enabled/disabled
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Alarm is not enabled/disabled  
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_AlarmCmd(uint32_t RTC_Alarm, FunctionalState NewState)
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 1947              		.loc 1 1285 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 24
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951              		@ link register save eliminated.
 1952 0000 80B4     		push	{r7}
 1953              	.LCFI56:
 1954              		.cfi_def_cfa_offset 4
 1955              		.cfi_offset 7, -4
 1956 0002 87B0     		sub	sp, sp, #28
 1957              	.LCFI57:
 1958              		.cfi_def_cfa_offset 32
 1959 0004 00AF     		add	r7, sp, #0
 1960              	.LCFI58:
 1961              		.cfi_def_cfa_register 7
 1962 0006 7860     		str	r0, [r7, #4]
 1963 0008 0B46     		mov	r3, r1
 1964 000a FB70     		strb	r3, [r7, #3]
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
 1965              		.loc 1 1286 0
 1966 000c 0023     		movs	r3, #0
 1967 000e FB60     		str	r3, [r7, #12]
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t alarmstatus = 0x00;
 1968              		.loc 1 1287 0
 1969 0010 0023     		movs	r3, #0
 1970 0012 3B61     		str	r3, [r7, #16]
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 1971              		.loc 1 1288 0
 1972 0014 0023     		movs	r3, #0
 1973 0016 FB75     		strb	r3, [r7, #23]
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CMD_ALARM(RTC_Alarm));
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 1974              		.loc 1 1295 0
 1975 0018 1F4B     		ldr	r3, .L122
 1976 001a CA22     		movs	r2, #202
 1977 001c 5A62     		str	r2, [r3, #36]
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1978              		.loc 1 1296 0
 1979 001e 1E4B     		ldr	r3, .L122
 1980 0020 5322     		movs	r2, #83
 1981 0022 5A62     		str	r2, [r3, #36]
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Alarm state */
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 1982              		.loc 1 1299 0
 1983 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1984 0026 002B     		cmp	r3, #0
 1985 0028 08D0     		beq	.L116
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_Alarm;
 1986              		.loc 1 1301 0
 1987 002a 1B4B     		ldr	r3, .L122
 1988 002c 1A4A     		ldr	r2, .L122
 1989 002e 9168     		ldr	r1, [r2, #8]
 1990 0030 7A68     		ldr	r2, [r7, #4]
 1991 0032 0A43     		orrs	r2, r2, r1
 1992 0034 9A60     		str	r2, [r3, #8]
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
 1993              		.loc 1 1303 0
 1994 0036 0123     		movs	r3, #1
 1995 0038 FB75     		strb	r3, [r7, #23]
 1996 003a 22E0     		b	.L117
 1997              	.L116:
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   { 
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the Alarm in RTC_CR register */
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_Alarm;
 1998              		.loc 1 1308 0
 1999 003c 164B     		ldr	r3, .L122
 2000 003e 164A     		ldr	r2, .L122
 2001 0040 9168     		ldr	r1, [r2, #8]
 2002 0042 7A68     		ldr	r2, [r7, #4]
 2003 0044 D243     		mvns	r2, r2
 2004 0046 0A40     		ands	r2, r2, r1
 2005 0048 9A60     		str	r2, [r3, #8]
 2006              	.L119:
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       alarmstatus = RTC->ISR & (RTC_Alarm >> 8);
 2007              		.loc 1 1313 0 discriminator 1
 2008 004a 134B     		ldr	r3, .L122
 2009 004c DA68     		ldr	r2, [r3, #12]
 2010 004e 7B68     		ldr	r3, [r7, #4]
 2011 0050 1B0A     		lsrs	r3, r3, #8
 2012 0052 1340     		ands	r3, r3, r2
 2013 0054 3B61     		str	r3, [r7, #16]
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       alarmcounter++;  
 2014              		.loc 1 1314 0 discriminator 1
 2015 0056 FB68     		ldr	r3, [r7, #12]
 2016 0058 0133     		adds	r3, r3, #1
 2017 005a FB60     		str	r3, [r7, #12]
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
 2018              		.loc 1 1315 0 discriminator 1
 2019 005c FB68     		ldr	r3, [r7, #12]
 2020 005e B3F5803F 		cmp	r3, #65536
 2021 0062 02D0     		beq	.L118
 2022 0064 3B69     		ldr	r3, [r7, #16]
 2023 0066 002B     		cmp	r3, #0
 2024 0068 EFD0     		beq	.L119
 2025              	.L118:
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & (RTC_Alarm >> 8)) == RESET)
 2026              		.loc 1 1317 0
 2027 006a 0B4B     		ldr	r3, .L122
 2028 006c DA68     		ldr	r2, [r3, #12]
 2029 006e 7B68     		ldr	r3, [r7, #4]
 2030 0070 1B0A     		lsrs	r3, r3, #8
 2031 0072 1340     		ands	r3, r3, r2
 2032 0074 002B     		cmp	r3, #0
 2033 0076 02D1     		bne	.L120
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 2034              		.loc 1 1319 0
 2035 0078 0023     		movs	r3, #0
 2036 007a FB75     		strb	r3, [r7, #23]
 2037 007c 01E0     		b	.L117
 2038              	.L120:
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 2039              		.loc 1 1323 0
 2040 007e 0123     		movs	r3, #1
 2041 0080 FB75     		strb	r3, [r7, #23]
 2042              	.L117:
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }        
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2043              		.loc 1 1328 0
 2044 0082 054B     		ldr	r3, .L122
 2045 0084 FF22     		movs	r2, #255
 2046 0086 5A62     		str	r2, [r3, #36]
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 2047              		.loc 1 1330 0
 2048 0088 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2049              		.loc 1 1331 0
 2050 008a 1846     		mov	r0, r3
 2051 008c 1C37     		adds	r7, r7, #28
 2052 008e BD46     		mov	sp, r7
 2053              		@ sp needed
 2054 0090 5DF8047B 		ldr	r7, [sp], #4
 2055 0094 7047     		bx	lr
 2056              	.L123:
 2057 0096 00BF     		.align	2
 2058              	.L122:
 2059 0098 00280040 		.word	1073752064
 2060              		.cfi_endproc
 2061              	.LFE129:
 2063              		.section	.text.RTC_AlarmSubSecondConfig,"ax",%progbits
 2064              		.align	2
 2065              		.global	RTC_AlarmSubSecondConfig
 2066              		.thumb
 2067              		.thumb_func
 2069              	RTC_AlarmSubSecondConfig:
 2070              	.LFB130:
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configure the RTC AlarmA/B Subseconds value and mask.*
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This function is performed only when the Alarm is disabled. 
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_A: to select Alarm A
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_B: to select Alarm B
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmSubSecondValue: specifies the Subseconds value.
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be a value from 0 to 0x00007FFF.
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmSubSecondMask:  specifies the Subseconds Mask.
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be any combination of the following values:
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_All    : All Alarm SS fields are masked.
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          There is no comparison on sub seconds for Alarm.
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_1 : SS[14:1] are don't care in Alarm comparison.
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[0] is compared
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_2 : SS[14:2] are don't care in Alarm comparison.
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[1:0] are compared
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_3 : SS[14:3] are don't care in Alarm comparison.
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[2:0] are compared
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_4 : SS[14:4] are don't care in Alarm comparison.
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[3:0] are compared
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_5 : SS[14:5] are don't care in Alarm comparison.
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[4:0] are compared
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_6 : SS[14:6] are don't care in Alarm comparison.
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[5:0] are compared
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_7 : SS[14:7] are don't care in Alarm comparison.
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[6:0] are compared
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_8 : SS[14:8] are don't care in Alarm comparison.
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[7:0] are compared
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_9 : SS[14:9] are don't care in Alarm comparison.
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[8:0] are compared
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_10: SS[14:10] are don't care in Alarm comparison.
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[9:0] are compared
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_11: SS[14:11] are don't care in Alarm comparison.
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[10:0] are compared
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_12: SS[14:12] are don't care in Alarm comparison.
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[11:0] are compared
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_13: SS[14:13] are don't care in Alarm comparison.
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[12:0] are compared
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14   : SS[14] is don't care in Alarm comparison.
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[13:0] are compared
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_None   : SS[14:0] are compared and must match
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          to activate alarm
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_AlarmSubSecondConfig(uint32_t RTC_Alarm, uint32_t RTC_AlarmSubSecondValue, uint32_t RTC_Al
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2071              		.loc 1 1379 0
 2072              		.cfi_startproc
 2073              		@ args = 0, pretend = 0, frame = 24
 2074              		@ frame_needed = 1, uses_anonymous_args = 0
 2075              		@ link register save eliminated.
 2076 0000 80B4     		push	{r7}
 2077              	.LCFI59:
 2078              		.cfi_def_cfa_offset 4
 2079              		.cfi_offset 7, -4
 2080 0002 87B0     		sub	sp, sp, #28
 2081              	.LCFI60:
 2082              		.cfi_def_cfa_offset 32
 2083 0004 00AF     		add	r7, sp, #0
 2084              	.LCFI61:
 2085              		.cfi_def_cfa_register 7
 2086 0006 F860     		str	r0, [r7, #12]
 2087 0008 B960     		str	r1, [r7, #8]
 2088 000a 7A60     		str	r2, [r7, #4]
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2089              		.loc 1 1380 0
 2090 000c 0023     		movs	r3, #0
 2091 000e 7B61     		str	r3, [r7, #20]
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(RTC_AlarmSubSecondValue));
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(RTC_AlarmSubSecondMask));
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2092              		.loc 1 1388 0
 2093 0010 0E4B     		ldr	r3, .L127
 2094 0012 CA22     		movs	r2, #202
 2095 0014 5A62     		str	r2, [r3, #36]
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2096              		.loc 1 1389 0
 2097 0016 0D4B     		ldr	r3, .L127
 2098 0018 5322     		movs	r2, #83
 2099 001a 5A62     		str	r2, [r3, #36]
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Alarm A or Alarm B SubSecond registers */
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t) (uint32_t)(RTC_AlarmSubSecondValue) | (uint32_t)(RTC_AlarmSubSecondMask);
 2100              		.loc 1 1392 0
 2101 001c BA68     		ldr	r2, [r7, #8]
 2102 001e 7B68     		ldr	r3, [r7, #4]
 2103 0020 1343     		orrs	r3, r3, r2
 2104 0022 7B61     		str	r3, [r7, #20]
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 2105              		.loc 1 1394 0
 2106 0024 FB68     		ldr	r3, [r7, #12]
 2107 0026 B3F5807F 		cmp	r3, #256
 2108 002a 03D1     		bne	.L125
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the AlarmA SubSecond register */
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMASSR = tmpreg;
 2109              		.loc 1 1397 0
 2110 002c 074B     		ldr	r3, .L127
 2111 002e 7A69     		ldr	r2, [r7, #20]
 2112 0030 5A64     		str	r2, [r3, #68]
 2113 0032 02E0     		b	.L126
 2114              	.L125:
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Alarm B SubSecond register */
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMBSSR = tmpreg;
 2115              		.loc 1 1402 0
 2116 0034 054B     		ldr	r3, .L127
 2117 0036 7A69     		ldr	r2, [r7, #20]
 2118 0038 9A64     		str	r2, [r3, #72]
 2119              	.L126:
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 2120              		.loc 1 1406 0
 2121 003a 044B     		ldr	r3, .L127
 2122 003c FF22     		movs	r2, #255
 2123 003e 5A62     		str	r2, [r3, #36]
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2124              		.loc 1 1408 0
 2125 0040 1C37     		adds	r7, r7, #28
 2126 0042 BD46     		mov	sp, r7
 2127              		@ sp needed
 2128 0044 5DF8047B 		ldr	r7, [sp], #4
 2129 0048 7047     		bx	lr
 2130              	.L128:
 2131 004a 00BF     		.align	2
 2132              	.L127:
 2133 004c 00280040 		.word	1073752064
 2134              		.cfi_endproc
 2135              	.LFE130:
 2137              		.section	.text.RTC_GetAlarmSubSecond,"ax",%progbits
 2138              		.align	2
 2139              		.global	RTC_GetAlarmSubSecond
 2140              		.thumb
 2141              		.thumb_func
 2143              	RTC_GetAlarmSubSecond:
 2144              	.LFB131:
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Gets the RTC Alarm Subseconds value.
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be read.
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_A: to select Alarm A
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_B: to select Alarm B
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC Alarm Subseconds value.
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetAlarmSubSecond(uint32_t RTC_Alarm)
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2145              		.loc 1 1420 0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 16
 2148              		@ frame_needed = 1, uses_anonymous_args = 0
 2149              		@ link register save eliminated.
 2150 0000 80B4     		push	{r7}
 2151              	.LCFI62:
 2152              		.cfi_def_cfa_offset 4
 2153              		.cfi_offset 7, -4
 2154 0002 85B0     		sub	sp, sp, #20
 2155              	.LCFI63:
 2156              		.cfi_def_cfa_offset 24
 2157 0004 00AF     		add	r7, sp, #0
 2158              	.LCFI64:
 2159              		.cfi_def_cfa_register 7
 2160 0006 7860     		str	r0, [r7, #4]
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2161              		.loc 1 1421 0
 2162 0008 0023     		movs	r3, #0
 2163 000a FB60     		str	r3, [r7, #12]
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_ALRMxR register */
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 2164              		.loc 1 1424 0
 2165 000c 7B68     		ldr	r3, [r7, #4]
 2166 000e B3F5807F 		cmp	r3, #256
 2167 0012 05D1     		bne	.L130
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)((RTC->ALRMASSR) & RTC_ALRMASSR_SS);
 2168              		.loc 1 1426 0
 2169 0014 084B     		ldr	r3, .L133
 2170 0016 5B6C     		ldr	r3, [r3, #68]
 2171 0018 C3F30E03 		ubfx	r3, r3, #0, #15
 2172 001c FB60     		str	r3, [r7, #12]
 2173 001e 04E0     		b	.L131
 2174              	.L130:
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)((RTC->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2175              		.loc 1 1430 0
 2176 0020 054B     		ldr	r3, .L133
 2177 0022 9B6C     		ldr	r3, [r3, #72]
 2178 0024 C3F30E03 		ubfx	r3, r3, #0, #15
 2179 0028 FB60     		str	r3, [r7, #12]
 2180              	.L131:
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmpreg);
 2181              		.loc 1 1433 0
 2182 002a FB68     		ldr	r3, [r7, #12]
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2183              		.loc 1 1434 0
 2184 002c 1846     		mov	r0, r3
 2185 002e 1437     		adds	r7, r7, #20
 2186 0030 BD46     		mov	sp, r7
 2187              		@ sp needed
 2188 0032 5DF8047B 		ldr	r7, [sp], #4
 2189 0036 7047     		bx	lr
 2190              	.L134:
 2191              		.align	2
 2192              	.L133:
 2193 0038 00280040 		.word	1073752064
 2194              		.cfi_endproc
 2195              	.LFE131:
 2197              		.section	.text.RTC_WakeUpClockConfig,"ax",%progbits
 2198              		.align	2
 2199              		.global	RTC_WakeUpClockConfig
 2200              		.thumb
 2201              		.thumb_func
 2203              	RTC_WakeUpClockConfig:
 2204              	.LFB132:
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group4 WakeUp Timer configuration functions
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   WakeUp Timer configuration functions 
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                      WakeUp Timer configuration functions
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to program and read the RTC WakeUp.
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Wakeup clock source.
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The WakeUp Clock source can only be changed when the RTC WakeUp
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).      
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_WakeUpClock: Wakeup Clock source.
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div16: RTC Wakeup Counter Clock = RTCCLK/16
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div8: RTC Wakeup Counter Clock = RTCCLK/8
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div4: RTC Wakeup Counter Clock = RTCCLK/4
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div2: RTC Wakeup Counter Clock = RTCCLK/2
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_16bits: RTC Wakeup Counter Clock = CK_SPRE
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_17bits: RTC Wakeup Counter Clock = CK_SPRE
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_WakeUpClockConfig(uint32_t RTC_WakeUpClock)
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2205              		.loc 1 1469 0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 8
 2208              		@ frame_needed = 1, uses_anonymous_args = 0
 2209              		@ link register save eliminated.
 2210 0000 80B4     		push	{r7}
 2211              	.LCFI65:
 2212              		.cfi_def_cfa_offset 4
 2213              		.cfi_offset 7, -4
 2214 0002 83B0     		sub	sp, sp, #12
 2215              	.LCFI66:
 2216              		.cfi_def_cfa_offset 16
 2217 0004 00AF     		add	r7, sp, #0
 2218              	.LCFI67:
 2219              		.cfi_def_cfa_register 7
 2220 0006 7860     		str	r0, [r7, #4]
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(RTC_WakeUpClock));
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2221              		.loc 1 1474 0
 2222 0008 0C4B     		ldr	r3, .L136
 2223 000a CA22     		movs	r2, #202
 2224 000c 5A62     		str	r2, [r3, #36]
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2225              		.loc 1 1475 0
 2226 000e 0B4B     		ldr	r3, .L136
 2227 0010 5322     		movs	r2, #83
 2228 0012 5A62     		str	r2, [r3, #36]
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 2229              		.loc 1 1478 0
 2230 0014 094B     		ldr	r3, .L136
 2231 0016 094A     		ldr	r2, .L136
 2232 0018 9268     		ldr	r2, [r2, #8]
 2233 001a 22F00702 		bic	r2, r2, #7
 2234 001e 9A60     		str	r2, [r3, #8]
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the clock source */
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_WakeUpClock;
 2235              		.loc 1 1481 0
 2236 0020 064B     		ldr	r3, .L136
 2237 0022 064A     		ldr	r2, .L136
 2238 0024 9168     		ldr	r1, [r2, #8]
 2239 0026 7A68     		ldr	r2, [r7, #4]
 2240 0028 0A43     		orrs	r2, r2, r1
 2241 002a 9A60     		str	r2, [r3, #8]
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2242              		.loc 1 1484 0
 2243 002c 034B     		ldr	r3, .L136
 2244 002e FF22     		movs	r2, #255
 2245 0030 5A62     		str	r2, [r3, #36]
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2246              		.loc 1 1485 0
 2247 0032 0C37     		adds	r7, r7, #12
 2248 0034 BD46     		mov	sp, r7
 2249              		@ sp needed
 2250 0036 5DF8047B 		ldr	r7, [sp], #4
 2251 003a 7047     		bx	lr
 2252              	.L137:
 2253              		.align	2
 2254              	.L136:
 2255 003c 00280040 		.word	1073752064
 2256              		.cfi_endproc
 2257              	.LFE132:
 2259              		.section	.text.RTC_SetWakeUpCounter,"ax",%progbits
 2260              		.align	2
 2261              		.global	RTC_SetWakeUpCounter
 2262              		.thumb
 2263              		.thumb_func
 2265              	RTC_SetWakeUpCounter:
 2266              	.LFB133:
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Wakeup counter.
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC WakeUp counter can only be written when the RTC WakeUp
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).        
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_WakeUpCounter: specifies the WakeUp counter.
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be a value from 0x0000 to 0xFFFF. 
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_SetWakeUpCounter(uint32_t RTC_WakeUpCounter)
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2267              		.loc 1 1496 0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 8
 2270              		@ frame_needed = 1, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
 2272 0000 80B4     		push	{r7}
 2273              	.LCFI68:
 2274              		.cfi_def_cfa_offset 4
 2275              		.cfi_offset 7, -4
 2276 0002 83B0     		sub	sp, sp, #12
 2277              	.LCFI69:
 2278              		.cfi_def_cfa_offset 16
 2279 0004 00AF     		add	r7, sp, #0
 2280              	.LCFI70:
 2281              		.cfi_def_cfa_register 7
 2282 0006 7860     		str	r0, [r7, #4]
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(RTC_WakeUpCounter));
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2283              		.loc 1 1501 0
 2284 0008 084B     		ldr	r3, .L139
 2285 000a CA22     		movs	r2, #202
 2286 000c 5A62     		str	r2, [r3, #36]
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2287              		.loc 1 1502 0
 2288 000e 074B     		ldr	r3, .L139
 2289 0010 5322     		movs	r2, #83
 2290 0012 5A62     		str	r2, [r3, #36]
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Wakeup Timer counter */
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WUTR = (uint32_t)RTC_WakeUpCounter;
 2291              		.loc 1 1505 0
 2292 0014 054B     		ldr	r3, .L139
 2293 0016 7A68     		ldr	r2, [r7, #4]
 2294 0018 5A61     		str	r2, [r3, #20]
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2295              		.loc 1 1508 0
 2296 001a 044B     		ldr	r3, .L139
 2297 001c FF22     		movs	r2, #255
 2298 001e 5A62     		str	r2, [r3, #36]
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2299              		.loc 1 1509 0
 2300 0020 0C37     		adds	r7, r7, #12
 2301 0022 BD46     		mov	sp, r7
 2302              		@ sp needed
 2303 0024 5DF8047B 		ldr	r7, [sp], #4
 2304 0028 7047     		bx	lr
 2305              	.L140:
 2306 002a 00BF     		.align	2
 2307              	.L139:
 2308 002c 00280040 		.word	1073752064
 2309              		.cfi_endproc
 2310              	.LFE133:
 2312              		.section	.text.RTC_GetWakeUpCounter,"ax",%progbits
 2313              		.align	2
 2314              		.global	RTC_GetWakeUpCounter
 2315              		.thumb
 2316              		.thumb_func
 2318              	RTC_GetWakeUpCounter:
 2319              	.LFB134:
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Returns the RTC WakeUp timer counter value.
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval The RTC WakeUp Counter value.
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetWakeUpCounter(void)
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2320              		.loc 1 1517 0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 1, uses_anonymous_args = 0
 2324              		@ link register save eliminated.
 2325 0000 80B4     		push	{r7}
 2326              	.LCFI71:
 2327              		.cfi_def_cfa_offset 4
 2328              		.cfi_offset 7, -4
 2329 0002 00AF     		add	r7, sp, #0
 2330              	.LCFI72:
 2331              		.cfi_def_cfa_register 7
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the counter value */
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return ((uint32_t)(RTC->WUTR & RTC_WUTR_WUT));
 2332              		.loc 1 1519 0
 2333 0004 034B     		ldr	r3, .L143
 2334 0006 5B69     		ldr	r3, [r3, #20]
 2335 0008 9BB2     		uxth	r3, r3
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2336              		.loc 1 1520 0
 2337 000a 1846     		mov	r0, r3
 2338 000c BD46     		mov	sp, r7
 2339              		@ sp needed
 2340 000e 5DF8047B 		ldr	r7, [sp], #4
 2341 0012 7047     		bx	lr
 2342              	.L144:
 2343              		.align	2
 2344              	.L143:
 2345 0014 00280040 		.word	1073752064
 2346              		.cfi_endproc
 2347              	.LFE134:
 2349              		.section	.text.RTC_WakeUpCmd,"ax",%progbits
 2350              		.align	2
 2351              		.global	RTC_WakeUpCmd
 2352              		.thumb
 2353              		.thumb_func
 2355              	RTC_WakeUpCmd:
 2356              	.LFB135:
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the RTC WakeUp timer.
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the WakeUp timer.
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_WakeUpCmd(FunctionalState NewState)
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2357              		.loc 1 1529 0
 2358              		.cfi_startproc
 2359              		@ args = 0, pretend = 0, frame = 24
 2360              		@ frame_needed = 1, uses_anonymous_args = 0
 2361              		@ link register save eliminated.
 2362 0000 80B4     		push	{r7}
 2363              	.LCFI73:
 2364              		.cfi_def_cfa_offset 4
 2365              		.cfi_offset 7, -4
 2366 0002 87B0     		sub	sp, sp, #28
 2367              	.LCFI74:
 2368              		.cfi_def_cfa_offset 32
 2369 0004 00AF     		add	r7, sp, #0
 2370              	.LCFI75:
 2371              		.cfi_def_cfa_register 7
 2372 0006 0346     		mov	r3, r0
 2373 0008 FB71     		strb	r3, [r7, #7]
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 2374              		.loc 1 1530 0
 2375 000a 0023     		movs	r3, #0
 2376 000c FB60     		str	r3, [r7, #12]
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 2377              		.loc 1 1531 0
 2378 000e 0023     		movs	r3, #0
 2379 0010 3B61     		str	r3, [r7, #16]
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2380              		.loc 1 1532 0
 2381 0012 0023     		movs	r3, #0
 2382 0014 FB75     		strb	r3, [r7, #23]
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2383              		.loc 1 1538 0
 2384 0016 1E4B     		ldr	r3, .L152
 2385 0018 CA22     		movs	r2, #202
 2386 001a 5A62     		str	r2, [r3, #36]
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2387              		.loc 1 1539 0
 2388 001c 1C4B     		ldr	r3, .L152
 2389 001e 5322     		movs	r2, #83
 2390 0020 5A62     		str	r2, [r3, #36]
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 2391              		.loc 1 1541 0
 2392 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2393 0024 002B     		cmp	r3, #0
 2394 0026 08D0     		beq	.L146
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the Wakeup Timer */
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_WUTE;
 2395              		.loc 1 1544 0
 2396 0028 194B     		ldr	r3, .L152
 2397 002a 194A     		ldr	r2, .L152
 2398 002c 9268     		ldr	r2, [r2, #8]
 2399 002e 42F48062 		orr	r2, r2, #1024
 2400 0032 9A60     		str	r2, [r3, #8]
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
 2401              		.loc 1 1545 0
 2402 0034 0123     		movs	r3, #1
 2403 0036 FB75     		strb	r3, [r7, #23]
 2404 0038 1FE0     		b	.L147
 2405              	.L146:
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the Wakeup Timer */
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_WUTE;
 2406              		.loc 1 1550 0
 2407 003a 154B     		ldr	r3, .L152
 2408 003c 144A     		ldr	r2, .L152
 2409 003e 9268     		ldr	r2, [r2, #8]
 2410 0040 22F48062 		bic	r2, r2, #1024
 2411 0044 9A60     		str	r2, [r3, #8]
 2412              	.L149:
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
 2413              		.loc 1 1554 0 discriminator 1
 2414 0046 124B     		ldr	r3, .L152
 2415 0048 DB68     		ldr	r3, [r3, #12]
 2416 004a 03F00403 		and	r3, r3, #4
 2417 004e 3B61     		str	r3, [r7, #16]
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
 2418              		.loc 1 1555 0 discriminator 1
 2419 0050 FB68     		ldr	r3, [r7, #12]
 2420 0052 0133     		adds	r3, r3, #1
 2421 0054 FB60     		str	r3, [r7, #12]
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 2422              		.loc 1 1556 0 discriminator 1
 2423 0056 FB68     		ldr	r3, [r7, #12]
 2424 0058 B3F5803F 		cmp	r3, #65536
 2425 005c 02D0     		beq	.L148
 2426 005e 3B69     		ldr	r3, [r7, #16]
 2427 0060 002B     		cmp	r3, #0
 2428 0062 F0D0     		beq	.L149
 2429              	.L148:
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
 2430              		.loc 1 1558 0
 2431 0064 0A4B     		ldr	r3, .L152
 2432 0066 DB68     		ldr	r3, [r3, #12]
 2433 0068 03F00403 		and	r3, r3, #4
 2434 006c 002B     		cmp	r3, #0
 2435 006e 02D1     		bne	.L150
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 2436              		.loc 1 1560 0
 2437 0070 0023     		movs	r3, #0
 2438 0072 FB75     		strb	r3, [r7, #23]
 2439 0074 01E0     		b	.L147
 2440              	.L150:
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 2441              		.loc 1 1564 0
 2442 0076 0123     		movs	r3, #1
 2443 0078 FB75     		strb	r3, [r7, #23]
 2444              	.L147:
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }    
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2445              		.loc 1 1569 0
 2446 007a 054B     		ldr	r3, .L152
 2447 007c FF22     		movs	r2, #255
 2448 007e 5A62     		str	r2, [r3, #36]
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 2449              		.loc 1 1571 0
 2450 0080 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2451              		.loc 1 1572 0
 2452 0082 1846     		mov	r0, r3
 2453 0084 1C37     		adds	r7, r7, #28
 2454 0086 BD46     		mov	sp, r7
 2455              		@ sp needed
 2456 0088 5DF8047B 		ldr	r7, [sp], #4
 2457 008c 7047     		bx	lr
 2458              	.L153:
 2459 008e 00BF     		.align	2
 2460              	.L152:
 2461 0090 00280040 		.word	1073752064
 2462              		.cfi_endproc
 2463              	.LFE135:
 2465              		.section	.text.RTC_DayLightSavingConfig,"ax",%progbits
 2466              		.align	2
 2467              		.global	RTC_DayLightSavingConfig
 2468              		.thumb
 2469              		.thumb_func
 2471              	RTC_DayLightSavingConfig:
 2472              	.LFB136:
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group5 Daylight Saving configuration functions
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Daylight Saving configuration functions 
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                     Daylight Saving configuration functions
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to configure the RTC DayLight Saving.
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Adds or substract one hour from the current time.
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_DayLightSaveOperation: the value of hour adjustment. 
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_DayLightSaving_SUB1H: Substract one hour (winter time)
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_DayLightSaving_ADD1H: Add one hour (summer time)
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_StoreOperation: Specifies the value to be written in the BCK bit 
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                            in CR register to store the operation.
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_StoreOperation_Reset: BCK Bit Reset
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_StoreOperation_Set: BCK Bit Set
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_DayLightSavingConfig(uint32_t RTC_DayLightSaving, uint32_t RTC_StoreOperation)
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2473              		.loc 1 1606 0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 8
 2476              		@ frame_needed = 1, uses_anonymous_args = 0
 2477              		@ link register save eliminated.
 2478 0000 80B4     		push	{r7}
 2479              	.LCFI76:
 2480              		.cfi_def_cfa_offset 4
 2481              		.cfi_offset 7, -4
 2482 0002 83B0     		sub	sp, sp, #12
 2483              	.LCFI77:
 2484              		.cfi_def_cfa_offset 16
 2485 0004 00AF     		add	r7, sp, #0
 2486              	.LCFI78:
 2487              		.cfi_def_cfa_register 7
 2488 0006 7860     		str	r0, [r7, #4]
 2489 0008 3960     		str	r1, [r7]
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(RTC_DayLightSaving));
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(RTC_StoreOperation));
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2490              		.loc 1 1612 0
 2491 000a 0E4B     		ldr	r3, .L155
 2492 000c CA22     		movs	r2, #202
 2493 000e 5A62     		str	r2, [r3, #36]
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2494              		.loc 1 1613 0
 2495 0010 0C4B     		ldr	r3, .L155
 2496 0012 5322     		movs	r2, #83
 2497 0014 5A62     		str	r2, [r3, #36]
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the bits to be configured */
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_BCK);
 2498              		.loc 1 1616 0
 2499 0016 0B4B     		ldr	r3, .L155
 2500 0018 0A4A     		ldr	r2, .L155
 2501 001a 9268     		ldr	r2, [r2, #8]
 2502 001c 22F48022 		bic	r2, r2, #262144
 2503 0020 9A60     		str	r2, [r3, #8]
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_CR register */
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_DayLightSaving | RTC_StoreOperation);
 2504              		.loc 1 1619 0
 2505 0022 084B     		ldr	r3, .L155
 2506 0024 074A     		ldr	r2, .L155
 2507 0026 9168     		ldr	r1, [r2, #8]
 2508 0028 7868     		ldr	r0, [r7, #4]
 2509 002a 3A68     		ldr	r2, [r7]
 2510 002c 0243     		orrs	r2, r2, r0
 2511 002e 0A43     		orrs	r2, r2, r1
 2512 0030 9A60     		str	r2, [r3, #8]
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2513              		.loc 1 1622 0
 2514 0032 044B     		ldr	r3, .L155
 2515 0034 FF22     		movs	r2, #255
 2516 0036 5A62     		str	r2, [r3, #36]
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2517              		.loc 1 1623 0
 2518 0038 0C37     		adds	r7, r7, #12
 2519 003a BD46     		mov	sp, r7
 2520              		@ sp needed
 2521 003c 5DF8047B 		ldr	r7, [sp], #4
 2522 0040 7047     		bx	lr
 2523              	.L156:
 2524 0042 00BF     		.align	2
 2525              	.L155:
 2526 0044 00280040 		.word	1073752064
 2527              		.cfi_endproc
 2528              	.LFE136:
 2530              		.section	.text.RTC_GetStoreOperation,"ax",%progbits
 2531              		.align	2
 2532              		.global	RTC_GetStoreOperation
 2533              		.thumb
 2534              		.thumb_func
 2536              	RTC_GetStoreOperation:
 2537              	.LFB137:
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Returns the RTC Day Light Saving stored operation.
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC Day Light Saving stored operation.
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - RTC_StoreOperation_Reset
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - RTC_StoreOperation_Set       
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetStoreOperation(void)
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2538              		.loc 1 1633 0
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 0
 2541              		@ frame_needed = 1, uses_anonymous_args = 0
 2542              		@ link register save eliminated.
 2543 0000 80B4     		push	{r7}
 2544              	.LCFI79:
 2545              		.cfi_def_cfa_offset 4
 2546              		.cfi_offset 7, -4
 2547 0002 00AF     		add	r7, sp, #0
 2548              	.LCFI80:
 2549              		.cfi_def_cfa_register 7
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (RTC->CR & RTC_CR_BCK);
 2550              		.loc 1 1634 0
 2551 0004 044B     		ldr	r3, .L159
 2552 0006 9B68     		ldr	r3, [r3, #8]
 2553 0008 03F48023 		and	r3, r3, #262144
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2554              		.loc 1 1635 0
 2555 000c 1846     		mov	r0, r3
 2556 000e BD46     		mov	sp, r7
 2557              		@ sp needed
 2558 0010 5DF8047B 		ldr	r7, [sp], #4
 2559 0014 7047     		bx	lr
 2560              	.L160:
 2561 0016 00BF     		.align	2
 2562              	.L159:
 2563 0018 00280040 		.word	1073752064
 2564              		.cfi_endproc
 2565              	.LFE137:
 2567              		.section	.text.RTC_OutputConfig,"ax",%progbits
 2568              		.align	2
 2569              		.global	RTC_OutputConfig
 2570              		.thumb
 2571              		.thumb_func
 2573              	RTC_OutputConfig:
 2574              	.LFB138:
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group6 Output pin Configuration function
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Output pin Configuration function 
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                          Output pin Configuration function
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   This section provide functions allowing to configure the RTC Output source.
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC output source (AFO_ALARM).
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Output: Specifies which signal will be routed to the RTC output. 
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_Disable: No output selected
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_AlarmA: signal of AlarmA mapped to output
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_AlarmB: signal of AlarmB mapped to output
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_WakeUp: signal of WakeUp mapped to output
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_OutputPolarity: Specifies the polarity of the output signal. 
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following:
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputPolarity_High: The output pin is high when the 
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputPolarity_Low: The output pin is low when the 
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_OutputConfig(uint32_t RTC_Output, uint32_t RTC_OutputPolarity)
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2575              		.loc 1 1672 0
 2576              		.cfi_startproc
 2577              		@ args = 0, pretend = 0, frame = 8
 2578              		@ frame_needed = 1, uses_anonymous_args = 0
 2579              		@ link register save eliminated.
 2580 0000 80B4     		push	{r7}
 2581              	.LCFI81:
 2582              		.cfi_def_cfa_offset 4
 2583              		.cfi_offset 7, -4
 2584 0002 83B0     		sub	sp, sp, #12
 2585              	.LCFI82:
 2586              		.cfi_def_cfa_offset 16
 2587 0004 00AF     		add	r7, sp, #0
 2588              	.LCFI83:
 2589              		.cfi_def_cfa_register 7
 2590 0006 7860     		str	r0, [r7, #4]
 2591 0008 3960     		str	r1, [r7]
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT(RTC_Output));
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(RTC_OutputPolarity));
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2592              		.loc 1 1678 0
 2593 000a 0E4B     		ldr	r3, .L162
 2594 000c CA22     		movs	r2, #202
 2595 000e 5A62     		str	r2, [r3, #36]
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2596              		.loc 1 1679 0
 2597 0010 0C4B     		ldr	r3, .L162
 2598 0012 5322     		movs	r2, #83
 2599 0014 5A62     		str	r2, [r3, #36]
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the bits to be configured */
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_OSEL | RTC_CR_POL);
 2600              		.loc 1 1682 0
 2601 0016 0B4B     		ldr	r3, .L162
 2602 0018 0A4A     		ldr	r2, .L162
 2603 001a 9268     		ldr	r2, [r2, #8]
 2604 001c 22F4E002 		bic	r2, r2, #7340032
 2605 0020 9A60     		str	r2, [r3, #8]
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the output selection and polarity */
1685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_Output | RTC_OutputPolarity);
 2606              		.loc 1 1685 0
 2607 0022 084B     		ldr	r3, .L162
 2608 0024 074A     		ldr	r2, .L162
 2609 0026 9168     		ldr	r1, [r2, #8]
 2610 0028 7868     		ldr	r0, [r7, #4]
 2611 002a 3A68     		ldr	r2, [r7]
 2612 002c 0243     		orrs	r2, r2, r0
 2613 002e 0A43     		orrs	r2, r2, r1
 2614 0030 9A60     		str	r2, [r3, #8]
1686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2615              		.loc 1 1688 0
 2616 0032 044B     		ldr	r3, .L162
 2617 0034 FF22     		movs	r2, #255
 2618 0036 5A62     		str	r2, [r3, #36]
1689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2619              		.loc 1 1689 0
 2620 0038 0C37     		adds	r7, r7, #12
 2621 003a BD46     		mov	sp, r7
 2622              		@ sp needed
 2623 003c 5DF8047B 		ldr	r7, [sp], #4
 2624 0040 7047     		bx	lr
 2625              	.L163:
 2626 0042 00BF     		.align	2
 2627              	.L162:
 2628 0044 00280040 		.word	1073752064
 2629              		.cfi_endproc
 2630              	.LFE138:
 2632              		.section	.text.RTC_CoarseCalibConfig,"ax",%progbits
 2633              		.align	2
 2634              		.global	RTC_CoarseCalibConfig
 2635              		.thumb
 2636              		.thumb_func
 2638              	RTC_CoarseCalibConfig:
 2639              	.LFB139:
1690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group7 Digital Calibration configuration functions
1696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Coarse Calibration configuration functions 
1697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                   Digital Calibration configuration functions
1701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Coarse calibration parameters.
1709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_CalibSign: specifies the sign of the coarse calibration value.
1710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
1711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_CalibSign_Positive: The value sign is positive 
1712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_CalibSign_Negative: The value sign is negative
1713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Value: value of coarse calibration expressed in ppm (coded on 5 bits).
1714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *    
1715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This Calibration value should be between 0 and 63 when using negative
1716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         sign with a 2-ppm step.
1717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           
1718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This Calibration value should be between 0 and 126 when using positive
1719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         sign with a 4-ppm step.
1720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           
1721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are initialized
1723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not initialized     
1724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_CoarseCalibConfig(uint32_t RTC_CalibSign, uint32_t Value)
1726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2640              		.loc 1 1726 0
 2641              		.cfi_startproc
 2642              		@ args = 0, pretend = 0, frame = 16
 2643              		@ frame_needed = 1, uses_anonymous_args = 0
 2644 0000 80B5     		push	{r7, lr}
 2645              	.LCFI84:
 2646              		.cfi_def_cfa_offset 8
 2647              		.cfi_offset 7, -8
 2648              		.cfi_offset 14, -4
 2649 0002 84B0     		sub	sp, sp, #16
 2650              	.LCFI85:
 2651              		.cfi_def_cfa_offset 24
 2652 0004 00AF     		add	r7, sp, #0
 2653              	.LCFI86:
 2654              		.cfi_def_cfa_register 7
 2655 0006 7860     		str	r0, [r7, #4]
 2656 0008 3960     		str	r1, [r7]
1727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2657              		.loc 1 1727 0
 2658 000a 0023     		movs	r3, #0
 2659 000c FB73     		strb	r3, [r7, #15]
1728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
1729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_SIGN(RTC_CalibSign));
1731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_VALUE(Value)); 
1732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2660              		.loc 1 1734 0
 2661 000e 0F4B     		ldr	r3, .L168
 2662 0010 CA22     		movs	r2, #202
 2663 0012 5A62     		str	r2, [r3, #36]
1735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2664              		.loc 1 1735 0
 2665 0014 0D4B     		ldr	r3, .L168
 2666 0016 5322     		movs	r2, #83
 2667 0018 5A62     		str	r2, [r3, #36]
1736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
1738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 2668              		.loc 1 1738 0
 2669 001a FFF7FEFF 		bl	RTC_EnterInitMode
 2670 001e 0346     		mov	r3, r0
 2671 0020 002B     		cmp	r3, #0
 2672 0022 02D1     		bne	.L165
1739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 2673              		.loc 1 1740 0
 2674 0024 0023     		movs	r3, #0
 2675 0026 FB73     		strb	r3, [r7, #15]
 2676 0028 08E0     		b	.L166
 2677              	.L165:
1741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the coarse calibration value */
1745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CALIBR = (uint32_t)(RTC_CalibSign | Value);
 2678              		.loc 1 1745 0
 2679 002a 084B     		ldr	r3, .L168
 2680 002c 7968     		ldr	r1, [r7, #4]
 2681 002e 3A68     		ldr	r2, [r7]
 2682 0030 0A43     		orrs	r2, r2, r1
 2683 0032 9A61     		str	r2, [r3, #24]
1746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
1747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 2684              		.loc 1 1747 0
 2685 0034 FFF7FEFF 		bl	RTC_ExitInitMode
1748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 2686              		.loc 1 1749 0
 2687 0038 0123     		movs	r3, #1
 2688 003a FB73     		strb	r3, [r7, #15]
 2689              	.L166:
1750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2690              		.loc 1 1753 0
 2691 003c 034B     		ldr	r3, .L168
 2692 003e FF22     		movs	r2, #255
 2693 0040 5A62     		str	r2, [r3, #36]
1754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 2694              		.loc 1 1755 0
 2695 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2696              		.loc 1 1756 0
 2697 0044 1846     		mov	r0, r3
 2698 0046 1037     		adds	r7, r7, #16
 2699 0048 BD46     		mov	sp, r7
 2700              		@ sp needed
 2701 004a 80BD     		pop	{r7, pc}
 2702              	.L169:
 2703              		.align	2
 2704              	.L168:
 2705 004c 00280040 		.word	1073752064
 2706              		.cfi_endproc
 2707              	.LFE139:
 2709              		.section	.text.RTC_CoarseCalibCmd,"ax",%progbits
 2710              		.align	2
 2711              		.global	RTC_CoarseCalibCmd
 2712              		.thumb
 2713              		.thumb_func
 2715              	RTC_CoarseCalibCmd:
 2716              	.LFB140:
1757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the Coarse calibration process.
1760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the Coarse calibration.
1761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are enabled/disabled
1764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not enabled/disabled    
1765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_CoarseCalibCmd(FunctionalState NewState)
1767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2717              		.loc 1 1767 0
 2718              		.cfi_startproc
 2719              		@ args = 0, pretend = 0, frame = 16
 2720              		@ frame_needed = 1, uses_anonymous_args = 0
 2721 0000 80B5     		push	{r7, lr}
 2722              	.LCFI87:
 2723              		.cfi_def_cfa_offset 8
 2724              		.cfi_offset 7, -8
 2725              		.cfi_offset 14, -4
 2726 0002 84B0     		sub	sp, sp, #16
 2727              	.LCFI88:
 2728              		.cfi_def_cfa_offset 24
 2729 0004 00AF     		add	r7, sp, #0
 2730              	.LCFI89:
 2731              		.cfi_def_cfa_register 7
 2732 0006 0346     		mov	r3, r0
 2733 0008 FB71     		strb	r3, [r7, #7]
1768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2734              		.loc 1 1768 0
 2735 000a 0023     		movs	r3, #0
 2736 000c FB73     		strb	r3, [r7, #15]
1769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2737              		.loc 1 1774 0
 2738 000e 154B     		ldr	r3, .L176
 2739 0010 CA22     		movs	r2, #202
 2740 0012 5A62     		str	r2, [r3, #36]
1775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2741              		.loc 1 1775 0
 2742 0014 134B     		ldr	r3, .L176
 2743 0016 5322     		movs	r2, #83
 2744 0018 5A62     		str	r2, [r3, #36]
1776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
1778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 2745              		.loc 1 1778 0
 2746 001a FFF7FEFF 		bl	RTC_EnterInitMode
 2747 001e 0346     		mov	r3, r0
 2748 0020 002B     		cmp	r3, #0
 2749 0022 02D1     		bne	.L171
1779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status =  ERROR;
 2750              		.loc 1 1780 0
 2751 0024 0023     		movs	r3, #0
 2752 0026 FB73     		strb	r3, [r7, #15]
 2753 0028 13E0     		b	.L172
 2754              	.L171:
1781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if (NewState != DISABLE)
 2755              		.loc 1 1784 0
 2756 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2757 002c 002B     		cmp	r3, #0
 2758 002e 06D0     		beq	.L173
1785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Enable the Coarse Calibration */
1787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR |= (uint32_t)RTC_CR_DCE;
 2759              		.loc 1 1787 0
 2760 0030 0C4B     		ldr	r3, .L176
 2761 0032 0C4A     		ldr	r2, .L176
 2762 0034 9268     		ldr	r2, [r2, #8]
 2763 0036 42F08002 		orr	r2, r2, #128
 2764 003a 9A60     		str	r2, [r3, #8]
 2765 003c 05E0     		b	.L174
 2766              	.L173:
1788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     { 
1791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Disable the Coarse Calibration */
1792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR &= (uint32_t)~RTC_CR_DCE;
 2767              		.loc 1 1792 0
 2768 003e 094B     		ldr	r3, .L176
 2769 0040 084A     		ldr	r2, .L176
 2770 0042 9268     		ldr	r2, [r2, #8]
 2771 0044 22F08002 		bic	r2, r2, #128
 2772 0048 9A60     		str	r2, [r3, #8]
 2773              	.L174:
1793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
1795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 2774              		.loc 1 1795 0
 2775 004a FFF7FEFF 		bl	RTC_ExitInitMode
1796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 2776              		.loc 1 1797 0
 2777 004e 0123     		movs	r3, #1
 2778 0050 FB73     		strb	r3, [r7, #15]
 2779              	.L172:
1798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2780              		.loc 1 1801 0
 2781 0052 044B     		ldr	r3, .L176
 2782 0054 FF22     		movs	r2, #255
 2783 0056 5A62     		str	r2, [r3, #36]
1802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 2784              		.loc 1 1803 0
 2785 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2786              		.loc 1 1804 0
 2787 005a 1846     		mov	r0, r3
 2788 005c 1037     		adds	r7, r7, #16
 2789 005e BD46     		mov	sp, r7
 2790              		@ sp needed
 2791 0060 80BD     		pop	{r7, pc}
 2792              	.L177:
 2793 0062 00BF     		.align	2
 2794              	.L176:
 2795 0064 00280040 		.word	1073752064
 2796              		.cfi_endproc
 2797              	.LFE140:
 2799              		.section	.text.RTC_CalibOutputCmd,"ax",%progbits
 2800              		.align	2
 2801              		.global	RTC_CalibOutputCmd
 2802              		.thumb
 2803              		.thumb_func
 2805              	RTC_CalibOutputCmd:
 2806              	.LFB141:
1805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC clock to be output through the relative pin.
1808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the digital calibration Output.
1809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_CalibOutputCmd(FunctionalState NewState)
1813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2807              		.loc 1 1813 0
 2808              		.cfi_startproc
 2809              		@ args = 0, pretend = 0, frame = 8
 2810              		@ frame_needed = 1, uses_anonymous_args = 0
 2811              		@ link register save eliminated.
 2812 0000 80B4     		push	{r7}
 2813              	.LCFI90:
 2814              		.cfi_def_cfa_offset 4
 2815              		.cfi_offset 7, -4
 2816 0002 83B0     		sub	sp, sp, #12
 2817              	.LCFI91:
 2818              		.cfi_def_cfa_offset 16
 2819 0004 00AF     		add	r7, sp, #0
 2820              	.LCFI92:
 2821              		.cfi_def_cfa_register 7
 2822 0006 0346     		mov	r3, r0
 2823 0008 FB71     		strb	r3, [r7, #7]
1814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2824              		.loc 1 1818 0
 2825 000a 0F4B     		ldr	r3, .L181
 2826 000c CA22     		movs	r2, #202
 2827 000e 5A62     		str	r2, [r3, #36]
1819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2828              		.loc 1 1819 0
 2829 0010 0D4B     		ldr	r3, .L181
 2830 0012 5322     		movs	r2, #83
 2831 0014 5A62     		str	r2, [r3, #36]
1820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 2832              		.loc 1 1821 0
 2833 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2834 0018 002B     		cmp	r3, #0
 2835 001a 06D0     		beq	.L179
1822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the RTC clock output */
1824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_COE;
 2836              		.loc 1 1824 0
 2837 001c 0A4B     		ldr	r3, .L181
 2838 001e 0A4A     		ldr	r2, .L181
 2839 0020 9268     		ldr	r2, [r2, #8]
 2840 0022 42F40002 		orr	r2, r2, #8388608
 2841 0026 9A60     		str	r2, [r3, #8]
 2842 0028 05E0     		b	.L180
 2843              	.L179:
1825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   { 
1828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the RTC clock output */
1829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_COE;
 2844              		.loc 1 1829 0
 2845 002a 074B     		ldr	r3, .L181
 2846 002c 064A     		ldr	r2, .L181
 2847 002e 9268     		ldr	r2, [r2, #8]
 2848 0030 22F40002 		bic	r2, r2, #8388608
 2849 0034 9A60     		str	r2, [r3, #8]
 2850              	.L180:
1830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 2851              		.loc 1 1833 0
 2852 0036 044B     		ldr	r3, .L181
 2853 0038 FF22     		movs	r2, #255
 2854 003a 5A62     		str	r2, [r3, #36]
1834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2855              		.loc 1 1834 0
 2856 003c 0C37     		adds	r7, r7, #12
 2857 003e BD46     		mov	sp, r7
 2858              		@ sp needed
 2859 0040 5DF8047B 		ldr	r7, [sp], #4
 2860 0044 7047     		bx	lr
 2861              	.L182:
 2862 0046 00BF     		.align	2
 2863              	.L181:
 2864 0048 00280040 		.word	1073752064
 2865              		.cfi_endproc
 2866              	.LFE141:
 2868              		.section	.text.RTC_CalibOutputConfig,"ax",%progbits
 2869              		.align	2
 2870              		.global	RTC_CalibOutputConfig
 2871              		.thumb
 2872              		.thumb_func
 2874              	RTC_CalibOutputConfig:
 2875              	.LFB142:
1835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_CalibOutput : Select the Calibration output Selection .
1839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_CalibOutput_512Hz: A signal has a regular waveform at 512Hz. 
1841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_CalibOutput_1Hz  : A signal has a regular waveform at 1Hz.
1842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
1844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_CalibOutputConfig(uint32_t RTC_CalibOutput)
1845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2876              		.loc 1 1845 0
 2877              		.cfi_startproc
 2878              		@ args = 0, pretend = 0, frame = 8
 2879              		@ frame_needed = 1, uses_anonymous_args = 0
 2880              		@ link register save eliminated.
 2881 0000 80B4     		push	{r7}
 2882              	.LCFI93:
 2883              		.cfi_def_cfa_offset 4
 2884              		.cfi_offset 7, -4
 2885 0002 83B0     		sub	sp, sp, #12
 2886              	.LCFI94:
 2887              		.cfi_def_cfa_offset 16
 2888 0004 00AF     		add	r7, sp, #0
 2889              	.LCFI95:
 2890              		.cfi_def_cfa_register 7
 2891 0006 7860     		str	r0, [r7, #4]
1846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_OUTPUT(RTC_CalibOutput));
1848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2892              		.loc 1 1850 0
 2893 0008 0C4B     		ldr	r3, .L184
 2894 000a CA22     		movs	r2, #202
 2895 000c 5A62     		str	r2, [r3, #36]
1851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2896              		.loc 1 1851 0
 2897 000e 0B4B     		ldr	r3, .L184
 2898 0010 5322     		movs	r2, #83
 2899 0012 5A62     		str	r2, [r3, #36]
1852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /*clear flags before config*/
1854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_COSEL);
 2900              		.loc 1 1854 0
 2901 0014 094B     		ldr	r3, .L184
 2902 0016 094A     		ldr	r2, .L184
 2903 0018 9268     		ldr	r2, [r2, #8]
 2904 001a 22F40022 		bic	r2, r2, #524288
 2905 001e 9A60     		str	r2, [r3, #8]
1855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_CR register */
1857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_CalibOutput;
 2906              		.loc 1 1857 0
 2907 0020 064B     		ldr	r3, .L184
 2908 0022 064A     		ldr	r2, .L184
 2909 0024 9168     		ldr	r1, [r2, #8]
 2910 0026 7A68     		ldr	r2, [r7, #4]
 2911 0028 0A43     		orrs	r2, r2, r1
 2912 002a 9A60     		str	r2, [r3, #8]
1858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 2913              		.loc 1 1860 0
 2914 002c 034B     		ldr	r3, .L184
 2915 002e FF22     		movs	r2, #255
 2916 0030 5A62     		str	r2, [r3, #36]
1861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2917              		.loc 1 1861 0
 2918 0032 0C37     		adds	r7, r7, #12
 2919 0034 BD46     		mov	sp, r7
 2920              		@ sp needed
 2921 0036 5DF8047B 		ldr	r7, [sp], #4
 2922 003a 7047     		bx	lr
 2923              	.L185:
 2924              		.align	2
 2925              	.L184:
 2926 003c 00280040 		.word	1073752064
 2927              		.cfi_endproc
 2928              	.LFE142:
 2930              		.section	.text.RTC_SmoothCalibConfig,"ax",%progbits
 2931              		.align	2
 2932              		.global	RTC_SmoothCalibConfig
 2933              		.thumb
 2934              		.thumb_func
 2936              	RTC_SmoothCalibConfig:
 2937              	.LFB143:
1862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Smooth Calibration Settings.
1865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_SmoothCalibPeriod : Select the Smooth Calibration Period.
1866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be can be one of the following values:
1867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_32sec : The smooth calibration periode is 32s.
1868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_16sec : The smooth calibration periode is 16s.
1869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_8sec  : The smooth calibartion periode is 8s.
1870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_SmoothCalibPlusPulses : Select to Set or reset the CALP bit.
1871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPlusPulses_Set  : Add one RTCCLK puls every 2**11 pulses.
1873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPlusPulses_Reset: No RTCCLK pulses are added.
1874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_SmouthCalibMinusPulsesValue: Select the value of CALM[8:0] bits.
1875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one any value from 0 to 0x000001FF.
1876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Calib registers are configured
1878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Calib registers are not configured
1879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
1880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SmoothCalibConfig(uint32_t RTC_SmoothCalibPeriod,
1881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                   uint32_t RTC_SmoothCalibPlusPulses,
1882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                   uint32_t RTC_SmouthCalibMinusPulsesValue)
1883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 2938              		.loc 1 1883 0
 2939              		.cfi_startproc
 2940              		@ args = 0, pretend = 0, frame = 24
 2941              		@ frame_needed = 1, uses_anonymous_args = 0
 2942              		@ link register save eliminated.
 2943 0000 80B4     		push	{r7}
 2944              	.LCFI96:
 2945              		.cfi_def_cfa_offset 4
 2946              		.cfi_offset 7, -4
 2947 0002 87B0     		sub	sp, sp, #28
 2948              	.LCFI97:
 2949              		.cfi_def_cfa_offset 32
 2950 0004 00AF     		add	r7, sp, #0
 2951              	.LCFI98:
 2952              		.cfi_def_cfa_register 7
 2953 0006 F860     		str	r0, [r7, #12]
 2954 0008 B960     		str	r1, [r7, #8]
 2955 000a 7A60     		str	r2, [r7, #4]
1884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2956              		.loc 1 1884 0
 2957 000c 0023     		movs	r3, #0
 2958 000e FB75     		strb	r3, [r7, #23]
1885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t recalpfcount = 0;
 2959              		.loc 1 1885 0
 2960 0010 0023     		movs	r3, #0
 2961 0012 3B61     		str	r3, [r7, #16]
1886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(RTC_SmoothCalibPeriod));
1889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(RTC_SmoothCalibPlusPulses));
1890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(RTC_SmouthCalibMinusPulsesValue));
1891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 2962              		.loc 1 1893 0
 2963 0014 1A4B     		ldr	r3, .L193
 2964 0016 CA22     		movs	r2, #202
 2965 0018 5A62     		str	r2, [r3, #36]
1894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2966              		.loc 1 1894 0
 2967 001a 194B     		ldr	r3, .L193
 2968 001c 5322     		movs	r2, #83
 2969 001e 5A62     		str	r2, [r3, #36]
1895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* check if a calibration is pending*/
1897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RECALPF) != RESET)
 2970              		.loc 1 1897 0
 2971 0020 174B     		ldr	r3, .L193
 2972 0022 DB68     		ldr	r3, [r3, #12]
 2973 0024 03F48033 		and	r3, r3, #65536
 2974 0028 002B     		cmp	r3, #0
 2975 002a 0DD0     		beq	.L187
1898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* wait until the Calibration is completed*/
1900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_RECALPF) != RESET) && (recalpfcount != RECALPF_TIMEOUT))
 2976              		.loc 1 1900 0
 2977 002c 02E0     		b	.L188
 2978              	.L189:
1901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       recalpfcount++;
 2979              		.loc 1 1902 0
 2980 002e 3B69     		ldr	r3, [r7, #16]
 2981 0030 0133     		adds	r3, r3, #1
 2982 0032 3B61     		str	r3, [r7, #16]
 2983              	.L188:
1900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_RECALPF) != RESET) && (recalpfcount != RECALPF_TIMEOUT))
 2984              		.loc 1 1900 0 discriminator 1
 2985 0034 124B     		ldr	r3, .L193
 2986 0036 DB68     		ldr	r3, [r3, #12]
 2987 0038 03F48033 		and	r3, r3, #65536
 2988 003c 002B     		cmp	r3, #0
 2989 003e 03D0     		beq	.L187
1900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_RECALPF) != RESET) && (recalpfcount != RECALPF_TIMEOUT))
 2990              		.loc 1 1900 0 is_stmt 0 discriminator 2
 2991 0040 3B69     		ldr	r3, [r7, #16]
 2992 0042 B3F5003F 		cmp	r3, #131072
 2993 0046 F2D1     		bne	.L189
 2994              	.L187:
1903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* check if the calibration pending is completed or if there is no calibration operation at all*/
1907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RECALPF) == RESET)
 2995              		.loc 1 1907 0 is_stmt 1
 2996 0048 0D4B     		ldr	r3, .L193
 2997 004a DB68     		ldr	r3, [r3, #12]
 2998 004c 03F48033 		and	r3, r3, #65536
 2999 0050 002B     		cmp	r3, #0
 3000 0052 09D1     		bne	.L190
1908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Smooth calibration settings */
1910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CALR = (uint32_t)((uint32_t)RTC_SmoothCalibPeriod | (uint32_t)RTC_SmoothCalibPlusPulses | 
 3001              		.loc 1 1910 0
 3002 0054 0A4B     		ldr	r3, .L193
 3003 0056 F968     		ldr	r1, [r7, #12]
 3004 0058 BA68     		ldr	r2, [r7, #8]
 3005 005a 1143     		orrs	r1, r1, r2
 3006 005c 7A68     		ldr	r2, [r7, #4]
 3007 005e 0A43     		orrs	r2, r2, r1
 3008 0060 DA63     		str	r2, [r3, #60]
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 3009              		.loc 1 1912 0
 3010 0062 0123     		movs	r3, #1
 3011 0064 FB75     		strb	r3, [r7, #23]
 3012 0066 01E0     		b	.L191
 3013              	.L190:
1913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 3014              		.loc 1 1916 0
 3015 0068 0023     		movs	r3, #0
 3016 006a FB75     		strb	r3, [r7, #23]
 3017              	.L191:
1917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 3018              		.loc 1 1920 0
 3019 006c 044B     		ldr	r3, .L193
 3020 006e FF22     		movs	r2, #255
 3021 0070 5A62     		str	r2, [r3, #36]
1921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (ErrorStatus)(status);
 3022              		.loc 1 1922 0
 3023 0072 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3024              		.loc 1 1923 0
 3025 0074 1846     		mov	r0, r3
 3026 0076 1C37     		adds	r7, r7, #28
 3027 0078 BD46     		mov	sp, r7
 3028              		@ sp needed
 3029 007a 5DF8047B 		ldr	r7, [sp], #4
 3030 007e 7047     		bx	lr
 3031              	.L194:
 3032              		.align	2
 3033              	.L193:
 3034 0080 00280040 		.word	1073752064
 3035              		.cfi_endproc
 3036              	.LFE143:
 3038              		.section	.text.RTC_TimeStampCmd,"ax",%progbits
 3039              		.align	2
 3040              		.global	RTC_TimeStampCmd
 3041              		.thumb
 3042              		.thumb_func
 3044              	RTC_TimeStampCmd:
 3045              	.LFB144:
1924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group8 TimeStamp configuration functions
1931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   TimeStamp configuration functions 
1932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                        TimeStamp configuration functions
1936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the RTC TimeStamp functionality with the 
1944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         specified time stamp pin stimulating edge.
1945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStampEdge: Specifies the pin edge on which the TimeStamp is 
1946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         activated.
1947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following:
1948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Rising: the Time stamp event occurs on the rising 
1949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    edge of the related pin.
1950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Falling: the Time stamp event occurs on the 
1951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                     falling edge of the related pin.
1952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the TimeStamp.
1953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStampCmd(uint32_t RTC_TimeStampEdge, FunctionalState NewState)
1957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3046              		.loc 1 1957 0
 3047              		.cfi_startproc
 3048              		@ args = 0, pretend = 0, frame = 16
 3049              		@ frame_needed = 1, uses_anonymous_args = 0
 3050              		@ link register save eliminated.
 3051 0000 80B4     		push	{r7}
 3052              	.LCFI99:
 3053              		.cfi_def_cfa_offset 4
 3054              		.cfi_offset 7, -4
 3055 0002 85B0     		sub	sp, sp, #20
 3056              	.LCFI100:
 3057              		.cfi_def_cfa_offset 24
 3058 0004 00AF     		add	r7, sp, #0
 3059              	.LCFI101:
 3060              		.cfi_def_cfa_register 7
 3061 0006 7860     		str	r0, [r7, #4]
 3062 0008 0B46     		mov	r3, r1
 3063 000a FB70     		strb	r3, [r7, #3]
1958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 3064              		.loc 1 1958 0
 3065 000c 0023     		movs	r3, #0
 3066 000e FB60     		str	r3, [r7, #12]
1959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_EDGE(RTC_TimeStampEdge));
1962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_CR register and clear the bits to be configured */
1965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 3067              		.loc 1 1965 0
 3068 0010 124B     		ldr	r3, .L198
 3069 0012 9B68     		ldr	r3, [r3, #8]
 3070 0014 23F40063 		bic	r3, r3, #2048
 3071 0018 23F00803 		bic	r3, r3, #8
 3072 001c FB60     		str	r3, [r7, #12]
1966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the new configuration */
1968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 3073              		.loc 1 1968 0
 3074 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3075 0020 002B     		cmp	r3, #0
 3076 0022 06D0     		beq	.L196
1969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge | RTC_CR_TSE);
 3077              		.loc 1 1970 0
 3078 0024 7A68     		ldr	r2, [r7, #4]
 3079 0026 FB68     		ldr	r3, [r7, #12]
 3080 0028 1343     		orrs	r3, r3, r2
 3081 002a 43F40063 		orr	r3, r3, #2048
 3082 002e FB60     		str	r3, [r7, #12]
 3083 0030 03E0     		b	.L197
 3084              	.L196:
1971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge);
 3085              		.loc 1 1974 0
 3086 0032 FA68     		ldr	r2, [r7, #12]
 3087 0034 7B68     		ldr	r3, [r7, #4]
 3088 0036 1343     		orrs	r3, r3, r2
 3089 0038 FB60     		str	r3, [r7, #12]
 3090              	.L197:
1975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3091              		.loc 1 1978 0
 3092 003a 084B     		ldr	r3, .L198
 3093 003c CA22     		movs	r2, #202
 3094 003e 5A62     		str	r2, [r3, #36]
1979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3095              		.loc 1 1979 0
 3096 0040 064B     		ldr	r3, .L198
 3097 0042 5322     		movs	r2, #83
 3098 0044 5A62     		str	r2, [r3, #36]
1980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
1982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR = (uint32_t)tmpreg;
 3099              		.loc 1 1982 0
 3100 0046 054B     		ldr	r3, .L198
 3101 0048 FA68     		ldr	r2, [r7, #12]
 3102 004a 9A60     		str	r2, [r3, #8]
1983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 3103              		.loc 1 1985 0
 3104 004c 034B     		ldr	r3, .L198
 3105 004e FF22     		movs	r2, #255
 3106 0050 5A62     		str	r2, [r3, #36]
1986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3107              		.loc 1 1986 0
 3108 0052 1437     		adds	r7, r7, #20
 3109 0054 BD46     		mov	sp, r7
 3110              		@ sp needed
 3111 0056 5DF8047B 		ldr	r7, [sp], #4
 3112 005a 7047     		bx	lr
 3113              	.L199:
 3114              		.align	2
 3115              	.L198:
 3116 005c 00280040 		.word	1073752064
 3117              		.cfi_endproc
 3118              	.LFE144:
 3120              		.section	.text.RTC_GetTimeStamp,"ax",%progbits
 3121              		.align	2
 3122              		.global	RTC_GetTimeStamp
 3123              		.thumb
 3124              		.thumb_func
 3126              	RTC_GetTimeStamp:
 3127              	.LFB145:
1987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC TimeStamp value and masks.
1990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param RTC_StampTimeStruct: pointer to a RTC_TimeTypeDef structure that will 
1995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                             contains the TimeStamp time values. 
1996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param RTC_StampDateStruct: pointer to a RTC_DateTypeDef structure that will 
1997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                             contains the TimeStamp date values.     
1998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetTimeStamp(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_StampTimeStruct, 
2001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                       RTC_DateTypeDef* RTC_StampDateStruct)
2002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3128              		.loc 1 2002 0
 3129              		.cfi_startproc
 3130              		@ args = 0, pretend = 0, frame = 24
 3131              		@ frame_needed = 1, uses_anonymous_args = 0
 3132 0000 80B5     		push	{r7, lr}
 3133              	.LCFI102:
 3134              		.cfi_def_cfa_offset 8
 3135              		.cfi_offset 7, -8
 3136              		.cfi_offset 14, -4
 3137 0002 86B0     		sub	sp, sp, #24
 3138              	.LCFI103:
 3139              		.cfi_def_cfa_offset 32
 3140 0004 00AF     		add	r7, sp, #0
 3141              	.LCFI104:
 3142              		.cfi_def_cfa_register 7
 3143 0006 F860     		str	r0, [r7, #12]
 3144 0008 B960     		str	r1, [r7, #8]
 3145 000a 7A60     		str	r2, [r7, #4]
2003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmptime = 0, tmpdate = 0;
 3146              		.loc 1 2003 0
 3147 000c 0023     		movs	r3, #0
 3148 000e 7B61     		str	r3, [r7, #20]
 3149 0010 0023     		movs	r3, #0
 3150 0012 3B61     		str	r3, [r7, #16]
2004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
2007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the TimeStamp time and date registers values */
2009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmptime = (uint32_t)(RTC->TSTR & RTC_TR_RESERVED_MASK);
 3151              		.loc 1 2009 0
 3152 0014 3E4B     		ldr	r3, .L202
 3153 0016 1B6B     		ldr	r3, [r3, #48]
 3154 0018 03F07F33 		and	r3, r3, #2139062143
 3155 001c 23F0FE43 		bic	r3, r3, #2130706432
 3156 0020 7B61     		str	r3, [r7, #20]
2010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
 3157              		.loc 1 2010 0
 3158 0022 3B4B     		ldr	r3, .L202
 3159 0024 5B6B     		ldr	r3, [r3, #52]
 3160 0026 23F07F43 		bic	r3, r3, #-16777216
 3161 002a 23F0C003 		bic	r3, r3, #192
 3162 002e 3B61     		str	r3, [r7, #16]
2011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the Time structure fields with the read parameters */
2013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 3163              		.loc 1 2013 0
 3164 0030 7B69     		ldr	r3, [r7, #20]
 3165 0032 03F47C13 		and	r3, r3, #4128768
 3166 0036 1B0C     		lsrs	r3, r3, #16
 3167 0038 DAB2     		uxtb	r2, r3
 3168 003a BB68     		ldr	r3, [r7, #8]
 3169 003c 1A70     		strb	r2, [r3]
2014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
 3170              		.loc 1 2014 0
 3171 003e 7B69     		ldr	r3, [r7, #20]
 3172 0040 03F4FE43 		and	r3, r3, #32512
 3173 0044 1B0A     		lsrs	r3, r3, #8
 3174 0046 DAB2     		uxtb	r2, r3
 3175 0048 BB68     		ldr	r3, [r7, #8]
 3176 004a 5A70     		strb	r2, [r3, #1]
2015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 3177              		.loc 1 2015 0
 3178 004c 7B69     		ldr	r3, [r7, #20]
 3179 004e DBB2     		uxtb	r3, r3
 3180 0050 03F07F03 		and	r3, r3, #127
 3181 0054 DAB2     		uxtb	r2, r3
 3182 0056 BB68     		ldr	r3, [r7, #8]
 3183 0058 9A70     		strb	r2, [r3, #2]
2016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 3184              		.loc 1 2016 0
 3185 005a 7B69     		ldr	r3, [r7, #20]
 3186 005c 03F48003 		and	r3, r3, #4194304
 3187 0060 1B0C     		lsrs	r3, r3, #16
 3188 0062 DAB2     		uxtb	r2, r3
 3189 0064 BB68     		ldr	r3, [r7, #8]
 3190 0066 DA70     		strb	r2, [r3, #3]
2017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the Date structure fields with the read parameters */
2019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Year = 0;
 3191              		.loc 1 2019 0
 3192 0068 7B68     		ldr	r3, [r7, #4]
 3193 006a 0022     		movs	r2, #0
 3194 006c DA70     		strb	r2, [r3, #3]
2020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 3195              		.loc 1 2020 0
 3196 006e 3B69     		ldr	r3, [r7, #16]
 3197 0070 03F4F853 		and	r3, r3, #7936
 3198 0074 1B0A     		lsrs	r3, r3, #8
 3199 0076 DAB2     		uxtb	r2, r3
 3200 0078 7B68     		ldr	r3, [r7, #4]
 3201 007a 5A70     		strb	r2, [r3, #1]
2021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 3202              		.loc 1 2021 0
 3203 007c 3B69     		ldr	r3, [r7, #16]
 3204 007e DBB2     		uxtb	r3, r3
 3205 0080 03F03F03 		and	r3, r3, #63
 3206 0084 DAB2     		uxtb	r2, r3
 3207 0086 7B68     		ldr	r3, [r7, #4]
 3208 0088 9A70     		strb	r2, [r3, #2]
2022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
 3209              		.loc 1 2022 0
 3210 008a 3B69     		ldr	r3, [r7, #16]
 3211 008c 03F46043 		and	r3, r3, #57344
 3212 0090 5B0B     		lsrs	r3, r3, #13
 3213 0092 DAB2     		uxtb	r2, r3
 3214 0094 7B68     		ldr	r3, [r7, #4]
 3215 0096 1A70     		strb	r2, [r3]
2023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
2025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 3216              		.loc 1 2025 0
 3217 0098 FB68     		ldr	r3, [r7, #12]
 3218 009a 002B     		cmp	r3, #0
 3219 009c 35D1     		bne	.L200
2026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the Time structure parameters to Binary format */
2028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Hours);
 3220              		.loc 1 2028 0
 3221 009e BB68     		ldr	r3, [r7, #8]
 3222 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3223 00a2 1846     		mov	r0, r3
 3224 00a4 FFF7FEFF 		bl	RTC_Bcd2ToByte
 3225 00a8 0346     		mov	r3, r0
 3226 00aa 1A46     		mov	r2, r3
 3227 00ac BB68     		ldr	r3, [r7, #8]
 3228 00ae 1A70     		strb	r2, [r3]
2029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
 3229              		.loc 1 2029 0
 3230 00b0 BB68     		ldr	r3, [r7, #8]
 3231 00b2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3232 00b4 1846     		mov	r0, r3
 3233 00b6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 3234 00ba 0346     		mov	r3, r0
 3235 00bc 1A46     		mov	r2, r3
 3236 00be BB68     		ldr	r3, [r7, #8]
 3237 00c0 5A70     		strb	r2, [r3, #1]
2030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
 3238              		.loc 1 2030 0
 3239 00c2 BB68     		ldr	r3, [r7, #8]
 3240 00c4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3241 00c6 1846     		mov	r0, r3
 3242 00c8 FFF7FEFF 		bl	RTC_Bcd2ToByte
 3243 00cc 0346     		mov	r3, r0
 3244 00ce 1A46     		mov	r2, r3
 3245 00d0 BB68     		ldr	r3, [r7, #8]
 3246 00d2 9A70     		strb	r2, [r3, #2]
2031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the Date structure parameters to Binary format */
2033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Month);
 3247              		.loc 1 2033 0
 3248 00d4 7B68     		ldr	r3, [r7, #4]
 3249 00d6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3250 00d8 1846     		mov	r0, r3
 3251 00da FFF7FEFF 		bl	RTC_Bcd2ToByte
 3252 00de 0346     		mov	r3, r0
 3253 00e0 1A46     		mov	r2, r3
 3254 00e2 7B68     		ldr	r3, [r7, #4]
 3255 00e4 5A70     		strb	r2, [r3, #1]
2034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
 3256              		.loc 1 2034 0
 3257 00e6 7B68     		ldr	r3, [r7, #4]
 3258 00e8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3259 00ea 1846     		mov	r0, r3
 3260 00ec FFF7FEFF 		bl	RTC_Bcd2ToByte
 3261 00f0 0346     		mov	r3, r0
 3262 00f2 1A46     		mov	r2, r3
 3263 00f4 7B68     		ldr	r3, [r7, #4]
 3264 00f6 9A70     		strb	r2, [r3, #2]
2035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
 3265              		.loc 1 2035 0
 3266 00f8 7B68     		ldr	r3, [r7, #4]
 3267 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3268 00fc 1846     		mov	r0, r3
 3269 00fe FFF7FEFF 		bl	RTC_Bcd2ToByte
 3270 0102 0346     		mov	r3, r0
 3271 0104 1A46     		mov	r2, r3
 3272 0106 7B68     		ldr	r3, [r7, #4]
 3273 0108 1A70     		strb	r2, [r3]
 3274              	.L200:
2036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3275              		.loc 1 2037 0
 3276 010a 1837     		adds	r7, r7, #24
 3277 010c BD46     		mov	sp, r7
 3278              		@ sp needed
 3279 010e 80BD     		pop	{r7, pc}
 3280              	.L203:
 3281              		.align	2
 3282              	.L202:
 3283 0110 00280040 		.word	1073752064
 3284              		.cfi_endproc
 3285              	.LFE145:
 3287              		.section	.text.RTC_GetTimeStampSubSecond,"ax",%progbits
 3288              		.align	2
 3289              		.global	RTC_GetTimeStampSubSecond
 3290              		.thumb
 3291              		.thumb_func
 3293              	RTC_GetTimeStampSubSecond:
 3294              	.LFB146:
2038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC timestamp Subseconds value.
2041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
2042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC current timestamp Subseconds value.
2043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetTimeStampSubSecond(void)
2045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3295              		.loc 1 2045 0
 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 0
 3298              		@ frame_needed = 1, uses_anonymous_args = 0
 3299              		@ link register save eliminated.
 3300 0000 80B4     		push	{r7}
 3301              	.LCFI105:
 3302              		.cfi_def_cfa_offset 4
 3303              		.cfi_offset 7, -4
 3304 0002 00AF     		add	r7, sp, #0
 3305              	.LCFI106:
 3306              		.cfi_def_cfa_register 7
2046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get timestamp subseconds values from the correspondent registers */
2047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (uint32_t)(RTC->TSSSR);
 3307              		.loc 1 2047 0
 3308 0004 034B     		ldr	r3, .L206
 3309 0006 9B6B     		ldr	r3, [r3, #56]
2048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3310              		.loc 1 2048 0
 3311 0008 1846     		mov	r0, r3
 3312 000a BD46     		mov	sp, r7
 3313              		@ sp needed
 3314 000c 5DF8047B 		ldr	r7, [sp], #4
 3315 0010 7047     		bx	lr
 3316              	.L207:
 3317 0012 00BF     		.align	2
 3318              	.L206:
 3319 0014 00280040 		.word	1073752064
 3320              		.cfi_endproc
 3321              	.LFE146:
 3323              		.section	.text.RTC_TamperTriggerConfig,"ax",%progbits
 3324              		.align	2
 3325              		.global	RTC_TamperTriggerConfig
 3326              		.thumb
 3327              		.thumb_func
 3329              	RTC_TamperTriggerConfig:
 3330              	.LFB147:
2049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group9 Tampers configuration functions
2055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Tampers configuration functions 
2056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                        Tampers configuration functions
2060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the select Tamper pin edge.
2068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
2069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be RTC_Tamper_1.
2070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperTrigger: Specifies the trigger on the tamper pin that 
2071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         stimulates tamper event. 
2072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_RisingEdge: Rising Edge of the tamper pin causes tamper event.
2074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_FallingEdge: Falling Edge of the tamper pin causes tamper event.
2075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_LowLevel: Low Level of the tamper pin causes tamper event.
2076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_HighLevel: High Level of the tamper pin causes tamper event.
2077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperTriggerConfig(uint32_t RTC_Tamper, uint32_t RTC_TamperTrigger)
2080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3331              		.loc 1 2080 0
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 8
 3334              		@ frame_needed = 1, uses_anonymous_args = 0
 3335              		@ link register save eliminated.
 3336 0000 80B4     		push	{r7}
 3337              	.LCFI107:
 3338              		.cfi_def_cfa_offset 4
 3339              		.cfi_offset 7, -4
 3340 0002 83B0     		sub	sp, sp, #12
 3341              	.LCFI108:
 3342              		.cfi_def_cfa_offset 16
 3343 0004 00AF     		add	r7, sp, #0
 3344              	.LCFI109:
 3345              		.cfi_def_cfa_register 7
 3346 0006 7860     		str	r0, [r7, #4]
 3347 0008 3960     		str	r1, [r7]
2081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper)); 
2083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(RTC_TamperTrigger));
2084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_TamperTrigger == RTC_TamperTrigger_RisingEdge)
 3348              		.loc 1 2085 0
 3349 000a 3B68     		ldr	r3, [r7]
 3350 000c 002B     		cmp	r3, #0
 3351 000e 08D1     		bne	.L209
2086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {  
2087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the RTC_TAFCR register */
2088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)((uint32_t)~(RTC_Tamper << 1));	
 3352              		.loc 1 2088 0
 3353 0010 0A4B     		ldr	r3, .L211
 3354 0012 0A4A     		ldr	r2, .L211
 3355 0014 116C     		ldr	r1, [r2, #64]
 3356 0016 7A68     		ldr	r2, [r7, #4]
 3357 0018 5200     		lsls	r2, r2, #1
 3358 001a D243     		mvns	r2, r2
 3359 001c 0A40     		ands	r2, r2, r1
 3360 001e 1A64     		str	r2, [r3, #64]
 3361 0020 06E0     		b	.L208
 3362              	.L209:
2089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   { 
2092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the RTC_TAFCR register */
2093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_Tamper << 1);  
 3363              		.loc 1 2093 0
 3364 0022 064B     		ldr	r3, .L211
 3365 0024 054A     		ldr	r2, .L211
 3366 0026 116C     		ldr	r1, [r2, #64]
 3367 0028 7A68     		ldr	r2, [r7, #4]
 3368 002a 5200     		lsls	r2, r2, #1
 3369 002c 0A43     		orrs	r2, r2, r1
 3370 002e 1A64     		str	r2, [r3, #64]
 3371              	.L208:
2094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
2095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3372              		.loc 1 2095 0
 3373 0030 0C37     		adds	r7, r7, #12
 3374 0032 BD46     		mov	sp, r7
 3375              		@ sp needed
 3376 0034 5DF8047B 		ldr	r7, [sp], #4
 3377 0038 7047     		bx	lr
 3378              	.L212:
 3379 003a 00BF     		.align	2
 3380              	.L211:
 3381 003c 00280040 		.word	1073752064
 3382              		.cfi_endproc
 3383              	.LFE147:
 3385              		.section	.text.RTC_TamperCmd,"ax",%progbits
 3386              		.align	2
 3387              		.global	RTC_TamperCmd
 3388              		.thumb
 3389              		.thumb_func
 3391              	RTC_TamperCmd:
 3392              	.LFB148:
2096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Tamper detection.
2099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
2100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be RTC_Tamper_1.
2101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the tamper pin.
2102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.                   
2103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperCmd(uint32_t RTC_Tamper, FunctionalState NewState)
2106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3393              		.loc 1 2106 0
 3394              		.cfi_startproc
 3395              		@ args = 0, pretend = 0, frame = 8
 3396              		@ frame_needed = 1, uses_anonymous_args = 0
 3397              		@ link register save eliminated.
 3398 0000 80B4     		push	{r7}
 3399              	.LCFI110:
 3400              		.cfi_def_cfa_offset 4
 3401              		.cfi_offset 7, -4
 3402 0002 83B0     		sub	sp, sp, #12
 3403              	.LCFI111:
 3404              		.cfi_def_cfa_offset 16
 3405 0004 00AF     		add	r7, sp, #0
 3406              	.LCFI112:
 3407              		.cfi_def_cfa_register 7
 3408 0006 7860     		str	r0, [r7, #4]
 3409 0008 0B46     		mov	r3, r1
 3410 000a FB70     		strb	r3, [r7, #3]
2107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper));  
2109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 3411              		.loc 1 2111 0
 3412 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3413 000e 002B     		cmp	r3, #0
 3414 0010 06D0     		beq	.L214
2112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the selected Tamper pin */
2114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_Tamper;
 3415              		.loc 1 2114 0
 3416 0012 094B     		ldr	r3, .L216
 3417 0014 084A     		ldr	r2, .L216
 3418 0016 116C     		ldr	r1, [r2, #64]
 3419 0018 7A68     		ldr	r2, [r7, #4]
 3420 001a 0A43     		orrs	r2, r2, r1
 3421 001c 1A64     		str	r2, [r3, #64]
 3422 001e 06E0     		b	.L213
 3423              	.L214:
2115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the selected Tamper pin */
2119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_Tamper;    
 3424              		.loc 1 2119 0
 3425 0020 054B     		ldr	r3, .L216
 3426 0022 054A     		ldr	r2, .L216
 3427 0024 116C     		ldr	r1, [r2, #64]
 3428 0026 7A68     		ldr	r2, [r7, #4]
 3429 0028 D243     		mvns	r2, r2
 3430 002a 0A40     		ands	r2, r2, r1
 3431 002c 1A64     		str	r2, [r3, #64]
 3432              	.L213:
2120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
2121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3433              		.loc 1 2121 0
 3434 002e 0C37     		adds	r7, r7, #12
 3435 0030 BD46     		mov	sp, r7
 3436              		@ sp needed
 3437 0032 5DF8047B 		ldr	r7, [sp], #4
 3438 0036 7047     		bx	lr
 3439              	.L217:
 3440              		.align	2
 3441              	.L216:
 3442 0038 00280040 		.word	1073752064
 3443              		.cfi_endproc
 3444              	.LFE148:
 3446              		.section	.text.RTC_TamperFilterConfig,"ax",%progbits
 3447              		.align	2
 3448              		.global	RTC_TamperFilterConfig
 3449              		.thumb
 3450              		.thumb_func
 3452              	RTC_TamperFilterConfig:
 3453              	.LFB149:
2122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Filter.
2125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperFilter: Specifies the tampers filter.
2126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_Disable: Tamper filter is disabled.
2128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_2Sample: Tamper is activated after 2 consecutive 
2129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    samples at the active level 
2130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_4Sample: Tamper is activated after 4 consecutive 
2131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    samples at the active level
2132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_8Sample: Tamper is activated after 8 consecutive 
2133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    samples at the active level 
2134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperFilterConfig(uint32_t RTC_TamperFilter)
2137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3454              		.loc 1 2137 0
 3455              		.cfi_startproc
 3456              		@ args = 0, pretend = 0, frame = 8
 3457              		@ frame_needed = 1, uses_anonymous_args = 0
 3458              		@ link register save eliminated.
 3459 0000 80B4     		push	{r7}
 3460              	.LCFI113:
 3461              		.cfi_def_cfa_offset 4
 3462              		.cfi_offset 7, -4
 3463 0002 83B0     		sub	sp, sp, #12
 3464              	.LCFI114:
 3465              		.cfi_def_cfa_offset 16
 3466 0004 00AF     		add	r7, sp, #0
 3467              	.LCFI115:
 3468              		.cfi_def_cfa_register 7
 3469 0006 7860     		str	r0, [r7, #4]
2138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_FILTER(RTC_TamperFilter));
2140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
2141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear TAMPFLT[1:0] bits in the RTC_TAFCR register */
2142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPFLT);
 3470              		.loc 1 2142 0
 3471 0008 084B     		ldr	r3, .L219
 3472 000a 084A     		ldr	r2, .L219
 3473 000c 126C     		ldr	r2, [r2, #64]
 3474 000e 22F4C052 		bic	r2, r2, #6144
 3475 0012 1A64     		str	r2, [r3, #64]
2143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperFilter;
 3476              		.loc 1 2145 0
 3477 0014 054B     		ldr	r3, .L219
 3478 0016 054A     		ldr	r2, .L219
 3479 0018 116C     		ldr	r1, [r2, #64]
 3480 001a 7A68     		ldr	r2, [r7, #4]
 3481 001c 0A43     		orrs	r2, r2, r1
 3482 001e 1A64     		str	r2, [r3, #64]
2146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3483              		.loc 1 2146 0
 3484 0020 0C37     		adds	r7, r7, #12
 3485 0022 BD46     		mov	sp, r7
 3486              		@ sp needed
 3487 0024 5DF8047B 		ldr	r7, [sp], #4
 3488 0028 7047     		bx	lr
 3489              	.L220:
 3490 002a 00BF     		.align	2
 3491              	.L219:
 3492 002c 00280040 		.word	1073752064
 3493              		.cfi_endproc
 3494              	.LFE149:
 3496              		.section	.text.RTC_TamperSamplingFreqConfig,"ax",%progbits
 3497              		.align	2
 3498              		.global	RTC_TamperSamplingFreqConfig
 3499              		.thumb
 3500              		.thumb_func
 3502              	RTC_TamperSamplingFreqConfig:
 3503              	.LFB150:
2147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Sampling Frequency.
2150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperSamplingFreq: Specifies the tampers Sampling Frequency.
2151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div32768: Each of the tamper inputs are sampled
2153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 32768
2154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div16384: Each of the tamper inputs are sampled
2155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 16384
2156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div8192: Each of the tamper inputs are sampled
2157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 8192
2158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div4096: Each of the tamper inputs are sampled
2159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 4096
2160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div2048: Each of the tamper inputs are sampled
2161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 2048
2162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div1024: Each of the tamper inputs are sampled
2163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 1024
2164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div512: Each of the tamper inputs are sampled
2165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 512  
2166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div256: Each of the tamper inputs are sampled
2167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 256  
2168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperSamplingFreqConfig(uint32_t RTC_TamperSamplingFreq)
2171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3504              		.loc 1 2171 0
 3505              		.cfi_startproc
 3506              		@ args = 0, pretend = 0, frame = 8
 3507              		@ frame_needed = 1, uses_anonymous_args = 0
 3508              		@ link register save eliminated.
 3509 0000 80B4     		push	{r7}
 3510              	.LCFI116:
 3511              		.cfi_def_cfa_offset 4
 3512              		.cfi_offset 7, -4
 3513 0002 83B0     		sub	sp, sp, #12
 3514              	.LCFI117:
 3515              		.cfi_def_cfa_offset 16
 3516 0004 00AF     		add	r7, sp, #0
 3517              	.LCFI118:
 3518              		.cfi_def_cfa_register 7
 3519 0006 7860     		str	r0, [r7, #4]
2172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(RTC_TamperSamplingFreq));
2174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear TAMPFREQ[2:0] bits in the RTC_TAFCR register */
2176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPFREQ);
 3520              		.loc 1 2176 0
 3521 0008 084B     		ldr	r3, .L222
 3522 000a 084A     		ldr	r2, .L222
 3523 000c 126C     		ldr	r2, [r2, #64]
 3524 000e 22F4E062 		bic	r2, r2, #1792
 3525 0012 1A64     		str	r2, [r3, #64]
2177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperSamplingFreq;
 3526              		.loc 1 2179 0
 3527 0014 054B     		ldr	r3, .L222
 3528 0016 054A     		ldr	r2, .L222
 3529 0018 116C     		ldr	r1, [r2, #64]
 3530 001a 7A68     		ldr	r2, [r7, #4]
 3531 001c 0A43     		orrs	r2, r2, r1
 3532 001e 1A64     		str	r2, [r3, #64]
2180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3533              		.loc 1 2180 0
 3534 0020 0C37     		adds	r7, r7, #12
 3535 0022 BD46     		mov	sp, r7
 3536              		@ sp needed
 3537 0024 5DF8047B 		ldr	r7, [sp], #4
 3538 0028 7047     		bx	lr
 3539              	.L223:
 3540 002a 00BF     		.align	2
 3541              	.L222:
 3542 002c 00280040 		.word	1073752064
 3543              		.cfi_endproc
 3544              	.LFE150:
 3546              		.section	.text.RTC_TamperPinsPrechargeDuration,"ax",%progbits
 3547              		.align	2
 3548              		.global	RTC_TamperPinsPrechargeDuration
 3549              		.thumb
 3550              		.thumb_func
 3552              	RTC_TamperPinsPrechargeDuration:
 3553              	.LFB151:
2181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Pins input Precharge Duration.
2184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperPrechargeDuration: Specifies the Tampers Pins input
2185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         Precharge Duration.
2186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_1RTCCLK: Tamper pins are pre-charged before sampling durin
2188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_2RTCCLK: Tamper pins are pre-charged before sampling durin
2189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_4RTCCLK: Tamper pins are pre-charged before sampling durin
2190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_8RTCCLK: Tamper pins are pre-charged before sampling durin
2191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperPinsPrechargeDuration(uint32_t RTC_TamperPrechargeDuration)
2194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3554              		.loc 1 2194 0
 3555              		.cfi_startproc
 3556              		@ args = 0, pretend = 0, frame = 8
 3557              		@ frame_needed = 1, uses_anonymous_args = 0
 3558              		@ link register save eliminated.
 3559 0000 80B4     		push	{r7}
 3560              	.LCFI119:
 3561              		.cfi_def_cfa_offset 4
 3562              		.cfi_offset 7, -4
 3563 0002 83B0     		sub	sp, sp, #12
 3564              	.LCFI120:
 3565              		.cfi_def_cfa_offset 16
 3566 0004 00AF     		add	r7, sp, #0
 3567              	.LCFI121:
 3568              		.cfi_def_cfa_register 7
 3569 0006 7860     		str	r0, [r7, #4]
2195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(RTC_TamperPrechargeDuration));
2197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
2198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear TAMPPRCH[1:0] bits in the RTC_TAFCR register */
2199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPPRCH);
 3570              		.loc 1 2199 0
 3571 0008 084B     		ldr	r3, .L225
 3572 000a 084A     		ldr	r2, .L225
 3573 000c 126C     		ldr	r2, [r2, #64]
 3574 000e 22F4C042 		bic	r2, r2, #24576
 3575 0012 1A64     		str	r2, [r3, #64]
2200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperPrechargeDuration;
 3576              		.loc 1 2202 0
 3577 0014 054B     		ldr	r3, .L225
 3578 0016 054A     		ldr	r2, .L225
 3579 0018 116C     		ldr	r1, [r2, #64]
 3580 001a 7A68     		ldr	r2, [r7, #4]
 3581 001c 0A43     		orrs	r2, r2, r1
 3582 001e 1A64     		str	r2, [r3, #64]
2203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3583              		.loc 1 2203 0
 3584 0020 0C37     		adds	r7, r7, #12
 3585 0022 BD46     		mov	sp, r7
 3586              		@ sp needed
 3587 0024 5DF8047B 		ldr	r7, [sp], #4
 3588 0028 7047     		bx	lr
 3589              	.L226:
 3590 002a 00BF     		.align	2
 3591              	.L225:
 3592 002c 00280040 		.word	1073752064
 3593              		.cfi_endproc
 3594              	.LFE151:
 3596              		.section	.text.RTC_TimeStampOnTamperDetectionCmd,"ax",%progbits
 3597              		.align	2
 3598              		.global	RTC_TimeStampOnTamperDetectionCmd
 3599              		.thumb
 3600              		.thumb_func
 3602              	RTC_TimeStampOnTamperDetectionCmd:
 3603              	.LFB152:
2204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the TimeStamp on Tamper Detection Event.
2207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The timestamp is valid even the TSE bit in tamper control register 
2208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is reset.   
2209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the timestamp on tamper event.
2210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         This parameter can be: ENABLE or DISABLE.
2211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStampOnTamperDetectionCmd(FunctionalState NewState)
2214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3604              		.loc 1 2214 0
 3605              		.cfi_startproc
 3606              		@ args = 0, pretend = 0, frame = 8
 3607              		@ frame_needed = 1, uses_anonymous_args = 0
 3608              		@ link register save eliminated.
 3609 0000 80B4     		push	{r7}
 3610              	.LCFI122:
 3611              		.cfi_def_cfa_offset 4
 3612              		.cfi_offset 7, -4
 3613 0002 83B0     		sub	sp, sp, #12
 3614              	.LCFI123:
 3615              		.cfi_def_cfa_offset 16
 3616 0004 00AF     		add	r7, sp, #0
 3617              	.LCFI124:
 3618              		.cfi_def_cfa_register 7
 3619 0006 0346     		mov	r3, r0
 3620 0008 FB71     		strb	r3, [r7, #7]
2215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
2218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 3621              		.loc 1 2218 0
 3622 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3623 000c 002B     		cmp	r3, #0
 3624 000e 06D0     		beq	.L228
2219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Save timestamp on tamper detection event */
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_TAFCR_TAMPTS;
 3625              		.loc 1 2221 0
 3626 0010 084B     		ldr	r3, .L230
 3627 0012 084A     		ldr	r2, .L230
 3628 0014 126C     		ldr	r2, [r2, #64]
 3629 0016 42F08002 		orr	r2, r2, #128
 3630 001a 1A64     		str	r2, [r3, #64]
 3631 001c 05E0     		b	.L227
 3632              	.L228:
2222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Tamper detection does not cause a timestamp to be saved */
2226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_TAFCR_TAMPTS;    
 3633              		.loc 1 2226 0
 3634 001e 054B     		ldr	r3, .L230
 3635 0020 044A     		ldr	r2, .L230
 3636 0022 126C     		ldr	r2, [r2, #64]
 3637 0024 22F08002 		bic	r2, r2, #128
 3638 0028 1A64     		str	r2, [r3, #64]
 3639              	.L227:
2227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3640              		.loc 1 2228 0
 3641 002a 0C37     		adds	r7, r7, #12
 3642 002c BD46     		mov	sp, r7
 3643              		@ sp needed
 3644 002e 5DF8047B 		ldr	r7, [sp], #4
 3645 0032 7047     		bx	lr
 3646              	.L231:
 3647              		.align	2
 3648              	.L230:
 3649 0034 00280040 		.word	1073752064
 3650              		.cfi_endproc
 3651              	.LFE152:
 3653              		.section	.text.RTC_TamperPullUpCmd,"ax",%progbits
 3654              		.align	2
 3655              		.global	RTC_TamperPullUpCmd
 3656              		.thumb
 3657              		.thumb_func
 3659              	RTC_TamperPullUpCmd:
 3660              	.LFB153:
2229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Precharge of Tamper pin.
2232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of tamper pull up.
2233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.                   
2234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperPullUpCmd(FunctionalState NewState)
2237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3661              		.loc 1 2237 0
 3662              		.cfi_startproc
 3663              		@ args = 0, pretend = 0, frame = 8
 3664              		@ frame_needed = 1, uses_anonymous_args = 0
 3665              		@ link register save eliminated.
 3666 0000 80B4     		push	{r7}
 3667              	.LCFI125:
 3668              		.cfi_def_cfa_offset 4
 3669              		.cfi_offset 7, -4
 3670 0002 83B0     		sub	sp, sp, #12
 3671              	.LCFI126:
 3672              		.cfi_def_cfa_offset 16
 3673 0004 00AF     		add	r7, sp, #0
 3674              	.LCFI127:
 3675              		.cfi_def_cfa_register 7
 3676 0006 0346     		mov	r3, r0
 3677 0008 FB71     		strb	r3, [r7, #7]
2238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  if (NewState != DISABLE)
 3678              		.loc 1 2241 0
 3679 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3680 000c 002B     		cmp	r3, #0
 3681 000e 06D0     		beq	.L233
2242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable precharge of the selected Tamper pin */
2244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_TAFCR_TAMPPUDIS; 
 3682              		.loc 1 2244 0
 3683 0010 084B     		ldr	r3, .L235
 3684 0012 084A     		ldr	r2, .L235
 3685 0014 126C     		ldr	r2, [r2, #64]
 3686 0016 22F40042 		bic	r2, r2, #32768
 3687 001a 1A64     		str	r2, [r3, #64]
 3688 001c 05E0     		b	.L232
 3689              	.L233:
2245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable precharge of the selected Tamper pin */
2249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_TAFCR_TAMPPUDIS;    
 3690              		.loc 1 2249 0
 3691 001e 054B     		ldr	r3, .L235
 3692 0020 044A     		ldr	r2, .L235
 3693 0022 126C     		ldr	r2, [r2, #64]
 3694 0024 42F40042 		orr	r2, r2, #32768
 3695 0028 1A64     		str	r2, [r3, #64]
 3696              	.L232:
2250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
2251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3697              		.loc 1 2251 0
 3698 002a 0C37     		adds	r7, r7, #12
 3699 002c BD46     		mov	sp, r7
 3700              		@ sp needed
 3701 002e 5DF8047B 		ldr	r7, [sp], #4
 3702 0032 7047     		bx	lr
 3703              	.L236:
 3704              		.align	2
 3705              	.L235:
 3706 0034 00280040 		.word	1073752064
 3707              		.cfi_endproc
 3708              	.LFE153:
 3710              		.section	.text.RTC_WriteBackupRegister,"ax",%progbits
 3711              		.align	2
 3712              		.global	RTC_WriteBackupRegister
 3713              		.thumb
 3714              		.thumb_func
 3716              	RTC_WriteBackupRegister:
 3717              	.LFB154:
2252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group10 Backup Data Registers configuration functions
2258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Backup Data Registers configuration functions  
2259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                        Backup Data Registers configuration functions 
2263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Writes a data in a specified RTC Backup data register.
2271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
2272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
2273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          specify the register.
2274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Data: Data to be written in the specified RTC Backup data register.                    
2275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_WriteBackupRegister(uint32_t RTC_BKP_DR, uint32_t Data)
2278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3718              		.loc 1 2278 0
 3719              		.cfi_startproc
 3720              		@ args = 0, pretend = 0, frame = 16
 3721              		@ frame_needed = 1, uses_anonymous_args = 0
 3722              		@ link register save eliminated.
 3723 0000 80B4     		push	{r7}
 3724              	.LCFI128:
 3725              		.cfi_def_cfa_offset 4
 3726              		.cfi_offset 7, -4
 3727 0002 85B0     		sub	sp, sp, #20
 3728              	.LCFI129:
 3729              		.cfi_def_cfa_offset 24
 3730 0004 00AF     		add	r7, sp, #0
 3731              	.LCFI130:
 3732              		.cfi_def_cfa_register 7
 3733 0006 7860     		str	r0, [r7, #4]
 3734 0008 3960     		str	r1, [r7]
2279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 3735              		.loc 1 2279 0
 3736 000a 0023     		movs	r3, #0
 3737 000c FB60     		str	r3, [r7, #12]
2280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
2283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp = RTC_BASE + 0x50;
 3738              		.loc 1 2284 0
 3739 000e 074B     		ldr	r3, .L238
 3740 0010 FB60     		str	r3, [r7, #12]
2285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3741              		.loc 1 2285 0
 3742 0012 7B68     		ldr	r3, [r7, #4]
 3743 0014 9A00     		lsls	r2, r3, #2
 3744 0016 FB68     		ldr	r3, [r7, #12]
 3745 0018 1344     		add	r3, r3, r2
 3746 001a FB60     		str	r3, [r7, #12]
2286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Write the specified register */
2288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 3747              		.loc 1 2288 0
 3748 001c FB68     		ldr	r3, [r7, #12]
 3749 001e 3A68     		ldr	r2, [r7]
 3750 0020 1A60     		str	r2, [r3]
2289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3751              		.loc 1 2289 0
 3752 0022 1437     		adds	r7, r7, #20
 3753 0024 BD46     		mov	sp, r7
 3754              		@ sp needed
 3755 0026 5DF8047B 		ldr	r7, [sp], #4
 3756 002a 7047     		bx	lr
 3757              	.L239:
 3758              		.align	2
 3759              	.L238:
 3760 002c 50280040 		.word	1073752144
 3761              		.cfi_endproc
 3762              	.LFE154:
 3764              		.section	.text.RTC_ReadBackupRegister,"ax",%progbits
 3765              		.align	2
 3766              		.global	RTC_ReadBackupRegister
 3767              		.thumb
 3768              		.thumb_func
 3770              	RTC_ReadBackupRegister:
 3771              	.LFB155:
2290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Reads data from the specified RTC Backup data Register.
2293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
2294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
2295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          specify the register.                   
2296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_ReadBackupRegister(uint32_t RTC_BKP_DR)
2299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3772              		.loc 1 2299 0
 3773              		.cfi_startproc
 3774              		@ args = 0, pretend = 0, frame = 16
 3775              		@ frame_needed = 1, uses_anonymous_args = 0
 3776              		@ link register save eliminated.
 3777 0000 80B4     		push	{r7}
 3778              	.LCFI131:
 3779              		.cfi_def_cfa_offset 4
 3780              		.cfi_offset 7, -4
 3781 0002 85B0     		sub	sp, sp, #20
 3782              	.LCFI132:
 3783              		.cfi_def_cfa_offset 24
 3784 0004 00AF     		add	r7, sp, #0
 3785              	.LCFI133:
 3786              		.cfi_def_cfa_register 7
 3787 0006 7860     		str	r0, [r7, #4]
2300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 3788              		.loc 1 2300 0
 3789 0008 0023     		movs	r3, #0
 3790 000a FB60     		str	r3, [r7, #12]
2301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
2304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp = RTC_BASE + 0x50;
 3791              		.loc 1 2305 0
 3792 000c 074B     		ldr	r3, .L242
 3793 000e FB60     		str	r3, [r7, #12]
2306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3794              		.loc 1 2306 0
 3795 0010 7B68     		ldr	r3, [r7, #4]
 3796 0012 9A00     		lsls	r2, r3, #2
 3797 0014 FB68     		ldr	r3, [r7, #12]
 3798 0016 1344     		add	r3, r3, r2
 3799 0018 FB60     		str	r3, [r7, #12]
2307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Read the specified register */
2309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (*(__IO uint32_t *)tmp);
 3800              		.loc 1 2309 0
 3801 001a FB68     		ldr	r3, [r7, #12]
 3802 001c 1B68     		ldr	r3, [r3]
2310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3803              		.loc 1 2310 0
 3804 001e 1846     		mov	r0, r3
 3805 0020 1437     		adds	r7, r7, #20
 3806 0022 BD46     		mov	sp, r7
 3807              		@ sp needed
 3808 0024 5DF8047B 		ldr	r7, [sp], #4
 3809 0028 7047     		bx	lr
 3810              	.L243:
 3811 002a 00BF     		.align	2
 3812              	.L242:
 3813 002c 50280040 		.word	1073752144
 3814              		.cfi_endproc
 3815              	.LFE155:
 3817              		.section	.text.RTC_TamperPinSelection,"ax",%progbits
 3818              		.align	2
 3819              		.global	RTC_TamperPinSelection
 3820              		.thumb
 3821              		.thumb_func
 3823              	RTC_TamperPinSelection:
 3824              	.LFB156:
2311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group11 RTC Tamper and TimeStamp Pins Selection and Output Type Config configurat
2317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   RTC Tamper and TimeStamp Pins Selection and Output Type Config 
2318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *           configuration functions  
2319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration 
2323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   functions 
2324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Selects the RTC Tamper Pin.
2332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperPin: specifies the RTC Tamper Pin.
2333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TamperPin_PC13: PC13 is selected as RTC Tamper Pin.
2335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TamperPin_PI8: PI8 is selected as RTC Tamper Pin.    
2336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperPinSelection(uint32_t RTC_TamperPin)
2339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3825              		.loc 1 2339 0
 3826              		.cfi_startproc
 3827              		@ args = 0, pretend = 0, frame = 8
 3828              		@ frame_needed = 1, uses_anonymous_args = 0
 3829              		@ link register save eliminated.
 3830 0000 80B4     		push	{r7}
 3831              	.LCFI134:
 3832              		.cfi_def_cfa_offset 4
 3833              		.cfi_offset 7, -4
 3834 0002 83B0     		sub	sp, sp, #12
 3835              	.LCFI135:
 3836              		.cfi_def_cfa_offset 16
 3837 0004 00AF     		add	r7, sp, #0
 3838              	.LCFI136:
 3839              		.cfi_def_cfa_register 7
 3840 0006 7860     		str	r0, [r7, #4]
2340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_PIN(RTC_TamperPin));
2342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPINSEL);
 3841              		.loc 1 2343 0
 3842 0008 084B     		ldr	r3, .L245
 3843 000a 084A     		ldr	r2, .L245
 3844 000c 126C     		ldr	r2, [r2, #64]
 3845 000e 22F48032 		bic	r2, r2, #65536
 3846 0012 1A64     		str	r2, [r3, #64]
2344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TamperPin);  
 3847              		.loc 1 2344 0
 3848 0014 054B     		ldr	r3, .L245
 3849 0016 054A     		ldr	r2, .L245
 3850 0018 116C     		ldr	r1, [r2, #64]
 3851 001a 7A68     		ldr	r2, [r7, #4]
 3852 001c 0A43     		orrs	r2, r2, r1
 3853 001e 1A64     		str	r2, [r3, #64]
2345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3854              		.loc 1 2345 0
 3855 0020 0C37     		adds	r7, r7, #12
 3856 0022 BD46     		mov	sp, r7
 3857              		@ sp needed
 3858 0024 5DF8047B 		ldr	r7, [sp], #4
 3859 0028 7047     		bx	lr
 3860              	.L246:
 3861 002a 00BF     		.align	2
 3862              	.L245:
 3863 002c 00280040 		.word	1073752064
 3864              		.cfi_endproc
 3865              	.LFE156:
 3867              		.section	.text.RTC_TimeStampPinSelection,"ax",%progbits
 3868              		.align	2
 3869              		.global	RTC_TimeStampPinSelection
 3870              		.thumb
 3871              		.thumb_func
 3873              	RTC_TimeStampPinSelection:
 3874              	.LFB157:
2346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Selects the RTC TimeStamp Pin.
2349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStampPin: specifies the RTC TimeStamp Pin.
2350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampPin_PC13: PC13 is selected as RTC TimeStamp Pin.
2352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampPin_PI8: PI8 is selected as RTC TimeStamp Pin.    
2353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStampPinSelection(uint32_t RTC_TimeStampPin)
2356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3875              		.loc 1 2356 0
 3876              		.cfi_startproc
 3877              		@ args = 0, pretend = 0, frame = 8
 3878              		@ frame_needed = 1, uses_anonymous_args = 0
 3879              		@ link register save eliminated.
 3880 0000 80B4     		push	{r7}
 3881              	.LCFI137:
 3882              		.cfi_def_cfa_offset 4
 3883              		.cfi_offset 7, -4
 3884 0002 83B0     		sub	sp, sp, #12
 3885              	.LCFI138:
 3886              		.cfi_def_cfa_offset 16
 3887 0004 00AF     		add	r7, sp, #0
 3888              	.LCFI139:
 3889              		.cfi_def_cfa_register 7
 3890 0006 7860     		str	r0, [r7, #4]
2357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
2359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TSINSEL);
 3891              		.loc 1 2360 0
 3892 0008 084B     		ldr	r3, .L248
 3893 000a 084A     		ldr	r2, .L248
 3894 000c 126C     		ldr	r2, [r2, #64]
 3895 000e 22F40032 		bic	r2, r2, #131072
 3896 0012 1A64     		str	r2, [r3, #64]
2361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TimeStampPin);  
 3897              		.loc 1 2361 0
 3898 0014 054B     		ldr	r3, .L248
 3899 0016 054A     		ldr	r2, .L248
 3900 0018 116C     		ldr	r1, [r2, #64]
 3901 001a 7A68     		ldr	r2, [r7, #4]
 3902 001c 0A43     		orrs	r2, r2, r1
 3903 001e 1A64     		str	r2, [r3, #64]
2362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3904              		.loc 1 2362 0
 3905 0020 0C37     		adds	r7, r7, #12
 3906 0022 BD46     		mov	sp, r7
 3907              		@ sp needed
 3908 0024 5DF8047B 		ldr	r7, [sp], #4
 3909 0028 7047     		bx	lr
 3910              	.L249:
 3911 002a 00BF     		.align	2
 3912              	.L248:
 3913 002c 00280040 		.word	1073752064
 3914              		.cfi_endproc
 3915              	.LFE157:
 3917              		.section	.text.RTC_OutputTypeConfig,"ax",%progbits
 3918              		.align	2
 3919              		.global	RTC_OutputTypeConfig
 3920              		.thumb
 3921              		.thumb_func
 3923              	RTC_OutputTypeConfig:
 3924              	.LFB158:
2363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Output Pin mode. 
2366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_OutputType: specifies the RTC Output (PC13) pin mode.
2367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputType_OpenDrain: RTC Output (PC13) is configured in 
2369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    Open Drain mode.
2370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputType_PushPull:  RTC Output (PC13) is configured in 
2371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    Push Pull mode.    
2372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_OutputTypeConfig(uint32_t RTC_OutputType)
2375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3925              		.loc 1 2375 0
 3926              		.cfi_startproc
 3927              		@ args = 0, pretend = 0, frame = 8
 3928              		@ frame_needed = 1, uses_anonymous_args = 0
 3929              		@ link register save eliminated.
 3930 0000 80B4     		push	{r7}
 3931              	.LCFI140:
 3932              		.cfi_def_cfa_offset 4
 3933              		.cfi_offset 7, -4
 3934 0002 83B0     		sub	sp, sp, #12
 3935              	.LCFI141:
 3936              		.cfi_def_cfa_offset 16
 3937 0004 00AF     		add	r7, sp, #0
 3938              	.LCFI142:
 3939              		.cfi_def_cfa_register 7
 3940 0006 7860     		str	r0, [r7, #4]
2376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(RTC_OutputType));
2378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_ALARMOUTTYPE);
 3941              		.loc 1 2379 0
 3942 0008 084B     		ldr	r3, .L251
 3943 000a 084A     		ldr	r2, .L251
 3944 000c 126C     		ldr	r2, [r2, #64]
 3945 000e 22F48022 		bic	r2, r2, #262144
 3946 0012 1A64     		str	r2, [r3, #64]
2380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_OutputType);  
 3947              		.loc 1 2380 0
 3948 0014 054B     		ldr	r3, .L251
 3949 0016 054A     		ldr	r2, .L251
 3950 0018 116C     		ldr	r1, [r2, #64]
 3951 001a 7A68     		ldr	r2, [r7, #4]
 3952 001c 0A43     		orrs	r2, r2, r1
 3953 001e 1A64     		str	r2, [r3, #64]
2381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3954              		.loc 1 2381 0
 3955 0020 0C37     		adds	r7, r7, #12
 3956 0022 BD46     		mov	sp, r7
 3957              		@ sp needed
 3958 0024 5DF8047B 		ldr	r7, [sp], #4
 3959 0028 7047     		bx	lr
 3960              	.L252:
 3961 002a 00BF     		.align	2
 3962              	.L251:
 3963 002c 00280040 		.word	1073752064
 3964              		.cfi_endproc
 3965              	.LFE158:
 3967              		.section	.text.RTC_SynchroShiftConfig,"ax",%progbits
 3968              		.align	2
 3969              		.global	RTC_SynchroShiftConfig
 3970              		.thumb
 3971              		.thumb_func
 3973              	RTC_SynchroShiftConfig:
 3974              	.LFB159:
2382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group12 Shift control synchronisation functions
2388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Shift control synchronisation functions 
2389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    Shift control synchronisation functions
2393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Synchronization Shift Control Settings.
2401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register 
2402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_ShiftAdd1S : Select to add or not 1 second to the time Calendar.
2403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values :
2404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_ShiftAdd1S_Set  : Add one second to the clock calendar. 
2405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_ShiftAdd1S_Reset: No effect.
2406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_ShiftSubFS: Select the number of Second Fractions to Substitute.
2407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         This parameter can be one any value from 0 to 0x7FFF.
2408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
2409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Shift registers are configured
2410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Shift registers are not configured
2411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
2412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SynchroShiftConfig(uint32_t RTC_ShiftAdd1S, uint32_t RTC_ShiftSubFS)
2413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 3975              		.loc 1 2413 0
 3976              		.cfi_startproc
 3977              		@ args = 0, pretend = 0, frame = 16
 3978              		@ frame_needed = 1, uses_anonymous_args = 0
 3979 0000 80B5     		push	{r7, lr}
 3980              	.LCFI143:
 3981              		.cfi_def_cfa_offset 8
 3982              		.cfi_offset 7, -8
 3983              		.cfi_offset 14, -4
 3984 0002 84B0     		sub	sp, sp, #16
 3985              	.LCFI144:
 3986              		.cfi_def_cfa_offset 24
 3987 0004 00AF     		add	r7, sp, #0
 3988              	.LCFI145:
 3989              		.cfi_def_cfa_register 7
 3990 0006 7860     		str	r0, [r7, #4]
 3991 0008 3960     		str	r1, [r7]
2414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 3992              		.loc 1 2414 0
 3993 000a 0023     		movs	r3, #0
 3994 000c FB73     		strb	r3, [r7, #15]
2415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t shpfcount = 0;
 3995              		.loc 1 2415 0
 3996 000e 0023     		movs	r3, #0
 3997 0010 BB60     		str	r3, [r7, #8]
2416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SHIFT_ADD1S(RTC_ShiftAdd1S));
2419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SHIFT_SUBFS(RTC_ShiftSubFS));
2420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
2422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 3998              		.loc 1 2422 0
 3999 0012 214B     		ldr	r3, .L264
 4000 0014 CA22     		movs	r2, #202
 4001 0016 5A62     		str	r2, [r3, #36]
2423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 4002              		.loc 1 2423 0
 4003 0018 1F4B     		ldr	r3, .L264
 4004 001a 5322     		movs	r2, #83
 4005 001c 5A62     		str	r2, [r3, #36]
2424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check if a Shift is pending*/
2426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_SHPF) != RESET)
 4006              		.loc 1 2426 0
 4007 001e 1E4B     		ldr	r3, .L264
 4008 0020 DB68     		ldr	r3, [r3, #12]
 4009 0022 03F00803 		and	r3, r3, #8
 4010 0026 002B     		cmp	r3, #0
 4011 0028 0DD0     		beq	.L254
2427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait until the shift is completed*/
2429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_SHPF) != RESET) && (shpfcount != SHPF_TIMEOUT))
 4012              		.loc 1 2429 0
 4013 002a 02E0     		b	.L255
 4014              	.L256:
2430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
2431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       shpfcount++;
 4015              		.loc 1 2431 0
 4016 002c BB68     		ldr	r3, [r7, #8]
 4017 002e 0133     		adds	r3, r3, #1
 4018 0030 BB60     		str	r3, [r7, #8]
 4019              	.L255:
2429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_SHPF) != RESET) && (shpfcount != SHPF_TIMEOUT))
 4020              		.loc 1 2429 0 discriminator 1
 4021 0032 194B     		ldr	r3, .L264
 4022 0034 DB68     		ldr	r3, [r3, #12]
 4023 0036 03F00803 		and	r3, r3, #8
 4024 003a 002B     		cmp	r3, #0
 4025 003c 03D0     		beq	.L254
2429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_SHPF) != RESET) && (shpfcount != SHPF_TIMEOUT))
 4026              		.loc 1 2429 0 is_stmt 0 discriminator 2
 4027 003e BB68     		ldr	r3, [r7, #8]
 4028 0040 B3F5805F 		cmp	r3, #4096
 4029 0044 F2D1     		bne	.L256
 4030              	.L254:
2432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
2433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check if the Shift pending is completed or if there is no Shift operation at all*/
2436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_SHPF) == RESET)
 4031              		.loc 1 2436 0 is_stmt 1
 4032 0046 144B     		ldr	r3, .L264
 4033 0048 DB68     		ldr	r3, [r3, #12]
 4034 004a 03F00803 		and	r3, r3, #8
 4035 004e 002B     		cmp	r3, #0
 4036 0050 18D1     		bne	.L257
2437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* check if the reference clock detection is disabled */
2439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if((RTC->CR & RTC_CR_REFCKON) == RESET)
 4037              		.loc 1 2439 0
 4038 0052 114B     		ldr	r3, .L264
 4039 0054 9B68     		ldr	r3, [r3, #8]
 4040 0056 03F01003 		and	r3, r3, #16
 4041 005a 002B     		cmp	r3, #0
 4042 005c 0FD1     		bne	.L258
2440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
2441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Configure the Shift settings */
2442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->SHIFTR = (uint32_t)(uint32_t)(RTC_ShiftSubFS) | (uint32_t)(RTC_ShiftAdd1S);
 4043              		.loc 1 2442 0
 4044 005e 0E4B     		ldr	r3, .L264
 4045 0060 3968     		ldr	r1, [r7]
 4046 0062 7A68     		ldr	r2, [r7, #4]
 4047 0064 0A43     		orrs	r2, r2, r1
 4048 0066 DA62     		str	r2, [r3, #44]
2443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
2444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
 4049              		.loc 1 2444 0
 4050 0068 FFF7FEFF 		bl	RTC_WaitForSynchro
 4051 006c 0346     		mov	r3, r0
 4052 006e 002B     		cmp	r3, #0
 4053 0070 02D1     		bne	.L259
2445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
2446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = ERROR;
 4054              		.loc 1 2446 0
 4055 0072 0023     		movs	r3, #0
 4056 0074 FB73     		strb	r3, [r7, #15]
 4057 0076 07E0     		b	.L262
 4058              	.L259:
2447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
2448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       else
2449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
2450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = SUCCESS;
 4059              		.loc 1 2450 0
 4060 0078 0123     		movs	r3, #1
 4061 007a FB73     		strb	r3, [r7, #15]
 4062 007c 04E0     		b	.L262
 4063              	.L258:
2451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
2452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
2453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
2454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
2455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 4064              		.loc 1 2455 0
 4065 007e 0023     		movs	r3, #0
 4066 0080 FB73     		strb	r3, [r7, #15]
 4067 0082 01E0     		b	.L262
 4068              	.L257:
2456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
2457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 4069              		.loc 1 2460 0
 4070 0084 0023     		movs	r3, #0
 4071 0086 FB73     		strb	r3, [r7, #15]
 4072              	.L262:
2461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
2464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 4073              		.loc 1 2464 0
 4074 0088 034B     		ldr	r3, .L264
 4075 008a FF22     		movs	r2, #255
 4076 008c 5A62     		str	r2, [r3, #36]
2465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (ErrorStatus)(status);
 4077              		.loc 1 2466 0
 4078 008e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4079              		.loc 1 2467 0
 4080 0090 1846     		mov	r0, r3
 4081 0092 1037     		adds	r7, r7, #16
 4082 0094 BD46     		mov	sp, r7
 4083              		@ sp needed
 4084 0096 80BD     		pop	{r7, pc}
 4085              	.L265:
 4086              		.align	2
 4087              	.L264:
 4088 0098 00280040 		.word	1073752064
 4089              		.cfi_endproc
 4090              	.LFE159:
 4092              		.section	.text.RTC_ITConfig,"ax",%progbits
 4093              		.align	2
 4094              		.global	RTC_ITConfig
 4095              		.thumb
 4096              		.thumb_func
 4098              	RTC_ITConfig:
 4099              	.LFB160:
2468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group13 Interrupts and flags management functions
2474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Interrupts and flags management functions  
2475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                        Interrupts and flags management functions
2479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  All RTC interrupts are connected to the EXTI controller.
2481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  - To enable the RTC Alarm interrupt, the following sequence is required:
2483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the EXTI Line 17 in interrupt mode and select the rising 
2484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the RTC_Alarm IRQ channel in the NVIC using the NVIC_Init()
2486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      function.
2487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure the RTC to generate RTC alarms (Alarm A and/or Alarm B) using
2488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      the RTC_SetAlarm() and RTC_AlarmCmd() functions.
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  - To enable the RTC Wakeup interrupt, the following sequence is required:
2491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the EXTI Line 22 in interrupt mode and select the rising 
2492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the RTC_WKUP IRQ channel in the NVIC using the NVIC_Init()
2494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      function.
2495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure the RTC to generate the RTC wakeup timer event using the 
2496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      RTC_WakeUpClockConfig(), RTC_SetWakeUpCounter() and RTC_WakeUpCmd() functions.
2497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  - To enable the RTC Tamper interrupt, the following sequence is required:
2499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the EXTI Line 21 in interrupt mode and select the rising 
2500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the NVIC_Init()
2502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      function.
2503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure the RTC to detect the RTC tamper event using the 
2504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      RTC_TamperTriggerConfig() and RTC_TamperCmd() functions.
2505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  - To enable the RTC TimeStamp interrupt, the following sequence is required:
2507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the EXTI Line 21 in interrupt mode and select the rising 
2508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the NVIC_Init()
2510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      function.
2511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    - Configure the RTC to detect the RTC time-stamp event using the 
2512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      RTC_TimeStampCmd() functions.
2513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
2520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt sources to be enabled or disabled. 
2521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS:  Time Stamp interrupt mask
2523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT:  WakeUp Timer interrupt mask
2524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB:  Alarm B interrupt mask
2525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA:  Alarm A interrupt mask
2526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP: Tamper event interrupt mask
2527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
2528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
2529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ITConfig(uint32_t RTC_IT, FunctionalState NewState)
2532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4100              		.loc 1 2532 0
 4101              		.cfi_startproc
 4102              		@ args = 0, pretend = 0, frame = 8
 4103              		@ frame_needed = 1, uses_anonymous_args = 0
 4104              		@ link register save eliminated.
 4105 0000 80B4     		push	{r7}
 4106              	.LCFI146:
 4107              		.cfi_def_cfa_offset 4
 4108              		.cfi_offset 7, -4
 4109 0002 83B0     		sub	sp, sp, #12
 4110              	.LCFI147:
 4111              		.cfi_def_cfa_offset 16
 4112 0004 00AF     		add	r7, sp, #0
 4113              	.LCFI148:
 4114              		.cfi_def_cfa_register 7
 4115 0006 7860     		str	r0, [r7, #4]
 4116 0008 0B46     		mov	r3, r1
 4117 000a FB70     		strb	r3, [r7, #3]
2533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CONFIG_IT(RTC_IT));
2535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
2538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 4118              		.loc 1 2538 0
 4119 000c 194B     		ldr	r3, .L269
 4120 000e CA22     		movs	r2, #202
 4121 0010 5A62     		str	r2, [r3, #36]
2539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 4122              		.loc 1 2539 0
 4123 0012 184B     		ldr	r3, .L269
 4124 0014 5322     		movs	r2, #83
 4125 0016 5A62     		str	r2, [r3, #36]
2540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 4126              		.loc 1 2541 0
 4127 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4128 001a 002B     		cmp	r3, #0
 4129 001c 10D0     		beq	.L267
2542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)(RTC_IT & ~RTC_TAFCR_TAMPIE);
 4130              		.loc 1 2544 0
 4131 001e 154B     		ldr	r3, .L269
 4132 0020 144A     		ldr	r2, .L269
 4133 0022 9168     		ldr	r1, [r2, #8]
 4134 0024 7A68     		ldr	r2, [r7, #4]
 4135 0026 22F00402 		bic	r2, r2, #4
 4136 002a 0A43     		orrs	r2, r2, r1
 4137 002c 9A60     		str	r2, [r3, #8]
2545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_IT & RTC_TAFCR_TAMPIE);
 4138              		.loc 1 2546 0
 4139 002e 114B     		ldr	r3, .L269
 4140 0030 104A     		ldr	r2, .L269
 4141 0032 116C     		ldr	r1, [r2, #64]
 4142 0034 7A68     		ldr	r2, [r7, #4]
 4143 0036 02F00402 		and	r2, r2, #4
 4144 003a 0A43     		orrs	r2, r2, r1
 4145 003c 1A64     		str	r2, [r3, #64]
 4146 003e 11E0     		b	.L268
 4147              	.L267:
2547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~(RTC_IT & (uint32_t)~RTC_TAFCR_TAMPIE);
 4148              		.loc 1 2551 0
 4149 0040 0C4B     		ldr	r3, .L269
 4150 0042 0C4A     		ldr	r2, .L269
 4151 0044 9168     		ldr	r1, [r2, #8]
 4152 0046 7A68     		ldr	r2, [r7, #4]
 4153 0048 22F00402 		bic	r2, r2, #4
 4154 004c D243     		mvns	r2, r2
 4155 004e 0A40     		ands	r2, r2, r1
 4156 0050 9A60     		str	r2, [r3, #8]
2552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~(RTC_IT & RTC_TAFCR_TAMPIE);
 4157              		.loc 1 2553 0
 4158 0052 084B     		ldr	r3, .L269
 4159 0054 074A     		ldr	r2, .L269
 4160 0056 116C     		ldr	r1, [r2, #64]
 4161 0058 7A68     		ldr	r2, [r7, #4]
 4162 005a 02F00402 		and	r2, r2, #4
 4163 005e D243     		mvns	r2, r2
 4164 0060 0A40     		ands	r2, r2, r1
 4165 0062 1A64     		str	r2, [r3, #64]
 4166              	.L268:
2554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
2556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 4167              		.loc 1 2556 0
 4168 0064 034B     		ldr	r3, .L269
 4169 0066 FF22     		movs	r2, #255
 4170 0068 5A62     		str	r2, [r3, #36]
2557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4171              		.loc 1 2557 0
 4172 006a 0C37     		adds	r7, r7, #12
 4173 006c BD46     		mov	sp, r7
 4174              		@ sp needed
 4175 006e 5DF8047B 		ldr	r7, [sp], #4
 4176 0072 7047     		bx	lr
 4177              	.L270:
 4178              		.align	2
 4179              	.L269:
 4180 0074 00280040 		.word	1073752064
 4181              		.cfi_endproc
 4182              	.LFE160:
 4184              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 4185              		.align	2
 4186              		.global	RTC_GetFlagStatus
 4187              		.thumb
 4188              		.thumb_func
 4190              	RTC_GetFlagStatus:
 4191              	.LFB161:
2558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
2561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
2562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp OverFlow flag
2565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_INITF: Initialization mode flag
2570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_INITS: Registers Configured flag
2572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTWF: WakeUp Timer Write flag
2573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBWF: Alarm B Write flag
2574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAWF: Alarm A write flag
2575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
2576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** FlagStatus RTC_GetFlagStatus(uint32_t RTC_FLAG)
2578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4192              		.loc 1 2578 0
 4193              		.cfi_startproc
 4194              		@ args = 0, pretend = 0, frame = 16
 4195              		@ frame_needed = 1, uses_anonymous_args = 0
 4196              		@ link register save eliminated.
 4197 0000 80B4     		push	{r7}
 4198              	.LCFI149:
 4199              		.cfi_def_cfa_offset 4
 4200              		.cfi_offset 7, -4
 4201 0002 85B0     		sub	sp, sp, #20
 4202              	.LCFI150:
 4203              		.cfi_def_cfa_offset 24
 4204 0004 00AF     		add	r7, sp, #0
 4205              	.LCFI151:
 4206              		.cfi_def_cfa_register 7
 4207 0006 7860     		str	r0, [r7, #4]
2579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   FlagStatus bitstatus = RESET;
 4208              		.loc 1 2579 0
 4209 0008 0023     		movs	r3, #0
 4210 000a FB73     		strb	r3, [r7, #15]
2580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 4211              		.loc 1 2580 0
 4212 000c 0023     		movs	r3, #0
 4213 000e BB60     		str	r3, [r7, #8]
2581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG));
2584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get all the flags */
2586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->ISR & RTC_FLAGS_MASK);
 4214              		.loc 1 2586 0
 4215 0010 0B4B     		ldr	r3, .L275
 4216 0012 DA68     		ldr	r2, [r3, #12]
 4217 0014 43F67773 		movw	r3, #16247
 4218 0018 1340     		ands	r3, r3, r2
 4219 001a BB60     		str	r3, [r7, #8]
2587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Return the status of the flag */
2589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((tmpreg & RTC_FLAG) != (uint32_t)RESET)
 4220              		.loc 1 2589 0
 4221 001c BA68     		ldr	r2, [r7, #8]
 4222 001e 7B68     		ldr	r3, [r7, #4]
 4223 0020 1340     		ands	r3, r3, r2
 4224 0022 002B     		cmp	r3, #0
 4225 0024 02D0     		beq	.L272
2590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = SET;
 4226              		.loc 1 2591 0
 4227 0026 0123     		movs	r3, #1
 4228 0028 FB73     		strb	r3, [r7, #15]
 4229 002a 01E0     		b	.L273
 4230              	.L272:
2592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = RESET;
 4231              		.loc 1 2595 0
 4232 002c 0023     		movs	r3, #0
 4233 002e FB73     		strb	r3, [r7, #15]
 4234              	.L273:
2596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return bitstatus;
 4235              		.loc 1 2597 0
 4236 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4237              		.loc 1 2598 0
 4238 0032 1846     		mov	r0, r3
 4239 0034 1437     		adds	r7, r7, #20
 4240 0036 BD46     		mov	sp, r7
 4241              		@ sp needed
 4242 0038 5DF8047B 		ldr	r7, [sp], #4
 4243 003c 7047     		bx	lr
 4244              	.L276:
 4245 003e 00BF     		.align	2
 4246              	.L275:
 4247 0040 00280040 		.word	1073752064
 4248              		.cfi_endproc
 4249              	.LFE161:
 4251              		.section	.text.RTC_ClearFlag,"ax",%progbits
 4252              		.align	2
 4253              		.global	RTC_ClearFlag
 4254              		.thumb
 4255              		.thumb_func
 4257              	RTC_ClearFlag:
 4258              	.LFB162:
2599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Clears the RTC's pending flags.
2602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_FLAG: specifies the RTC flag to clear.
2603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp Overflow flag 
2606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ClearFlag(uint32_t RTC_FLAG)
2614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4259              		.loc 1 2614 0
 4260              		.cfi_startproc
 4261              		@ args = 0, pretend = 0, frame = 8
 4262              		@ frame_needed = 1, uses_anonymous_args = 0
 4263              		@ link register save eliminated.
 4264 0000 80B4     		push	{r7}
 4265              	.LCFI152:
 4266              		.cfi_def_cfa_offset 4
 4267              		.cfi_offset 7, -4
 4268 0002 83B0     		sub	sp, sp, #12
 4269              	.LCFI153:
 4270              		.cfi_def_cfa_offset 16
 4271 0004 00AF     		add	r7, sp, #0
 4272              	.LCFI154:
 4273              		.cfi_def_cfa_register 7
 4274 0006 7860     		str	r0, [r7, #4]
2615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG));
2617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the Flags in the RTC_ISR register */
2619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((RTC_FLAG | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR &
 4275              		.loc 1 2619 0
 4276 0008 084B     		ldr	r3, .L278
 4277 000a 7A68     		ldr	r2, [r7, #4]
 4278 000c 92B2     		uxth	r2, r2
 4279 000e 42F08002 		orr	r2, r2, #128
 4280 0012 D143     		mvns	r1, r2
 4281 0014 054A     		ldr	r2, .L278
 4282 0016 D268     		ldr	r2, [r2, #12]
 4283 0018 02F08002 		and	r2, r2, #128
 4284 001c 0A43     		orrs	r2, r2, r1
 4285 001e DA60     		str	r2, [r3, #12]
2620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4286              		.loc 1 2620 0
 4287 0020 0C37     		adds	r7, r7, #12
 4288 0022 BD46     		mov	sp, r7
 4289              		@ sp needed
 4290 0024 5DF8047B 		ldr	r7, [sp], #4
 4291 0028 7047     		bx	lr
 4292              	.L279:
 4293 002a 00BF     		.align	2
 4294              	.L278:
 4295 002c 00280040 		.word	1073752064
 4296              		.cfi_endproc
 4297              	.LFE162:
 4299              		.section	.text.RTC_GetITStatus,"ax",%progbits
 4300              		.align	2
 4301              		.global	RTC_GetITStatus
 4302              		.thumb
 4303              		.thumb_func
 4305              	RTC_GetITStatus:
 4306              	.LFB163:
2621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
2624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt source to check.
2625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
2630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt 
2631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval The new state of RTC_IT (SET or RESET).
2632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ITStatus RTC_GetITStatus(uint32_t RTC_IT)
2634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4307              		.loc 1 2634 0
 4308              		.cfi_startproc
 4309              		@ args = 0, pretend = 0, frame = 24
 4310              		@ frame_needed = 1, uses_anonymous_args = 0
 4311              		@ link register save eliminated.
 4312 0000 80B4     		push	{r7}
 4313              	.LCFI155:
 4314              		.cfi_def_cfa_offset 4
 4315              		.cfi_offset 7, -4
 4316 0002 87B0     		sub	sp, sp, #28
 4317              	.LCFI156:
 4318              		.cfi_def_cfa_offset 32
 4319 0004 00AF     		add	r7, sp, #0
 4320              	.LCFI157:
 4321              		.cfi_def_cfa_register 7
 4322 0006 7860     		str	r0, [r7, #4]
2635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ITStatus bitstatus = RESET;
 4323              		.loc 1 2635 0
 4324 0008 0023     		movs	r3, #0
 4325 000a FB75     		strb	r3, [r7, #23]
2636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0, enablestatus = 0;
 4326              		.loc 1 2636 0
 4327 000c 0023     		movs	r3, #0
 4328 000e 3B61     		str	r3, [r7, #16]
 4329 0010 0023     		movs	r3, #0
 4330 0012 FB60     		str	r3, [r7, #12]
2637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT));
2640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the TAMPER Interrupt enable bit and pending bit */
2642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TAFCR & (RTC_TAFCR_TAMPIE));
 4331              		.loc 1 2642 0
 4332 0014 134B     		ldr	r3, .L284
 4333 0016 1B6C     		ldr	r3, [r3, #64]
 4334 0018 03F00403 		and	r3, r3, #4
 4335 001c 3B61     		str	r3, [r7, #16]
2643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the Interrupt enable Status */
2645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   enablestatus = (uint32_t)((RTC->CR & RTC_IT) | (tmpreg & (RTC_IT >> 15)));
 4336              		.loc 1 2645 0
 4337 001e 114B     		ldr	r3, .L284
 4338 0020 9A68     		ldr	r2, [r3, #8]
 4339 0022 7B68     		ldr	r3, [r7, #4]
 4340 0024 1A40     		ands	r2, r2, r3
 4341 0026 7B68     		ldr	r3, [r7, #4]
 4342 0028 D90B     		lsrs	r1, r3, #15
 4343 002a 3B69     		ldr	r3, [r7, #16]
 4344 002c 0B40     		ands	r3, r3, r1
 4345 002e 1343     		orrs	r3, r3, r2
 4346 0030 FB60     		str	r3, [r7, #12]
2646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the Interrupt pending bit */
2648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)((RTC->ISR & (uint32_t)(RTC_IT >> 4)));
 4347              		.loc 1 2648 0
 4348 0032 0C4B     		ldr	r3, .L284
 4349 0034 DA68     		ldr	r2, [r3, #12]
 4350 0036 7B68     		ldr	r3, [r7, #4]
 4351 0038 1B09     		lsrs	r3, r3, #4
 4352 003a 1340     		ands	r3, r3, r2
 4353 003c 3B61     		str	r3, [r7, #16]
2649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the status of the Interrupt */
2651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((enablestatus != (uint32_t)RESET) && ((tmpreg & 0x0000FFFF) != (uint32_t)RESET))
 4354              		.loc 1 2651 0
 4355 003e FB68     		ldr	r3, [r7, #12]
 4356 0040 002B     		cmp	r3, #0
 4357 0042 06D0     		beq	.L281
 4358              		.loc 1 2651 0 is_stmt 0 discriminator 1
 4359 0044 3B69     		ldr	r3, [r7, #16]
 4360 0046 9BB2     		uxth	r3, r3
 4361 0048 002B     		cmp	r3, #0
 4362 004a 02D0     		beq	.L281
2652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = SET;
 4363              		.loc 1 2653 0 is_stmt 1
 4364 004c 0123     		movs	r3, #1
 4365 004e FB75     		strb	r3, [r7, #23]
 4366 0050 01E0     		b	.L282
 4367              	.L281:
2654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = RESET;
 4368              		.loc 1 2657 0
 4369 0052 0023     		movs	r3, #0
 4370 0054 FB75     		strb	r3, [r7, #23]
 4371              	.L282:
2658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return bitstatus;
 4372              		.loc 1 2659 0
 4373 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
2660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4374              		.loc 1 2660 0
 4375 0058 1846     		mov	r0, r3
 4376 005a 1C37     		adds	r7, r7, #28
 4377 005c BD46     		mov	sp, r7
 4378              		@ sp needed
 4379 005e 5DF8047B 		ldr	r7, [sp], #4
 4380 0062 7047     		bx	lr
 4381              	.L285:
 4382              		.align	2
 4383              	.L284:
 4384 0064 00280040 		.word	1073752064
 4385              		.cfi_endproc
 4386              	.LFE163:
 4388              		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 4389              		.align	2
 4390              		.global	RTC_ClearITPendingBit
 4391              		.thumb
 4392              		.thumb_func
 4394              	RTC_ClearITPendingBit:
 4395              	.LFB164:
2661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
2664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt pending bit to clear.
2665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
2670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt 
2671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ClearITPendingBit(uint32_t RTC_IT)
2674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4396              		.loc 1 2674 0
 4397              		.cfi_startproc
 4398              		@ args = 0, pretend = 0, frame = 16
 4399              		@ frame_needed = 1, uses_anonymous_args = 0
 4400              		@ link register save eliminated.
 4401 0000 80B4     		push	{r7}
 4402              	.LCFI158:
 4403              		.cfi_def_cfa_offset 4
 4404              		.cfi_offset 7, -4
 4405 0002 85B0     		sub	sp, sp, #20
 4406              	.LCFI159:
 4407              		.cfi_def_cfa_offset 24
 4408 0004 00AF     		add	r7, sp, #0
 4409              	.LCFI160:
 4410              		.cfi_def_cfa_register 7
 4411 0006 7860     		str	r0, [r7, #4]
2675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 4412              		.loc 1 2675 0
 4413 0008 0023     		movs	r3, #0
 4414 000a FB60     		str	r3, [r7, #12]
2676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CLEAR_IT(RTC_IT));
2679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_ISR Interrupt pending bits mask */
2681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC_IT >> 4);
 4415              		.loc 1 2681 0
 4416 000c 7B68     		ldr	r3, [r7, #4]
 4417 000e 1B09     		lsrs	r3, r3, #4
 4418 0010 FB60     		str	r3, [r7, #12]
2682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the interrupt pending bits in the RTC_ISR register */
2684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((tmpreg | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR & R
 4419              		.loc 1 2684 0
 4420 0012 084B     		ldr	r3, .L287
 4421 0014 FA68     		ldr	r2, [r7, #12]
 4422 0016 92B2     		uxth	r2, r2
 4423 0018 42F08002 		orr	r2, r2, #128
 4424 001c D143     		mvns	r1, r2
 4425 001e 054A     		ldr	r2, .L287
 4426 0020 D268     		ldr	r2, [r2, #12]
 4427 0022 02F08002 		and	r2, r2, #128
 4428 0026 0A43     		orrs	r2, r2, r1
 4429 0028 DA60     		str	r2, [r3, #12]
2685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4430              		.loc 1 2685 0
 4431 002a 1437     		adds	r7, r7, #20
 4432 002c BD46     		mov	sp, r7
 4433              		@ sp needed
 4434 002e 5DF8047B 		ldr	r7, [sp], #4
 4435 0032 7047     		bx	lr
 4436              	.L288:
 4437              		.align	2
 4438              	.L287:
 4439 0034 00280040 		.word	1073752064
 4440              		.cfi_endproc
 4441              	.LFE164:
 4443              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 4444              		.align	2
 4445              		.thumb
 4446              		.thumb_func
 4448              	RTC_ByteToBcd2:
 4449              	.LFB165:
2686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
2693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Value: Byte to be converted.
2694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval Converted byte
2695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value)
2697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4450              		.loc 1 2697 0
 4451              		.cfi_startproc
 4452              		@ args = 0, pretend = 0, frame = 16
 4453              		@ frame_needed = 1, uses_anonymous_args = 0
 4454              		@ link register save eliminated.
 4455 0000 80B4     		push	{r7}
 4456              	.LCFI161:
 4457              		.cfi_def_cfa_offset 4
 4458              		.cfi_offset 7, -4
 4459 0002 85B0     		sub	sp, sp, #20
 4460              	.LCFI162:
 4461              		.cfi_def_cfa_offset 24
 4462 0004 00AF     		add	r7, sp, #0
 4463              	.LCFI163:
 4464              		.cfi_def_cfa_register 7
 4465 0006 0346     		mov	r3, r0
 4466 0008 FB71     		strb	r3, [r7, #7]
2698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint8_t bcdhigh = 0;
 4467              		.loc 1 2698 0
 4468 000a 0023     		movs	r3, #0
 4469 000c FB73     		strb	r3, [r7, #15]
2699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   while (Value >= 10)
 4470              		.loc 1 2700 0
 4471 000e 05E0     		b	.L290
 4472              	.L291:
2701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bcdhigh++;
 4473              		.loc 1 2702 0
 4474 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4475 0012 0133     		adds	r3, r3, #1
 4476 0014 FB73     		strb	r3, [r7, #15]
2703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 4477              		.loc 1 2703 0
 4478 0016 FB79     		ldrb	r3, [r7, #7]
 4479 0018 0A3B     		subs	r3, r3, #10
 4480 001a FB71     		strb	r3, [r7, #7]
 4481              	.L290:
2700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   while (Value >= 10)
 4482              		.loc 1 2700 0 discriminator 1
 4483 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4484 001e 092B     		cmp	r3, #9
 4485 0020 F6D8     		bhi	.L291
2704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return  ((uint8_t)(bcdhigh << 4) | Value);
 4486              		.loc 1 2706 0
 4487 0022 FB7B     		ldrb	r3, [r7, #15]
 4488 0024 1B01     		lsls	r3, r3, #4
 4489 0026 DAB2     		uxtb	r2, r3
 4490 0028 FB79     		ldrb	r3, [r7, #7]
 4491 002a 1343     		orrs	r3, r3, r2
 4492 002c DBB2     		uxtb	r3, r3
2707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4493              		.loc 1 2707 0
 4494 002e 1846     		mov	r0, r3
 4495 0030 1437     		adds	r7, r7, #20
 4496 0032 BD46     		mov	sp, r7
 4497              		@ sp needed
 4498 0034 5DF8047B 		ldr	r7, [sp], #4
 4499 0038 7047     		bx	lr
 4500              		.cfi_endproc
 4501              	.LFE165:
 4503 003a 00BF     		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 4504              		.align	2
 4505              		.thumb
 4506              		.thumb_func
 4508              	RTC_Bcd2ToByte:
 4509              	.LFB166:
2708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
2711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Value: BCD value to be converted.
2712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval Converted word
2713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value)
2715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 4510              		.loc 1 2715 0
 4511              		.cfi_startproc
 4512              		@ args = 0, pretend = 0, frame = 16
 4513              		@ frame_needed = 1, uses_anonymous_args = 0
 4514              		@ link register save eliminated.
 4515 0000 80B4     		push	{r7}
 4516              	.LCFI164:
 4517              		.cfi_def_cfa_offset 4
 4518              		.cfi_offset 7, -4
 4519 0002 85B0     		sub	sp, sp, #20
 4520              	.LCFI165:
 4521              		.cfi_def_cfa_offset 24
 4522 0004 00AF     		add	r7, sp, #0
 4523              	.LCFI166:
 4524              		.cfi_def_cfa_register 7
 4525 0006 0346     		mov	r3, r0
 4526 0008 FB71     		strb	r3, [r7, #7]
2716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint8_t tmp = 0;
 4527              		.loc 1 2716 0
 4528 000a 0023     		movs	r3, #0
 4529 000c FB73     		strb	r3, [r7, #15]
2717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 4530              		.loc 1 2717 0
 4531 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4532 0010 1B09     		lsrs	r3, r3, #4
 4533 0012 DBB2     		uxtb	r3, r3
 4534 0014 1A46     		mov	r2, r3
 4535 0016 9200     		lsls	r2, r2, #2
 4536 0018 1344     		add	r3, r3, r2
 4537 001a 5B00     		lsls	r3, r3, #1
 4538 001c FB73     		strb	r3, [r7, #15]
2718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 4539              		.loc 1 2718 0
 4540 001e FB79     		ldrb	r3, [r7, #7]
 4541 0020 03F00F03 		and	r3, r3, #15
 4542 0024 DAB2     		uxtb	r2, r3
 4543 0026 FB7B     		ldrb	r3, [r7, #15]
 4544 0028 1344     		add	r3, r3, r2
 4545 002a DBB2     		uxtb	r3, r3
2719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 4546              		.loc 1 2719 0
 4547 002c 1846     		mov	r0, r3
 4548 002e 1437     		adds	r7, r7, #20
 4549 0030 BD46     		mov	sp, r7
 4550              		@ sp needed
 4551 0032 5DF8047B 		ldr	r7, [sp], #4
 4552 0036 7047     		bx	lr
 4553              		.cfi_endproc
 4554              	.LFE166:
 4556              		.text
 4557              	.Letext0:
 4558              		.file 2 "/home/shihyu/data/STM32F4/gcc-arm-none-eabi-4_8-2013q4/arm-none-eabi/include/stdint.h"
 4559              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 4560              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
 4561              		.file 5 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_rtc.c
     /tmp/ccwiO5jN.s:20     .text.RTC_DeInit:00000000 $t
     /tmp/ccwiO5jN.s:25     .text.RTC_DeInit:00000000 RTC_DeInit
     /tmp/ccwiO5jN.s:387    .text.RTC_EnterInitMode:00000000 RTC_EnterInitMode
     /tmp/ccwiO5jN.s:521    .text.RTC_WaitForSynchro:00000000 RTC_WaitForSynchro
     /tmp/ccwiO5jN.s:176    .text.RTC_DeInit:000000d4 $d
     /tmp/ccwiO5jN.s:182    .text.RTC_Init:00000000 $t
     /tmp/ccwiO5jN.s:187    .text.RTC_Init:00000000 RTC_Init
     /tmp/ccwiO5jN.s:483    .text.RTC_ExitInitMode:00000000 RTC_ExitInitMode
     /tmp/ccwiO5jN.s:275    .text.RTC_Init:00000074 $d
     /tmp/ccwiO5jN.s:280    .text.RTC_StructInit:00000000 $t
     /tmp/ccwiO5jN.s:285    .text.RTC_StructInit:00000000 RTC_StructInit
     /tmp/ccwiO5jN.s:325    .text.RTC_WriteProtectionCmd:00000000 $t
     /tmp/ccwiO5jN.s:330    .text.RTC_WriteProtectionCmd:00000000 RTC_WriteProtectionCmd
     /tmp/ccwiO5jN.s:377    .text.RTC_WriteProtectionCmd:00000030 $d
     /tmp/ccwiO5jN.s:382    .text.RTC_EnterInitMode:00000000 $t
     /tmp/ccwiO5jN.s:473    .text.RTC_EnterInitMode:00000070 $d
     /tmp/ccwiO5jN.s:478    .text.RTC_ExitInitMode:00000000 $t
     /tmp/ccwiO5jN.s:511    .text.RTC_ExitInitMode:00000018 $d
     /tmp/ccwiO5jN.s:516    .text.RTC_WaitForSynchro:00000000 $t
     /tmp/ccwiO5jN.s:610    .text.RTC_WaitForSynchro:00000074 $d
     /tmp/ccwiO5jN.s:615    .text.RTC_RefClockCmd:00000000 $t
     /tmp/ccwiO5jN.s:620    .text.RTC_RefClockCmd:00000000 RTC_RefClockCmd
     /tmp/ccwiO5jN.s:700    .text.RTC_RefClockCmd:00000064 $d
     /tmp/ccwiO5jN.s:705    .text.RTC_BypassShadowCmd:00000000 $t
     /tmp/ccwiO5jN.s:710    .text.RTC_BypassShadowCmd:00000000 RTC_BypassShadowCmd
     /tmp/ccwiO5jN.s:769    .text.RTC_BypassShadowCmd:00000048 $d
     /tmp/ccwiO5jN.s:774    .text.RTC_SetTime:00000000 $t
     /tmp/ccwiO5jN.s:779    .text.RTC_SetTime:00000000 RTC_SetTime
     /tmp/ccwiO5jN.s:4508   .text.RTC_Bcd2ToByte:00000000 RTC_Bcd2ToByte
     /tmp/ccwiO5jN.s:4448   .text.RTC_ByteToBcd2:00000000 RTC_ByteToBcd2
     /tmp/ccwiO5jN.s:956    .text.RTC_SetTime:00000100 $d
     /tmp/ccwiO5jN.s:961    .text.RTC_TimeStructInit:00000000 $t
     /tmp/ccwiO5jN.s:966    .text.RTC_TimeStructInit:00000000 RTC_TimeStructInit
     /tmp/ccwiO5jN.s:1010   .text.RTC_GetTime:00000000 $t
     /tmp/ccwiO5jN.s:1015   .text.RTC_GetTime:00000000 RTC_GetTime
     /tmp/ccwiO5jN.s:1111   .text.RTC_GetTime:00000098 $d
     /tmp/ccwiO5jN.s:1116   .text.RTC_GetSubSecond:00000000 $t
     /tmp/ccwiO5jN.s:1121   .text.RTC_GetSubSecond:00000000 RTC_GetSubSecond
     /tmp/ccwiO5jN.s:1160   .text.RTC_GetSubSecond:00000024 $d
     /tmp/ccwiO5jN.s:1165   .text.RTC_SetDate:00000000 $t
     /tmp/ccwiO5jN.s:1170   .text.RTC_SetDate:00000000 RTC_SetDate
     /tmp/ccwiO5jN.s:1350   .text.RTC_SetDate:00000108 $d
     /tmp/ccwiO5jN.s:1355   .text.RTC_DateStructInit:00000000 $t
     /tmp/ccwiO5jN.s:1360   .text.RTC_DateStructInit:00000000 RTC_DateStructInit
     /tmp/ccwiO5jN.s:1404   .text.RTC_GetDate:00000000 $t
     /tmp/ccwiO5jN.s:1409   .text.RTC_GetDate:00000000 RTC_GetDate
     /tmp/ccwiO5jN.s:1510   .text.RTC_GetDate:000000a0 $d
     /tmp/ccwiO5jN.s:1515   .text.RTC_SetAlarm:00000000 $t
     /tmp/ccwiO5jN.s:1520   .text.RTC_SetAlarm:00000000 RTC_SetAlarm
     /tmp/ccwiO5jN.s:1732   .text.RTC_SetAlarm:00000134 $d
     /tmp/ccwiO5jN.s:1737   .text.RTC_AlarmStructInit:00000000 $t
     /tmp/ccwiO5jN.s:1742   .text.RTC_AlarmStructInit:00000000 RTC_AlarmStructInit
     /tmp/ccwiO5jN.s:1798   .text.RTC_GetAlarm:00000000 $t
     /tmp/ccwiO5jN.s:1803   .text.RTC_GetAlarm:00000000 RTC_GetAlarm
     /tmp/ccwiO5jN.s:1935   .text.RTC_GetAlarm:000000d4 $d
     /tmp/ccwiO5jN.s:1940   .text.RTC_AlarmCmd:00000000 $t
     /tmp/ccwiO5jN.s:1945   .text.RTC_AlarmCmd:00000000 RTC_AlarmCmd
     /tmp/ccwiO5jN.s:2059   .text.RTC_AlarmCmd:00000098 $d
     /tmp/ccwiO5jN.s:2064   .text.RTC_AlarmSubSecondConfig:00000000 $t
     /tmp/ccwiO5jN.s:2069   .text.RTC_AlarmSubSecondConfig:00000000 RTC_AlarmSubSecondConfig
     /tmp/ccwiO5jN.s:2133   .text.RTC_AlarmSubSecondConfig:0000004c $d
     /tmp/ccwiO5jN.s:2138   .text.RTC_GetAlarmSubSecond:00000000 $t
     /tmp/ccwiO5jN.s:2143   .text.RTC_GetAlarmSubSecond:00000000 RTC_GetAlarmSubSecond
     /tmp/ccwiO5jN.s:2193   .text.RTC_GetAlarmSubSecond:00000038 $d
     /tmp/ccwiO5jN.s:2198   .text.RTC_WakeUpClockConfig:00000000 $t
     /tmp/ccwiO5jN.s:2203   .text.RTC_WakeUpClockConfig:00000000 RTC_WakeUpClockConfig
     /tmp/ccwiO5jN.s:2255   .text.RTC_WakeUpClockConfig:0000003c $d
     /tmp/ccwiO5jN.s:2260   .text.RTC_SetWakeUpCounter:00000000 $t
     /tmp/ccwiO5jN.s:2265   .text.RTC_SetWakeUpCounter:00000000 RTC_SetWakeUpCounter
     /tmp/ccwiO5jN.s:2308   .text.RTC_SetWakeUpCounter:0000002c $d
     /tmp/ccwiO5jN.s:2313   .text.RTC_GetWakeUpCounter:00000000 $t
     /tmp/ccwiO5jN.s:2318   .text.RTC_GetWakeUpCounter:00000000 RTC_GetWakeUpCounter
     /tmp/ccwiO5jN.s:2345   .text.RTC_GetWakeUpCounter:00000014 $d
     /tmp/ccwiO5jN.s:2350   .text.RTC_WakeUpCmd:00000000 $t
     /tmp/ccwiO5jN.s:2355   .text.RTC_WakeUpCmd:00000000 RTC_WakeUpCmd
     /tmp/ccwiO5jN.s:2461   .text.RTC_WakeUpCmd:00000090 $d
     /tmp/ccwiO5jN.s:2466   .text.RTC_DayLightSavingConfig:00000000 $t
     /tmp/ccwiO5jN.s:2471   .text.RTC_DayLightSavingConfig:00000000 RTC_DayLightSavingConfig
     /tmp/ccwiO5jN.s:2526   .text.RTC_DayLightSavingConfig:00000044 $d
     /tmp/ccwiO5jN.s:2531   .text.RTC_GetStoreOperation:00000000 $t
     /tmp/ccwiO5jN.s:2536   .text.RTC_GetStoreOperation:00000000 RTC_GetStoreOperation
     /tmp/ccwiO5jN.s:2563   .text.RTC_GetStoreOperation:00000018 $d
     /tmp/ccwiO5jN.s:2568   .text.RTC_OutputConfig:00000000 $t
     /tmp/ccwiO5jN.s:2573   .text.RTC_OutputConfig:00000000 RTC_OutputConfig
     /tmp/ccwiO5jN.s:2628   .text.RTC_OutputConfig:00000044 $d
     /tmp/ccwiO5jN.s:2633   .text.RTC_CoarseCalibConfig:00000000 $t
     /tmp/ccwiO5jN.s:2638   .text.RTC_CoarseCalibConfig:00000000 RTC_CoarseCalibConfig
     /tmp/ccwiO5jN.s:2705   .text.RTC_CoarseCalibConfig:0000004c $d
     /tmp/ccwiO5jN.s:2710   .text.RTC_CoarseCalibCmd:00000000 $t
     /tmp/ccwiO5jN.s:2715   .text.RTC_CoarseCalibCmd:00000000 RTC_CoarseCalibCmd
     /tmp/ccwiO5jN.s:2795   .text.RTC_CoarseCalibCmd:00000064 $d
     /tmp/ccwiO5jN.s:2800   .text.RTC_CalibOutputCmd:00000000 $t
     /tmp/ccwiO5jN.s:2805   .text.RTC_CalibOutputCmd:00000000 RTC_CalibOutputCmd
     /tmp/ccwiO5jN.s:2864   .text.RTC_CalibOutputCmd:00000048 $d
     /tmp/ccwiO5jN.s:2869   .text.RTC_CalibOutputConfig:00000000 $t
     /tmp/ccwiO5jN.s:2874   .text.RTC_CalibOutputConfig:00000000 RTC_CalibOutputConfig
     /tmp/ccwiO5jN.s:2926   .text.RTC_CalibOutputConfig:0000003c $d
     /tmp/ccwiO5jN.s:2931   .text.RTC_SmoothCalibConfig:00000000 $t
     /tmp/ccwiO5jN.s:2936   .text.RTC_SmoothCalibConfig:00000000 RTC_SmoothCalibConfig
     /tmp/ccwiO5jN.s:3034   .text.RTC_SmoothCalibConfig:00000080 $d
     /tmp/ccwiO5jN.s:3039   .text.RTC_TimeStampCmd:00000000 $t
     /tmp/ccwiO5jN.s:3044   .text.RTC_TimeStampCmd:00000000 RTC_TimeStampCmd
     /tmp/ccwiO5jN.s:3116   .text.RTC_TimeStampCmd:0000005c $d
     /tmp/ccwiO5jN.s:3121   .text.RTC_GetTimeStamp:00000000 $t
     /tmp/ccwiO5jN.s:3126   .text.RTC_GetTimeStamp:00000000 RTC_GetTimeStamp
     /tmp/ccwiO5jN.s:3283   .text.RTC_GetTimeStamp:00000110 $d
     /tmp/ccwiO5jN.s:3288   .text.RTC_GetTimeStampSubSecond:00000000 $t
     /tmp/ccwiO5jN.s:3293   .text.RTC_GetTimeStampSubSecond:00000000 RTC_GetTimeStampSubSecond
     /tmp/ccwiO5jN.s:3319   .text.RTC_GetTimeStampSubSecond:00000014 $d
     /tmp/ccwiO5jN.s:3324   .text.RTC_TamperTriggerConfig:00000000 $t
     /tmp/ccwiO5jN.s:3329   .text.RTC_TamperTriggerConfig:00000000 RTC_TamperTriggerConfig
     /tmp/ccwiO5jN.s:3381   .text.RTC_TamperTriggerConfig:0000003c $d
     /tmp/ccwiO5jN.s:3386   .text.RTC_TamperCmd:00000000 $t
     /tmp/ccwiO5jN.s:3391   .text.RTC_TamperCmd:00000000 RTC_TamperCmd
     /tmp/ccwiO5jN.s:3442   .text.RTC_TamperCmd:00000038 $d
     /tmp/ccwiO5jN.s:3447   .text.RTC_TamperFilterConfig:00000000 $t
     /tmp/ccwiO5jN.s:3452   .text.RTC_TamperFilterConfig:00000000 RTC_TamperFilterConfig
     /tmp/ccwiO5jN.s:3492   .text.RTC_TamperFilterConfig:0000002c $d
     /tmp/ccwiO5jN.s:3497   .text.RTC_TamperSamplingFreqConfig:00000000 $t
     /tmp/ccwiO5jN.s:3502   .text.RTC_TamperSamplingFreqConfig:00000000 RTC_TamperSamplingFreqConfig
     /tmp/ccwiO5jN.s:3542   .text.RTC_TamperSamplingFreqConfig:0000002c $d
     /tmp/ccwiO5jN.s:3547   .text.RTC_TamperPinsPrechargeDuration:00000000 $t
     /tmp/ccwiO5jN.s:3552   .text.RTC_TamperPinsPrechargeDuration:00000000 RTC_TamperPinsPrechargeDuration
     /tmp/ccwiO5jN.s:3592   .text.RTC_TamperPinsPrechargeDuration:0000002c $d
     /tmp/ccwiO5jN.s:3597   .text.RTC_TimeStampOnTamperDetectionCmd:00000000 $t
     /tmp/ccwiO5jN.s:3602   .text.RTC_TimeStampOnTamperDetectionCmd:00000000 RTC_TimeStampOnTamperDetectionCmd
     /tmp/ccwiO5jN.s:3649   .text.RTC_TimeStampOnTamperDetectionCmd:00000034 $d
     /tmp/ccwiO5jN.s:3654   .text.RTC_TamperPullUpCmd:00000000 $t
     /tmp/ccwiO5jN.s:3659   .text.RTC_TamperPullUpCmd:00000000 RTC_TamperPullUpCmd
     /tmp/ccwiO5jN.s:3706   .text.RTC_TamperPullUpCmd:00000034 $d
     /tmp/ccwiO5jN.s:3711   .text.RTC_WriteBackupRegister:00000000 $t
     /tmp/ccwiO5jN.s:3716   .text.RTC_WriteBackupRegister:00000000 RTC_WriteBackupRegister
     /tmp/ccwiO5jN.s:3760   .text.RTC_WriteBackupRegister:0000002c $d
     /tmp/ccwiO5jN.s:3765   .text.RTC_ReadBackupRegister:00000000 $t
     /tmp/ccwiO5jN.s:3770   .text.RTC_ReadBackupRegister:00000000 RTC_ReadBackupRegister
     /tmp/ccwiO5jN.s:3813   .text.RTC_ReadBackupRegister:0000002c $d
     /tmp/ccwiO5jN.s:3818   .text.RTC_TamperPinSelection:00000000 $t
     /tmp/ccwiO5jN.s:3823   .text.RTC_TamperPinSelection:00000000 RTC_TamperPinSelection
     /tmp/ccwiO5jN.s:3863   .text.RTC_TamperPinSelection:0000002c $d
     /tmp/ccwiO5jN.s:3868   .text.RTC_TimeStampPinSelection:00000000 $t
     /tmp/ccwiO5jN.s:3873   .text.RTC_TimeStampPinSelection:00000000 RTC_TimeStampPinSelection
     /tmp/ccwiO5jN.s:3913   .text.RTC_TimeStampPinSelection:0000002c $d
     /tmp/ccwiO5jN.s:3918   .text.RTC_OutputTypeConfig:00000000 $t
     /tmp/ccwiO5jN.s:3923   .text.RTC_OutputTypeConfig:00000000 RTC_OutputTypeConfig
     /tmp/ccwiO5jN.s:3963   .text.RTC_OutputTypeConfig:0000002c $d
     /tmp/ccwiO5jN.s:3968   .text.RTC_SynchroShiftConfig:00000000 $t
     /tmp/ccwiO5jN.s:3973   .text.RTC_SynchroShiftConfig:00000000 RTC_SynchroShiftConfig
     /tmp/ccwiO5jN.s:4088   .text.RTC_SynchroShiftConfig:00000098 $d
     /tmp/ccwiO5jN.s:4093   .text.RTC_ITConfig:00000000 $t
     /tmp/ccwiO5jN.s:4098   .text.RTC_ITConfig:00000000 RTC_ITConfig
     /tmp/ccwiO5jN.s:4180   .text.RTC_ITConfig:00000074 $d
     /tmp/ccwiO5jN.s:4185   .text.RTC_GetFlagStatus:00000000 $t
     /tmp/ccwiO5jN.s:4190   .text.RTC_GetFlagStatus:00000000 RTC_GetFlagStatus
     /tmp/ccwiO5jN.s:4247   .text.RTC_GetFlagStatus:00000040 $d
     /tmp/ccwiO5jN.s:4252   .text.RTC_ClearFlag:00000000 $t
     /tmp/ccwiO5jN.s:4257   .text.RTC_ClearFlag:00000000 RTC_ClearFlag
     /tmp/ccwiO5jN.s:4295   .text.RTC_ClearFlag:0000002c $d
     /tmp/ccwiO5jN.s:4300   .text.RTC_GetITStatus:00000000 $t
     /tmp/ccwiO5jN.s:4305   .text.RTC_GetITStatus:00000000 RTC_GetITStatus
     /tmp/ccwiO5jN.s:4384   .text.RTC_GetITStatus:00000064 $d
     /tmp/ccwiO5jN.s:4389   .text.RTC_ClearITPendingBit:00000000 $t
     /tmp/ccwiO5jN.s:4394   .text.RTC_ClearITPendingBit:00000000 RTC_ClearITPendingBit
     /tmp/ccwiO5jN.s:4439   .text.RTC_ClearITPendingBit:00000034 $d
     /tmp/ccwiO5jN.s:4444   .text.RTC_ByteToBcd2:00000000 $t
     /tmp/ccwiO5jN.s:4504   .text.RTC_Bcd2ToByte:00000000 $t
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
