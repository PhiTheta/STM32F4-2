   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TIM_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	TIM_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	TIM_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  28              		.loc 1 195 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
  44              		.loc 1 199 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 5F4B     		ldr	r3, .L16
  47 000c 9A42     		cmp	r2, r3
  48 000e 08D1     		bne	.L2
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  49              		.loc 1 201 0
  50 0010 0120     		movs	r0, #1
  51 0012 0121     		movs	r1, #1
  52 0014 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  53              		.loc 1 202 0
  54 0018 0120     		movs	r0, #1
  55 001a 0021     		movs	r1, #0
  56 001c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  57 0020 AFE0     		b	.L1
  58              	.L2:
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
  59              		.loc 1 204 0
  60 0022 7B68     		ldr	r3, [r7, #4]
  61 0024 B3F1804F 		cmp	r3, #1073741824
  62 0028 08D1     		bne	.L4
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  63              		.loc 1 206 0
  64 002a 0120     		movs	r0, #1
  65 002c 0121     		movs	r1, #1
  66 002e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  67              		.loc 1 207 0
  68 0032 0120     		movs	r0, #1
  69 0034 0021     		movs	r1, #0
  70 0036 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  71 003a A2E0     		b	.L1
  72              	.L4:
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
  73              		.loc 1 209 0
  74 003c 7A68     		ldr	r2, [r7, #4]
  75 003e 534B     		ldr	r3, .L16+4
  76 0040 9A42     		cmp	r2, r3
  77 0042 08D1     		bne	.L5
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  78              		.loc 1 211 0
  79 0044 0220     		movs	r0, #2
  80 0046 0121     		movs	r1, #1
  81 0048 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  82              		.loc 1 212 0
  83 004c 0220     		movs	r0, #2
  84 004e 0021     		movs	r1, #0
  85 0050 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  86 0054 95E0     		b	.L1
  87              	.L5:
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
  88              		.loc 1 214 0
  89 0056 7A68     		ldr	r2, [r7, #4]
  90 0058 4D4B     		ldr	r3, .L16+8
  91 005a 9A42     		cmp	r2, r3
  92 005c 08D1     		bne	.L6
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  93              		.loc 1 216 0
  94 005e 0420     		movs	r0, #4
  95 0060 0121     		movs	r1, #1
  96 0062 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
  97              		.loc 1 217 0
  98 0066 0420     		movs	r0, #4
  99 0068 0021     		movs	r1, #0
 100 006a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 101 006e 88E0     		b	.L1
 102              	.L6:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 103              		.loc 1 219 0
 104 0070 7A68     		ldr	r2, [r7, #4]
 105 0072 484B     		ldr	r3, .L16+12
 106 0074 9A42     		cmp	r2, r3
 107 0076 08D1     		bne	.L7
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 108              		.loc 1 221 0
 109 0078 0820     		movs	r0, #8
 110 007a 0121     		movs	r1, #1
 111 007c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 112              		.loc 1 222 0
 113 0080 0820     		movs	r0, #8
 114 0082 0021     		movs	r1, #0
 115 0084 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 116 0088 7BE0     		b	.L1
 117              	.L7:
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 118              		.loc 1 224 0
 119 008a 7A68     		ldr	r2, [r7, #4]
 120 008c 424B     		ldr	r3, .L16+16
 121 008e 9A42     		cmp	r2, r3
 122 0090 08D1     		bne	.L8
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 123              		.loc 1 226 0
 124 0092 1020     		movs	r0, #16
 125 0094 0121     		movs	r1, #1
 126 0096 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 127              		.loc 1 227 0
 128 009a 1020     		movs	r0, #16
 129 009c 0021     		movs	r1, #0
 130 009e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 131 00a2 6EE0     		b	.L1
 132              	.L8:
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 133              		.loc 1 229 0
 134 00a4 7A68     		ldr	r2, [r7, #4]
 135 00a6 3D4B     		ldr	r3, .L16+20
 136 00a8 9A42     		cmp	r2, r3
 137 00aa 08D1     		bne	.L9
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 138              		.loc 1 231 0
 139 00ac 2020     		movs	r0, #32
 140 00ae 0121     		movs	r1, #1
 141 00b0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 142              		.loc 1 232 0
 143 00b4 2020     		movs	r0, #32
 144 00b6 0021     		movs	r1, #0
 145 00b8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 146 00bc 61E0     		b	.L1
 147              	.L9:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 148              		.loc 1 234 0
 149 00be 7A68     		ldr	r2, [r7, #4]
 150 00c0 374B     		ldr	r3, .L16+24
 151 00c2 9A42     		cmp	r2, r3
 152 00c4 08D1     		bne	.L10
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 153              		.loc 1 236 0
 154 00c6 0220     		movs	r0, #2
 155 00c8 0121     		movs	r1, #1
 156 00ca FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 157              		.loc 1 237 0
 158 00ce 0220     		movs	r0, #2
 159 00d0 0021     		movs	r1, #0
 160 00d2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 161 00d6 54E0     		b	.L1
 162              	.L10:
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 163              		.loc 1 239 0
 164 00d8 7A68     		ldr	r2, [r7, #4]
 165 00da 324B     		ldr	r3, .L16+28
 166 00dc 9A42     		cmp	r2, r3
 167 00de 0AD1     		bne	.L11
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 168              		.loc 1 241 0
 169 00e0 4FF48030 		mov	r0, #65536
 170 00e4 0121     		movs	r1, #1
 171 00e6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 172              		.loc 1 242 0
 173 00ea 4FF48030 		mov	r0, #65536
 174 00ee 0021     		movs	r1, #0
 175 00f0 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 176 00f4 45E0     		b	.L1
 177              	.L11:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 178              		.loc 1 244 0
 179 00f6 7A68     		ldr	r2, [r7, #4]
 180 00f8 2B4B     		ldr	r3, .L16+32
 181 00fa 9A42     		cmp	r2, r3
 182 00fc 0AD1     		bne	.L12
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 183              		.loc 1 246 0
 184 00fe 4FF40030 		mov	r0, #131072
 185 0102 0121     		movs	r1, #1
 186 0104 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 187              		.loc 1 247 0
 188 0108 4FF40030 		mov	r0, #131072
 189 010c 0021     		movs	r1, #0
 190 010e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 191 0112 36E0     		b	.L1
 192              	.L12:
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 193              		.loc 1 249 0
 194 0114 7A68     		ldr	r2, [r7, #4]
 195 0116 254B     		ldr	r3, .L16+36
 196 0118 9A42     		cmp	r2, r3
 197 011a 0AD1     		bne	.L13
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 198              		.loc 1 251 0
 199 011c 4FF48020 		mov	r0, #262144
 200 0120 0121     		movs	r1, #1
 201 0122 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 202              		.loc 1 252 0
 203 0126 4FF48020 		mov	r0, #262144
 204 012a 0021     		movs	r1, #0
 205 012c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 206 0130 27E0     		b	.L1
 207              	.L13:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 208              		.loc 1 254 0
 209 0132 7A68     		ldr	r2, [r7, #4]
 210 0134 1E4B     		ldr	r3, .L16+40
 211 0136 9A42     		cmp	r2, r3
 212 0138 08D1     		bne	.L14
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 213              		.loc 1 256 0
 214 013a 4020     		movs	r0, #64
 215 013c 0121     		movs	r1, #1
 216 013e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 217              		.loc 1 257 0
 218 0142 4020     		movs	r0, #64
 219 0144 0021     		movs	r1, #0
 220 0146 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 221 014a 1AE0     		b	.L1
 222              	.L14:
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 223              		.loc 1 259 0
 224 014c 7A68     		ldr	r2, [r7, #4]
 225 014e 194B     		ldr	r3, .L16+44
 226 0150 9A42     		cmp	r2, r3
 227 0152 08D1     		bne	.L15
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 228              		.loc 1 261 0
 229 0154 8020     		movs	r0, #128
 230 0156 0121     		movs	r1, #1
 231 0158 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 232              		.loc 1 262 0
 233 015c 8020     		movs	r0, #128
 234 015e 0021     		movs	r1, #0
 235 0160 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 236 0164 0DE0     		b	.L1
 237              	.L15:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 238              		.loc 1 266 0
 239 0166 7A68     		ldr	r2, [r7, #4]
 240 0168 134B     		ldr	r3, .L16+48
 241 016a 9A42     		cmp	r2, r3
 242 016c 09D1     		bne	.L1
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 243              		.loc 1 268 0
 244 016e 4FF48070 		mov	r0, #256
 245 0172 0121     		movs	r1, #1
 246 0174 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 247              		.loc 1 269 0
 248 0178 4FF48070 		mov	r0, #256
 249 017c 0021     		movs	r1, #0
 250 017e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 251              	.L1:
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 252              		.loc 1 272 0
 253 0182 0837     		adds	r7, r7, #8
 254 0184 BD46     		mov	sp, r7
 255              		@ sp needed
 256 0186 80BD     		pop	{r7, pc}
 257              	.L17:
 258              		.align	2
 259              	.L16:
 260 0188 00000140 		.word	1073807360
 261 018c 00040040 		.word	1073742848
 262 0190 00080040 		.word	1073743872
 263 0194 000C0040 		.word	1073744896
 264 0198 00100040 		.word	1073745920
 265 019c 00140040 		.word	1073746944
 266 01a0 00040140 		.word	1073808384
 267 01a4 00400140 		.word	1073823744
 268 01a8 00440140 		.word	1073824768
 269 01ac 00480140 		.word	1073825792
 270 01b0 00180040 		.word	1073747968
 271 01b4 001C0040 		.word	1073748992
 272 01b8 00200040 		.word	1073750016
 273              		.cfi_endproc
 274              	.LFE110:
 276              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 277              		.align	2
 278              		.global	TIM_TimeBaseInit
 279              		.thumb
 280              		.thumb_func
 282              	TIM_TimeBaseInit:
 283              	.LFB111:
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 284              		.loc 1 283 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 16
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 80B4     		push	{r7}
 290              	.LCFI3:
 291              		.cfi_def_cfa_offset 4
 292              		.cfi_offset 7, -4
 293 0002 85B0     		sub	sp, sp, #20
 294              	.LCFI4:
 295              		.cfi_def_cfa_offset 24
 296 0004 00AF     		add	r7, sp, #0
 297              	.LCFI5:
 298              		.cfi_def_cfa_register 7
 299 0006 7860     		str	r0, [r7, #4]
 300 0008 3960     		str	r1, [r7]
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 301              		.loc 1 284 0
 302 000a 0023     		movs	r3, #0
 303 000c FB81     		strh	r3, [r7, #14]	@ movhi
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 304              		.loc 1 291 0
 305 000e 7B68     		ldr	r3, [r7, #4]
 306 0010 1B88     		ldrh	r3, [r3]	@ movhi
 307 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 308              		.loc 1 293 0
 309 0014 7A68     		ldr	r2, [r7, #4]
 310 0016 284B     		ldr	r3, .L24
 311 0018 9A42     		cmp	r2, r3
 312 001a 13D0     		beq	.L19
 313              		.loc 1 293 0 is_stmt 0 discriminator 1
 314 001c 7A68     		ldr	r2, [r7, #4]
 315 001e 274B     		ldr	r3, .L24+4
 316 0020 9A42     		cmp	r2, r3
 317 0022 0FD0     		beq	.L19
 318 0024 7B68     		ldr	r3, [r7, #4]
 319 0026 B3F1804F 		cmp	r3, #1073741824
 320 002a 0BD0     		beq	.L19
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 321              		.loc 1 294 0 is_stmt 1
 322 002c 7A68     		ldr	r2, [r7, #4]
 323 002e 244B     		ldr	r3, .L24+8
 324 0030 9A42     		cmp	r2, r3
 325 0032 07D0     		beq	.L19
 326              		.loc 1 294 0 is_stmt 0 discriminator 1
 327 0034 7A68     		ldr	r2, [r7, #4]
 328 0036 234B     		ldr	r3, .L24+12
 329 0038 9A42     		cmp	r2, r3
 330 003a 03D0     		beq	.L19
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 331              		.loc 1 295 0 is_stmt 1
 332 003c 7A68     		ldr	r2, [r7, #4]
 333 003e 224B     		ldr	r3, .L24+16
 334 0040 9A42     		cmp	r2, r3
 335 0042 08D1     		bne	.L20
 336              	.L19:
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 337              		.loc 1 298 0
 338 0044 FB89     		ldrh	r3, [r7, #14]	@ movhi
 339 0046 23F07003 		bic	r3, r3, #112
 340 004a FB81     		strh	r3, [r7, #14]	@ movhi
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 341              		.loc 1 299 0
 342 004c 3B68     		ldr	r3, [r7]
 343 004e 5A88     		ldrh	r2, [r3, #2]
 344 0050 FB89     		ldrh	r3, [r7, #14]	@ movhi
 345 0052 1343     		orrs	r3, r3, r2
 346 0054 FB81     		strh	r3, [r7, #14]	@ movhi
 347              	.L20:
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 348              		.loc 1 302 0
 349 0056 7A68     		ldr	r2, [r7, #4]
 350 0058 1C4B     		ldr	r3, .L24+20
 351 005a 9A42     		cmp	r2, r3
 352 005c 0CD0     		beq	.L21
 353              		.loc 1 302 0 is_stmt 0 discriminator 1
 354 005e 7A68     		ldr	r2, [r7, #4]
 355 0060 1B4B     		ldr	r3, .L24+24
 356 0062 9A42     		cmp	r2, r3
 357 0064 08D0     		beq	.L21
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 358              		.loc 1 305 0 is_stmt 1
 359 0066 FB89     		ldrh	r3, [r7, #14]	@ movhi
 360 0068 23F44073 		bic	r3, r3, #768
 361 006c FB81     		strh	r3, [r7, #14]	@ movhi
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 362              		.loc 1 306 0
 363 006e 3B68     		ldr	r3, [r7]
 364 0070 1A89     		ldrh	r2, [r3, #8]
 365 0072 FB89     		ldrh	r3, [r7, #14]	@ movhi
 366 0074 1343     		orrs	r3, r3, r2
 367 0076 FB81     		strh	r3, [r7, #14]	@ movhi
 368              	.L21:
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 369              		.loc 1 309 0
 370 0078 7B68     		ldr	r3, [r7, #4]
 371 007a FA89     		ldrh	r2, [r7, #14]	@ movhi
 372 007c 1A80     		strh	r2, [r3]	@ movhi
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 373              		.loc 1 312 0
 374 007e 3B68     		ldr	r3, [r7]
 375 0080 5A68     		ldr	r2, [r3, #4]
 376 0082 7B68     		ldr	r3, [r7, #4]
 377 0084 DA62     		str	r2, [r3, #44]
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 378              		.loc 1 315 0
 379 0086 3B68     		ldr	r3, [r7]
 380 0088 1A88     		ldrh	r2, [r3]
 381 008a 7B68     		ldr	r3, [r7, #4]
 382 008c 1A85     		strh	r2, [r3, #40]	@ movhi
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 383              		.loc 1 317 0
 384 008e 7A68     		ldr	r2, [r7, #4]
 385 0090 094B     		ldr	r3, .L24
 386 0092 9A42     		cmp	r2, r3
 387 0094 03D0     		beq	.L22
 388              		.loc 1 317 0 is_stmt 0 discriminator 1
 389 0096 7A68     		ldr	r2, [r7, #4]
 390 0098 084B     		ldr	r3, .L24+4
 391 009a 9A42     		cmp	r2, r3
 392 009c 04D1     		bne	.L23
 393              	.L22:
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 394              		.loc 1 320 0 is_stmt 1
 395 009e 3B68     		ldr	r3, [r7]
 396 00a0 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 397 00a2 1A46     		mov	r2, r3
 398 00a4 7B68     		ldr	r3, [r7, #4]
 399 00a6 1A86     		strh	r2, [r3, #48]	@ movhi
 400              	.L23:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 401              		.loc 1 325 0
 402 00a8 7B68     		ldr	r3, [r7, #4]
 403 00aa 0122     		movs	r2, #1
 404 00ac 9A82     		strh	r2, [r3, #20]	@ movhi
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 405              		.loc 1 326 0
 406 00ae 1437     		adds	r7, r7, #20
 407 00b0 BD46     		mov	sp, r7
 408              		@ sp needed
 409 00b2 5DF8047B 		ldr	r7, [sp], #4
 410 00b6 7047     		bx	lr
 411              	.L25:
 412              		.align	2
 413              	.L24:
 414 00b8 00000140 		.word	1073807360
 415 00bc 00040140 		.word	1073808384
 416 00c0 00040040 		.word	1073742848
 417 00c4 00080040 		.word	1073743872
 418 00c8 000C0040 		.word	1073744896
 419 00cc 00100040 		.word	1073745920
 420 00d0 00140040 		.word	1073746944
 421              		.cfi_endproc
 422              	.LFE111:
 424              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 425              		.align	2
 426              		.global	TIM_TimeBaseStructInit
 427              		.thumb
 428              		.thumb_func
 430              	TIM_TimeBaseStructInit:
 431              	.LFB112:
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 432              		.loc 1 335 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 0000 80B4     		push	{r7}
 438              	.LCFI6:
 439              		.cfi_def_cfa_offset 4
 440              		.cfi_offset 7, -4
 441 0002 83B0     		sub	sp, sp, #12
 442              	.LCFI7:
 443              		.cfi_def_cfa_offset 16
 444 0004 00AF     		add	r7, sp, #0
 445              	.LCFI8:
 446              		.cfi_def_cfa_register 7
 447 0006 7860     		str	r0, [r7, #4]
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 448              		.loc 1 337 0
 449 0008 7B68     		ldr	r3, [r7, #4]
 450 000a 4FF0FF32 		mov	r2, #-1
 451 000e 5A60     		str	r2, [r3, #4]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 452              		.loc 1 338 0
 453 0010 7B68     		ldr	r3, [r7, #4]
 454 0012 0022     		movs	r2, #0
 455 0014 1A80     		strh	r2, [r3]	@ movhi
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 456              		.loc 1 339 0
 457 0016 7B68     		ldr	r3, [r7, #4]
 458 0018 0022     		movs	r2, #0
 459 001a 1A81     		strh	r2, [r3, #8]	@ movhi
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 460              		.loc 1 340 0
 461 001c 7B68     		ldr	r3, [r7, #4]
 462 001e 0022     		movs	r2, #0
 463 0020 5A80     		strh	r2, [r3, #2]	@ movhi
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 464              		.loc 1 341 0
 465 0022 7B68     		ldr	r3, [r7, #4]
 466 0024 0022     		movs	r2, #0
 467 0026 9A72     		strb	r2, [r3, #10]
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 468              		.loc 1 342 0
 469 0028 0C37     		adds	r7, r7, #12
 470 002a BD46     		mov	sp, r7
 471              		@ sp needed
 472 002c 5DF8047B 		ldr	r7, [sp], #4
 473 0030 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE112:
 477 0032 00BF     		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 478              		.align	2
 479              		.global	TIM_PrescalerConfig
 480              		.thumb
 481              		.thumb_func
 483              	TIM_PrescalerConfig:
 484              	.LFB113:
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 485              		.loc 1 355 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490 0000 80B4     		push	{r7}
 491              	.LCFI9:
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 7, -4
 494 0002 83B0     		sub	sp, sp, #12
 495              	.LCFI10:
 496              		.cfi_def_cfa_offset 16
 497 0004 00AF     		add	r7, sp, #0
 498              	.LCFI11:
 499              		.cfi_def_cfa_register 7
 500 0006 7860     		str	r0, [r7, #4]
 501 0008 1346     		mov	r3, r2
 502 000a 0A46     		mov	r2, r1	@ movhi
 503 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 504 000e 3B80     		strh	r3, [r7]	@ movhi
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 505              		.loc 1 360 0
 506 0010 7B68     		ldr	r3, [r7, #4]
 507 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
 508 0014 1A85     		strh	r2, [r3, #40]	@ movhi
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 509              		.loc 1 362 0
 510 0016 7B68     		ldr	r3, [r7, #4]
 511 0018 3A88     		ldrh	r2, [r7]	@ movhi
 512 001a 9A82     		strh	r2, [r3, #20]	@ movhi
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 513              		.loc 1 363 0
 514 001c 0C37     		adds	r7, r7, #12
 515 001e BD46     		mov	sp, r7
 516              		@ sp needed
 517 0020 5DF8047B 		ldr	r7, [sp], #4
 518 0024 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE113:
 522 0026 00BF     		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 523              		.align	2
 524              		.global	TIM_CounterModeConfig
 525              		.thumb
 526              		.thumb_func
 528              	TIM_CounterModeConfig:
 529              	.LFB114:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 530              		.loc 1 378 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 16
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0000 80B4     		push	{r7}
 536              	.LCFI12:
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 0002 85B0     		sub	sp, sp, #20
 540              	.LCFI13:
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              	.LCFI14:
 544              		.cfi_def_cfa_register 7
 545 0006 7860     		str	r0, [r7, #4]
 546 0008 0B46     		mov	r3, r1
 547 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 548              		.loc 1 379 0
 549 000c 0023     		movs	r3, #0
 550 000e FB81     		strh	r3, [r7, #14]	@ movhi
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 551              		.loc 1 385 0
 552 0010 7B68     		ldr	r3, [r7, #4]
 553 0012 1B88     		ldrh	r3, [r3]	@ movhi
 554 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 555              		.loc 1 388 0
 556 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 557 0018 23F07003 		bic	r3, r3, #112
 558 001c FB81     		strh	r3, [r7, #14]	@ movhi
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 559              		.loc 1 391 0
 560 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 561 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 562 0022 1343     		orrs	r3, r3, r2
 563 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 564              		.loc 1 394 0
 565 0026 7B68     		ldr	r3, [r7, #4]
 566 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 567 002a 1A80     		strh	r2, [r3]	@ movhi
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 568              		.loc 1 395 0
 569 002c 1437     		adds	r7, r7, #20
 570 002e BD46     		mov	sp, r7
 571              		@ sp needed
 572 0030 5DF8047B 		ldr	r7, [sp], #4
 573 0034 7047     		bx	lr
 574              		.cfi_endproc
 575              	.LFE114:
 577 0036 00BF     		.section	.text.TIM_SetCounter,"ax",%progbits
 578              		.align	2
 579              		.global	TIM_SetCounter
 580              		.thumb
 581              		.thumb_func
 583              	TIM_SetCounter:
 584              	.LFB115:
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 585              		.loc 1 404 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 8
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 590 0000 80B4     		push	{r7}
 591              	.LCFI15:
 592              		.cfi_def_cfa_offset 4
 593              		.cfi_offset 7, -4
 594 0002 83B0     		sub	sp, sp, #12
 595              	.LCFI16:
 596              		.cfi_def_cfa_offset 16
 597 0004 00AF     		add	r7, sp, #0
 598              	.LCFI17:
 599              		.cfi_def_cfa_register 7
 600 0006 7860     		str	r0, [r7, #4]
 601 0008 3960     		str	r1, [r7]
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 602              		.loc 1 409 0
 603 000a 7B68     		ldr	r3, [r7, #4]
 604 000c 3A68     		ldr	r2, [r7]
 605 000e 5A62     		str	r2, [r3, #36]
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 606              		.loc 1 410 0
 607 0010 0C37     		adds	r7, r7, #12
 608 0012 BD46     		mov	sp, r7
 609              		@ sp needed
 610 0014 5DF8047B 		ldr	r7, [sp], #4
 611 0018 7047     		bx	lr
 612              		.cfi_endproc
 613              	.LFE115:
 615 001a 00BF     		.section	.text.TIM_SetAutoreload,"ax",%progbits
 616              		.align	2
 617              		.global	TIM_SetAutoreload
 618              		.thumb
 619              		.thumb_func
 621              	TIM_SetAutoreload:
 622              	.LFB116:
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 623              		.loc 1 419 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 8
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              	.LCFI18:
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 0002 83B0     		sub	sp, sp, #12
 633              	.LCFI19:
 634              		.cfi_def_cfa_offset 16
 635 0004 00AF     		add	r7, sp, #0
 636              	.LCFI20:
 637              		.cfi_def_cfa_register 7
 638 0006 7860     		str	r0, [r7, #4]
 639 0008 3960     		str	r1, [r7]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 640              		.loc 1 424 0
 641 000a 7B68     		ldr	r3, [r7, #4]
 642 000c 3A68     		ldr	r2, [r7]
 643 000e DA62     		str	r2, [r3, #44]
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 644              		.loc 1 425 0
 645 0010 0C37     		adds	r7, r7, #12
 646 0012 BD46     		mov	sp, r7
 647              		@ sp needed
 648 0014 5DF8047B 		ldr	r7, [sp], #4
 649 0018 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE116:
 653 001a 00BF     		.section	.text.TIM_GetCounter,"ax",%progbits
 654              		.align	2
 655              		.global	TIM_GetCounter
 656              		.thumb
 657              		.thumb_func
 659              	TIM_GetCounter:
 660              	.LFB117:
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 661              		.loc 1 433 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 8
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666 0000 80B4     		push	{r7}
 667              	.LCFI21:
 668              		.cfi_def_cfa_offset 4
 669              		.cfi_offset 7, -4
 670 0002 83B0     		sub	sp, sp, #12
 671              	.LCFI22:
 672              		.cfi_def_cfa_offset 16
 673 0004 00AF     		add	r7, sp, #0
 674              	.LCFI23:
 675              		.cfi_def_cfa_register 7
 676 0006 7860     		str	r0, [r7, #4]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 677              		.loc 1 438 0
 678 0008 7B68     		ldr	r3, [r7, #4]
 679 000a 5B6A     		ldr	r3, [r3, #36]
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 680              		.loc 1 439 0
 681 000c 1846     		mov	r0, r3
 682 000e 0C37     		adds	r7, r7, #12
 683 0010 BD46     		mov	sp, r7
 684              		@ sp needed
 685 0012 5DF8047B 		ldr	r7, [sp], #4
 686 0016 7047     		bx	lr
 687              		.cfi_endproc
 688              	.LFE117:
 690              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 691              		.align	2
 692              		.global	TIM_GetPrescaler
 693              		.thumb
 694              		.thumb_func
 696              	TIM_GetPrescaler:
 697              	.LFB118:
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 698              		.loc 1 447 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 80B4     		push	{r7}
 704              	.LCFI24:
 705              		.cfi_def_cfa_offset 4
 706              		.cfi_offset 7, -4
 707 0002 83B0     		sub	sp, sp, #12
 708              	.LCFI25:
 709              		.cfi_def_cfa_offset 16
 710 0004 00AF     		add	r7, sp, #0
 711              	.LCFI26:
 712              		.cfi_def_cfa_register 7
 713 0006 7860     		str	r0, [r7, #4]
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 714              		.loc 1 452 0
 715 0008 7B68     		ldr	r3, [r7, #4]
 716 000a 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 717 000c 9BB2     		uxth	r3, r3
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 718              		.loc 1 453 0
 719 000e 1846     		mov	r0, r3
 720 0010 0C37     		adds	r7, r7, #12
 721 0012 BD46     		mov	sp, r7
 722              		@ sp needed
 723 0014 5DF8047B 		ldr	r7, [sp], #4
 724 0018 7047     		bx	lr
 725              		.cfi_endproc
 726              	.LFE118:
 728 001a 00BF     		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 729              		.align	2
 730              		.global	TIM_UpdateDisableConfig
 731              		.thumb
 732              		.thumb_func
 734              	TIM_UpdateDisableConfig:
 735              	.LFB119:
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 736              		.loc 1 463 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 8
 739              		@ frame_needed = 1, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 741 0000 80B4     		push	{r7}
 742              	.LCFI27:
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 83B0     		sub	sp, sp, #12
 746              	.LCFI28:
 747              		.cfi_def_cfa_offset 16
 748 0004 00AF     		add	r7, sp, #0
 749              	.LCFI29:
 750              		.cfi_def_cfa_register 7
 751 0006 7860     		str	r0, [r7, #4]
 752 0008 0B46     		mov	r3, r1
 753 000a FB70     		strb	r3, [r7, #3]
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 754              		.loc 1 468 0
 755 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 756 000e 002B     		cmp	r3, #0
 757 0010 08D0     		beq	.L36
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 758              		.loc 1 471 0
 759 0012 7B68     		ldr	r3, [r7, #4]
 760 0014 1B88     		ldrh	r3, [r3]	@ movhi
 761 0016 9BB2     		uxth	r3, r3
 762 0018 43F00203 		orr	r3, r3, #2
 763 001c 9AB2     		uxth	r2, r3
 764 001e 7B68     		ldr	r3, [r7, #4]
 765 0020 1A80     		strh	r2, [r3]	@ movhi
 766 0022 07E0     		b	.L35
 767              	.L36:
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 768              		.loc 1 476 0
 769 0024 7B68     		ldr	r3, [r7, #4]
 770 0026 1B88     		ldrh	r3, [r3]	@ movhi
 771 0028 9BB2     		uxth	r3, r3
 772 002a 23F00203 		bic	r3, r3, #2
 773 002e 9AB2     		uxth	r2, r3
 774 0030 7B68     		ldr	r3, [r7, #4]
 775 0032 1A80     		strh	r2, [r3]	@ movhi
 776              	.L35:
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 777              		.loc 1 478 0
 778 0034 0C37     		adds	r7, r7, #12
 779 0036 BD46     		mov	sp, r7
 780              		@ sp needed
 781 0038 5DF8047B 		ldr	r7, [sp], #4
 782 003c 7047     		bx	lr
 783              		.cfi_endproc
 784              	.LFE119:
 786 003e 00BF     		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 787              		.align	2
 788              		.global	TIM_UpdateRequestConfig
 789              		.thumb
 790              		.thumb_func
 792              	TIM_UpdateRequestConfig:
 793              	.LFB120:
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is the counter
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 794              		.loc 1 492 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 0000 80B4     		push	{r7}
 800              	.LCFI30:
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 0002 83B0     		sub	sp, sp, #12
 804              	.LCFI31:
 805              		.cfi_def_cfa_offset 16
 806 0004 00AF     		add	r7, sp, #0
 807              	.LCFI32:
 808              		.cfi_def_cfa_register 7
 809 0006 7860     		str	r0, [r7, #4]
 810 0008 0B46     		mov	r3, r1
 811 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 812              		.loc 1 497 0
 813 000c 7B88     		ldrh	r3, [r7, #2]
 814 000e 002B     		cmp	r3, #0
 815 0010 08D0     		beq	.L39
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 816              		.loc 1 500 0
 817 0012 7B68     		ldr	r3, [r7, #4]
 818 0014 1B88     		ldrh	r3, [r3]	@ movhi
 819 0016 9BB2     		uxth	r3, r3
 820 0018 43F00403 		orr	r3, r3, #4
 821 001c 9AB2     		uxth	r2, r3
 822 001e 7B68     		ldr	r3, [r7, #4]
 823 0020 1A80     		strh	r2, [r3]	@ movhi
 824 0022 07E0     		b	.L38
 825              	.L39:
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 826              		.loc 1 505 0
 827 0024 7B68     		ldr	r3, [r7, #4]
 828 0026 1B88     		ldrh	r3, [r3]	@ movhi
 829 0028 9BB2     		uxth	r3, r3
 830 002a 23F00403 		bic	r3, r3, #4
 831 002e 9AB2     		uxth	r2, r3
 832 0030 7B68     		ldr	r3, [r7, #4]
 833 0032 1A80     		strh	r2, [r3]	@ movhi
 834              	.L38:
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 835              		.loc 1 507 0
 836 0034 0C37     		adds	r7, r7, #12
 837 0036 BD46     		mov	sp, r7
 838              		@ sp needed
 839 0038 5DF8047B 		ldr	r7, [sp], #4
 840 003c 7047     		bx	lr
 841              		.cfi_endproc
 842              	.LFE120:
 844 003e 00BF     		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 845              		.align	2
 846              		.global	TIM_ARRPreloadConfig
 847              		.thumb
 848              		.thumb_func
 850              	TIM_ARRPreloadConfig:
 851              	.LFB121:
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 852              		.loc 1 517 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 8
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857 0000 80B4     		push	{r7}
 858              	.LCFI33:
 859              		.cfi_def_cfa_offset 4
 860              		.cfi_offset 7, -4
 861 0002 83B0     		sub	sp, sp, #12
 862              	.LCFI34:
 863              		.cfi_def_cfa_offset 16
 864 0004 00AF     		add	r7, sp, #0
 865              	.LCFI35:
 866              		.cfi_def_cfa_register 7
 867 0006 7860     		str	r0, [r7, #4]
 868 0008 0B46     		mov	r3, r1
 869 000a FB70     		strb	r3, [r7, #3]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 870              		.loc 1 522 0
 871 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 872 000e 002B     		cmp	r3, #0
 873 0010 08D0     		beq	.L42
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 874              		.loc 1 525 0
 875 0012 7B68     		ldr	r3, [r7, #4]
 876 0014 1B88     		ldrh	r3, [r3]	@ movhi
 877 0016 9BB2     		uxth	r3, r3
 878 0018 43F08003 		orr	r3, r3, #128
 879 001c 9AB2     		uxth	r2, r3
 880 001e 7B68     		ldr	r3, [r7, #4]
 881 0020 1A80     		strh	r2, [r3]	@ movhi
 882 0022 07E0     		b	.L41
 883              	.L42:
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 884              		.loc 1 530 0
 885 0024 7B68     		ldr	r3, [r7, #4]
 886 0026 1B88     		ldrh	r3, [r3]	@ movhi
 887 0028 9BB2     		uxth	r3, r3
 888 002a 23F08003 		bic	r3, r3, #128
 889 002e 9AB2     		uxth	r2, r3
 890 0030 7B68     		ldr	r3, [r7, #4]
 891 0032 1A80     		strh	r2, [r3]	@ movhi
 892              	.L41:
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 893              		.loc 1 532 0
 894 0034 0C37     		adds	r7, r7, #12
 895 0036 BD46     		mov	sp, r7
 896              		@ sp needed
 897 0038 5DF8047B 		ldr	r7, [sp], #4
 898 003c 7047     		bx	lr
 899              		.cfi_endproc
 900              	.LFE121:
 902 003e 00BF     		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 903              		.align	2
 904              		.global	TIM_SelectOnePulseMode
 905              		.thumb
 906              		.thumb_func
 908              	TIM_SelectOnePulseMode:
 909              	.LFB122:
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 910              		.loc 1 544 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 8
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915 0000 80B4     		push	{r7}
 916              	.LCFI36:
 917              		.cfi_def_cfa_offset 4
 918              		.cfi_offset 7, -4
 919 0002 83B0     		sub	sp, sp, #12
 920              	.LCFI37:
 921              		.cfi_def_cfa_offset 16
 922 0004 00AF     		add	r7, sp, #0
 923              	.LCFI38:
 924              		.cfi_def_cfa_register 7
 925 0006 7860     		str	r0, [r7, #4]
 926 0008 0B46     		mov	r3, r1
 927 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 928              		.loc 1 550 0
 929 000c 7B68     		ldr	r3, [r7, #4]
 930 000e 1B88     		ldrh	r3, [r3]	@ movhi
 931 0010 9BB2     		uxth	r3, r3
 932 0012 23F00803 		bic	r3, r3, #8
 933 0016 9AB2     		uxth	r2, r3
 934 0018 7B68     		ldr	r3, [r7, #4]
 935 001a 1A80     		strh	r2, [r3]	@ movhi
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 936              		.loc 1 553 0
 937 001c 7B68     		ldr	r3, [r7, #4]
 938 001e 1B88     		ldrh	r3, [r3]	@ movhi
 939 0020 9AB2     		uxth	r2, r3
 940 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 941 0024 1343     		orrs	r3, r3, r2
 942 0026 9AB2     		uxth	r2, r3
 943 0028 7B68     		ldr	r3, [r7, #4]
 944 002a 1A80     		strh	r2, [r3]	@ movhi
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 945              		.loc 1 554 0
 946 002c 0C37     		adds	r7, r7, #12
 947 002e BD46     		mov	sp, r7
 948              		@ sp needed
 949 0030 5DF8047B 		ldr	r7, [sp], #4
 950 0034 7047     		bx	lr
 951              		.cfi_endproc
 952              	.LFE122:
 954 0036 00BF     		.section	.text.TIM_SetClockDivision,"ax",%progbits
 955              		.align	2
 956              		.global	TIM_SetClockDivision
 957              		.thumb
 958              		.thumb_func
 960              	TIM_SetClockDivision:
 961              	.LFB123:
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 962              		.loc 1 567 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 8
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966              		@ link register save eliminated.
 967 0000 80B4     		push	{r7}
 968              	.LCFI39:
 969              		.cfi_def_cfa_offset 4
 970              		.cfi_offset 7, -4
 971 0002 83B0     		sub	sp, sp, #12
 972              	.LCFI40:
 973              		.cfi_def_cfa_offset 16
 974 0004 00AF     		add	r7, sp, #0
 975              	.LCFI41:
 976              		.cfi_def_cfa_register 7
 977 0006 7860     		str	r0, [r7, #4]
 978 0008 0B46     		mov	r3, r1
 979 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 980              		.loc 1 573 0
 981 000c 7B68     		ldr	r3, [r7, #4]
 982 000e 1B88     		ldrh	r3, [r3]	@ movhi
 983 0010 9BB2     		uxth	r3, r3
 984 0012 23F44073 		bic	r3, r3, #768
 985 0016 9AB2     		uxth	r2, r3
 986 0018 7B68     		ldr	r3, [r7, #4]
 987 001a 1A80     		strh	r2, [r3]	@ movhi
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 988              		.loc 1 576 0
 989 001c 7B68     		ldr	r3, [r7, #4]
 990 001e 1B88     		ldrh	r3, [r3]	@ movhi
 991 0020 9AB2     		uxth	r2, r3
 992 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 993 0024 1343     		orrs	r3, r3, r2
 994 0026 9AB2     		uxth	r2, r3
 995 0028 7B68     		ldr	r3, [r7, #4]
 996 002a 1A80     		strh	r2, [r3]	@ movhi
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 997              		.loc 1 577 0
 998 002c 0C37     		adds	r7, r7, #12
 999 002e BD46     		mov	sp, r7
 1000              		@ sp needed
 1001 0030 5DF8047B 		ldr	r7, [sp], #4
 1002 0034 7047     		bx	lr
 1003              		.cfi_endproc
 1004              	.LFE123:
 1006 0036 00BF     		.section	.text.TIM_Cmd,"ax",%progbits
 1007              		.align	2
 1008              		.global	TIM_Cmd
 1009              		.thumb
 1010              		.thumb_func
 1012              	TIM_Cmd:
 1013              	.LFB124:
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1014              		.loc 1 587 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 8
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 1019 0000 80B4     		push	{r7}
 1020              	.LCFI42:
 1021              		.cfi_def_cfa_offset 4
 1022              		.cfi_offset 7, -4
 1023 0002 83B0     		sub	sp, sp, #12
 1024              	.LCFI43:
 1025              		.cfi_def_cfa_offset 16
 1026 0004 00AF     		add	r7, sp, #0
 1027              	.LCFI44:
 1028              		.cfi_def_cfa_register 7
 1029 0006 7860     		str	r0, [r7, #4]
 1030 0008 0B46     		mov	r3, r1
 1031 000a FB70     		strb	r3, [r7, #3]
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 1032              		.loc 1 592 0
 1033 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1034 000e 002B     		cmp	r3, #0
 1035 0010 08D0     		beq	.L47
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1036              		.loc 1 595 0
 1037 0012 7B68     		ldr	r3, [r7, #4]
 1038 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1039 0016 9BB2     		uxth	r3, r3
 1040 0018 43F00103 		orr	r3, r3, #1
 1041 001c 9AB2     		uxth	r2, r3
 1042 001e 7B68     		ldr	r3, [r7, #4]
 1043 0020 1A80     		strh	r2, [r3]	@ movhi
 1044 0022 07E0     		b	.L46
 1045              	.L47:
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1046              		.loc 1 600 0
 1047 0024 7B68     		ldr	r3, [r7, #4]
 1048 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1049 0028 9BB2     		uxth	r3, r3
 1050 002a 23F00103 		bic	r3, r3, #1
 1051 002e 9AB2     		uxth	r2, r3
 1052 0030 7B68     		ldr	r3, [r7, #4]
 1053 0032 1A80     		strh	r2, [r3]	@ movhi
 1054              	.L46:
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1055              		.loc 1 602 0
 1056 0034 0C37     		adds	r7, r7, #12
 1057 0036 BD46     		mov	sp, r7
 1058              		@ sp needed
 1059 0038 5DF8047B 		ldr	r7, [sp], #4
 1060 003c 7047     		bx	lr
 1061              		.cfi_endproc
 1062              	.LFE124:
 1064 003e 00BF     		.section	.text.TIM_OC1Init,"ax",%progbits
 1065              		.align	2
 1066              		.global	TIM_OC1Init
 1067              		.thumb
 1068              		.thumb_func
 1070              	TIM_OC1Init:
 1071              	.LFB125:
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1072              		.loc 1 666 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 16
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077 0000 80B4     		push	{r7}
 1078              	.LCFI45:
 1079              		.cfi_def_cfa_offset 4
 1080              		.cfi_offset 7, -4
 1081 0002 85B0     		sub	sp, sp, #20
 1082              	.LCFI46:
 1083              		.cfi_def_cfa_offset 24
 1084 0004 00AF     		add	r7, sp, #0
 1085              	.LCFI47:
 1086              		.cfi_def_cfa_register 7
 1087 0006 7860     		str	r0, [r7, #4]
 1088 0008 3960     		str	r1, [r7]
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1089              		.loc 1 667 0
 1090 000a 0023     		movs	r3, #0
 1091 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 1092 000e 0023     		movs	r3, #0
 1093 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 1094 0012 0023     		movs	r3, #0
 1095 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 1096              		.loc 1 676 0
 1097 0016 7B68     		ldr	r3, [r7, #4]
 1098 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1099 001a 9BB2     		uxth	r3, r3
 1100 001c 23F00103 		bic	r3, r3, #1
 1101 0020 9AB2     		uxth	r2, r3
 1102 0022 7B68     		ldr	r3, [r7, #4]
 1103 0024 1A84     		strh	r2, [r3, #32]	@ movhi
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1104              		.loc 1 679 0
 1105 0026 7B68     		ldr	r3, [r7, #4]
 1106 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1107 002a FB81     		strh	r3, [r7, #14]	@ movhi
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1108              		.loc 1 681 0
 1109 002c 7B68     		ldr	r3, [r7, #4]
 1110 002e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1111 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1112              		.loc 1 684 0
 1113 0032 7B68     		ldr	r3, [r7, #4]
 1114 0034 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1115 0036 7B81     		strh	r3, [r7, #10]	@ movhi
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 1116              		.loc 1 687 0
 1117 0038 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1118 003a 23F07003 		bic	r3, r3, #112
 1119 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 1120              		.loc 1 688 0
 1121 0040 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1122 0042 23F00303 		bic	r3, r3, #3
 1123 0046 7B81     		strh	r3, [r7, #10]	@ movhi
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1124              		.loc 1 690 0
 1125 0048 3B68     		ldr	r3, [r7]
 1126 004a 1A88     		ldrh	r2, [r3]
 1127 004c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1128 004e 1343     		orrs	r3, r3, r2
 1129 0050 7B81     		strh	r3, [r7, #10]	@ movhi
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 1130              		.loc 1 693 0
 1131 0052 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1132 0054 23F00203 		bic	r3, r3, #2
 1133 0058 FB81     		strh	r3, [r7, #14]	@ movhi
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1134              		.loc 1 695 0
 1135 005a 3B68     		ldr	r3, [r7]
 1136 005c 9A89     		ldrh	r2, [r3, #12]
 1137 005e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1138 0060 1343     		orrs	r3, r3, r2
 1139 0062 FB81     		strh	r3, [r7, #14]	@ movhi
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1140              		.loc 1 698 0
 1141 0064 3B68     		ldr	r3, [r7]
 1142 0066 5A88     		ldrh	r2, [r3, #2]
 1143 0068 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1144 006a 1343     		orrs	r3, r3, r2
 1145 006c FB81     		strh	r3, [r7, #14]	@ movhi
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1146              		.loc 1 700 0
 1147 006e 7A68     		ldr	r2, [r7, #4]
 1148 0070 1E4B     		ldr	r3, .L52
 1149 0072 9A42     		cmp	r2, r3
 1150 0074 03D0     		beq	.L50
 1151              		.loc 1 700 0 is_stmt 0 discriminator 1
 1152 0076 7A68     		ldr	r2, [r7, #4]
 1153 0078 1D4B     		ldr	r3, .L52+4
 1154 007a 9A42     		cmp	r2, r3
 1155 007c 23D1     		bne	.L51
 1156              	.L50:
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 1157              		.loc 1 708 0 is_stmt 1
 1158 007e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1159 0080 23F00803 		bic	r3, r3, #8
 1160 0084 FB81     		strh	r3, [r7, #14]	@ movhi
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1161              		.loc 1 710 0
 1162 0086 3B68     		ldr	r3, [r7]
 1163 0088 DA89     		ldrh	r2, [r3, #14]
 1164 008a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1165 008c 1343     		orrs	r3, r3, r2
 1166 008e FB81     		strh	r3, [r7, #14]	@ movhi
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 1167              		.loc 1 712 0
 1168 0090 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1169 0092 23F00403 		bic	r3, r3, #4
 1170 0096 FB81     		strh	r3, [r7, #14]	@ movhi
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1171              		.loc 1 715 0
 1172 0098 3B68     		ldr	r3, [r7]
 1173 009a 9A88     		ldrh	r2, [r3, #4]
 1174 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1175 009e 1343     		orrs	r3, r3, r2
 1176 00a0 FB81     		strh	r3, [r7, #14]	@ movhi
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 1177              		.loc 1 717 0
 1178 00a2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1179 00a4 23F48073 		bic	r3, r3, #256
 1180 00a8 BB81     		strh	r3, [r7, #12]	@ movhi
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 1181              		.loc 1 718 0
 1182 00aa BB89     		ldrh	r3, [r7, #12]	@ movhi
 1183 00ac 23F40073 		bic	r3, r3, #512
 1184 00b0 BB81     		strh	r3, [r7, #12]	@ movhi
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1185              		.loc 1 720 0
 1186 00b2 3B68     		ldr	r3, [r7]
 1187 00b4 1A8A     		ldrh	r2, [r3, #16]
 1188 00b6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1189 00b8 1343     		orrs	r3, r3, r2
 1190 00ba BB81     		strh	r3, [r7, #12]	@ movhi
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1191              		.loc 1 722 0
 1192 00bc 3B68     		ldr	r3, [r7]
 1193 00be 5A8A     		ldrh	r2, [r3, #18]
 1194 00c0 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1195 00c2 1343     		orrs	r3, r3, r2
 1196 00c4 BB81     		strh	r3, [r7, #12]	@ movhi
 1197              	.L51:
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1198              		.loc 1 725 0
 1199 00c6 7B68     		ldr	r3, [r7, #4]
 1200 00c8 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1201 00ca 9A80     		strh	r2, [r3, #4]	@ movhi
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1202              		.loc 1 728 0
 1203 00cc 7B68     		ldr	r3, [r7, #4]
 1204 00ce 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1205 00d0 1A83     		strh	r2, [r3, #24]	@ movhi
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1206              		.loc 1 731 0
 1207 00d2 3B68     		ldr	r3, [r7]
 1208 00d4 9A68     		ldr	r2, [r3, #8]
 1209 00d6 7B68     		ldr	r3, [r7, #4]
 1210 00d8 5A63     		str	r2, [r3, #52]
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1211              		.loc 1 734 0
 1212 00da 7B68     		ldr	r3, [r7, #4]
 1213 00dc FA89     		ldrh	r2, [r7, #14]	@ movhi
 1214 00de 1A84     		strh	r2, [r3, #32]	@ movhi
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1215              		.loc 1 735 0
 1216 00e0 1437     		adds	r7, r7, #20
 1217 00e2 BD46     		mov	sp, r7
 1218              		@ sp needed
 1219 00e4 5DF8047B 		ldr	r7, [sp], #4
 1220 00e8 7047     		bx	lr
 1221              	.L53:
 1222 00ea 00BF     		.align	2
 1223              	.L52:
 1224 00ec 00000140 		.word	1073807360
 1225 00f0 00040140 		.word	1073808384
 1226              		.cfi_endproc
 1227              	.LFE125:
 1229              		.section	.text.TIM_OC2Init,"ax",%progbits
 1230              		.align	2
 1231              		.global	TIM_OC2Init
 1232              		.thumb
 1233              		.thumb_func
 1235              	TIM_OC2Init:
 1236              	.LFB126:
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1237              		.loc 1 747 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 16
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 1242 0000 80B4     		push	{r7}
 1243              	.LCFI48:
 1244              		.cfi_def_cfa_offset 4
 1245              		.cfi_offset 7, -4
 1246 0002 85B0     		sub	sp, sp, #20
 1247              	.LCFI49:
 1248              		.cfi_def_cfa_offset 24
 1249 0004 00AF     		add	r7, sp, #0
 1250              	.LCFI50:
 1251              		.cfi_def_cfa_register 7
 1252 0006 7860     		str	r0, [r7, #4]
 1253 0008 3960     		str	r1, [r7]
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1254              		.loc 1 748 0
 1255 000a 0023     		movs	r3, #0
 1256 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 1257 000e 0023     		movs	r3, #0
 1258 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 1259 0012 0023     		movs	r3, #0
 1260 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1261              		.loc 1 757 0
 1262 0016 7B68     		ldr	r3, [r7, #4]
 1263 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1264 001a 9BB2     		uxth	r3, r3
 1265 001c 23F01003 		bic	r3, r3, #16
 1266 0020 9AB2     		uxth	r2, r3
 1267 0022 7B68     		ldr	r3, [r7, #4]
 1268 0024 1A84     		strh	r2, [r3, #32]	@ movhi
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1269              		.loc 1 760 0
 1270 0026 7B68     		ldr	r3, [r7, #4]
 1271 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1272 002a FB81     		strh	r3, [r7, #14]	@ movhi
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1273              		.loc 1 762 0
 1274 002c 7B68     		ldr	r3, [r7, #4]
 1275 002e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1276 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1277              		.loc 1 765 0
 1278 0032 7B68     		ldr	r3, [r7, #4]
 1279 0034 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1280 0036 7B81     		strh	r3, [r7, #10]	@ movhi
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 1281              		.loc 1 768 0
 1282 0038 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1283 003a 23F4E043 		bic	r3, r3, #28672
 1284 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1285              		.loc 1 769 0
 1286 0040 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1287 0042 23F44073 		bic	r3, r3, #768
 1288 0046 7B81     		strh	r3, [r7, #10]	@ movhi
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1289              		.loc 1 772 0
 1290 0048 3B68     		ldr	r3, [r7]
 1291 004a 1B88     		ldrh	r3, [r3]
 1292 004c 1B02     		lsls	r3, r3, #8
 1293 004e 9AB2     		uxth	r2, r3
 1294 0050 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1295 0052 1343     		orrs	r3, r3, r2
 1296 0054 7B81     		strh	r3, [r7, #10]	@ movhi
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1297              		.loc 1 775 0
 1298 0056 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1299 0058 23F02003 		bic	r3, r3, #32
 1300 005c FB81     		strh	r3, [r7, #14]	@ movhi
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1301              		.loc 1 777 0
 1302 005e 3B68     		ldr	r3, [r7]
 1303 0060 9B89     		ldrh	r3, [r3, #12]
 1304 0062 1B01     		lsls	r3, r3, #4
 1305 0064 9AB2     		uxth	r2, r3
 1306 0066 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1307 0068 1343     		orrs	r3, r3, r2
 1308 006a FB81     		strh	r3, [r7, #14]	@ movhi
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1309              		.loc 1 780 0
 1310 006c 3B68     		ldr	r3, [r7]
 1311 006e 5B88     		ldrh	r3, [r3, #2]
 1312 0070 1B01     		lsls	r3, r3, #4
 1313 0072 9AB2     		uxth	r2, r3
 1314 0074 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1315 0076 1343     		orrs	r3, r3, r2
 1316 0078 FB81     		strh	r3, [r7, #14]	@ movhi
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1317              		.loc 1 782 0
 1318 007a 7A68     		ldr	r2, [r7, #4]
 1319 007c 224B     		ldr	r3, .L57
 1320 007e 9A42     		cmp	r2, r3
 1321 0080 03D0     		beq	.L55
 1322              		.loc 1 782 0 is_stmt 0 discriminator 1
 1323 0082 7A68     		ldr	r2, [r7, #4]
 1324 0084 214B     		ldr	r3, .L57+4
 1325 0086 9A42     		cmp	r2, r3
 1326 0088 2BD1     		bne	.L56
 1327              	.L55:
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1328              		.loc 1 790 0 is_stmt 1
 1329 008a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1330 008c 23F08003 		bic	r3, r3, #128
 1331 0090 FB81     		strh	r3, [r7, #14]	@ movhi
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1332              		.loc 1 792 0
 1333 0092 3B68     		ldr	r3, [r7]
 1334 0094 DB89     		ldrh	r3, [r3, #14]
 1335 0096 1B01     		lsls	r3, r3, #4
 1336 0098 9AB2     		uxth	r2, r3
 1337 009a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1338 009c 1343     		orrs	r3, r3, r2
 1339 009e FB81     		strh	r3, [r7, #14]	@ movhi
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1340              		.loc 1 794 0
 1341 00a0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1342 00a2 23F04003 		bic	r3, r3, #64
 1343 00a6 FB81     		strh	r3, [r7, #14]	@ movhi
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1344              		.loc 1 797 0
 1345 00a8 3B68     		ldr	r3, [r7]
 1346 00aa 9B88     		ldrh	r3, [r3, #4]
 1347 00ac 1B01     		lsls	r3, r3, #4
 1348 00ae 9AB2     		uxth	r2, r3
 1349 00b0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1350 00b2 1343     		orrs	r3, r3, r2
 1351 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 1352              		.loc 1 799 0
 1353 00b6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1354 00b8 23F48063 		bic	r3, r3, #1024
 1355 00bc BB81     		strh	r3, [r7, #12]	@ movhi
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1356              		.loc 1 800 0
 1357 00be BB89     		ldrh	r3, [r7, #12]	@ movhi
 1358 00c0 23F40063 		bic	r3, r3, #2048
 1359 00c4 BB81     		strh	r3, [r7, #12]	@ movhi
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1360              		.loc 1 802 0
 1361 00c6 3B68     		ldr	r3, [r7]
 1362 00c8 1B8A     		ldrh	r3, [r3, #16]
 1363 00ca 9B00     		lsls	r3, r3, #2
 1364 00cc 9AB2     		uxth	r2, r3
 1365 00ce BB89     		ldrh	r3, [r7, #12]	@ movhi
 1366 00d0 1343     		orrs	r3, r3, r2
 1367 00d2 BB81     		strh	r3, [r7, #12]	@ movhi
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1368              		.loc 1 804 0
 1369 00d4 3B68     		ldr	r3, [r7]
 1370 00d6 5B8A     		ldrh	r3, [r3, #18]
 1371 00d8 9B00     		lsls	r3, r3, #2
 1372 00da 9AB2     		uxth	r2, r3
 1373 00dc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1374 00de 1343     		orrs	r3, r3, r2
 1375 00e0 BB81     		strh	r3, [r7, #12]	@ movhi
 1376              	.L56:
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1377              		.loc 1 807 0
 1378 00e2 7B68     		ldr	r3, [r7, #4]
 1379 00e4 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1380 00e6 9A80     		strh	r2, [r3, #4]	@ movhi
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1381              		.loc 1 810 0
 1382 00e8 7B68     		ldr	r3, [r7, #4]
 1383 00ea 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1384 00ec 1A83     		strh	r2, [r3, #24]	@ movhi
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1385              		.loc 1 813 0
 1386 00ee 3B68     		ldr	r3, [r7]
 1387 00f0 9A68     		ldr	r2, [r3, #8]
 1388 00f2 7B68     		ldr	r3, [r7, #4]
 1389 00f4 9A63     		str	r2, [r3, #56]
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1390              		.loc 1 816 0
 1391 00f6 7B68     		ldr	r3, [r7, #4]
 1392 00f8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1393 00fa 1A84     		strh	r2, [r3, #32]	@ movhi
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1394              		.loc 1 817 0
 1395 00fc 1437     		adds	r7, r7, #20
 1396 00fe BD46     		mov	sp, r7
 1397              		@ sp needed
 1398 0100 5DF8047B 		ldr	r7, [sp], #4
 1399 0104 7047     		bx	lr
 1400              	.L58:
 1401 0106 00BF     		.align	2
 1402              	.L57:
 1403 0108 00000140 		.word	1073807360
 1404 010c 00040140 		.word	1073808384
 1405              		.cfi_endproc
 1406              	.LFE126:
 1408              		.section	.text.TIM_OC3Init,"ax",%progbits
 1409              		.align	2
 1410              		.global	TIM_OC3Init
 1411              		.thumb
 1412              		.thumb_func
 1414              	TIM_OC3Init:
 1415              	.LFB127:
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1416              		.loc 1 828 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 16
 1419              		@ frame_needed = 1, uses_anonymous_args = 0
 1420              		@ link register save eliminated.
 1421 0000 80B4     		push	{r7}
 1422              	.LCFI51:
 1423              		.cfi_def_cfa_offset 4
 1424              		.cfi_offset 7, -4
 1425 0002 85B0     		sub	sp, sp, #20
 1426              	.LCFI52:
 1427              		.cfi_def_cfa_offset 24
 1428 0004 00AF     		add	r7, sp, #0
 1429              	.LCFI53:
 1430              		.cfi_def_cfa_register 7
 1431 0006 7860     		str	r0, [r7, #4]
 1432 0008 3960     		str	r1, [r7]
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1433              		.loc 1 829 0
 1434 000a 0023     		movs	r3, #0
 1435 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 1436 000e 0023     		movs	r3, #0
 1437 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 1438 0012 0023     		movs	r3, #0
 1439 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1440              		.loc 1 838 0
 1441 0016 7B68     		ldr	r3, [r7, #4]
 1442 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1443 001a 9BB2     		uxth	r3, r3
 1444 001c 23F48073 		bic	r3, r3, #256
 1445 0020 9AB2     		uxth	r2, r3
 1446 0022 7B68     		ldr	r3, [r7, #4]
 1447 0024 1A84     		strh	r2, [r3, #32]	@ movhi
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1448              		.loc 1 841 0
 1449 0026 7B68     		ldr	r3, [r7, #4]
 1450 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1451 002a FB81     		strh	r3, [r7, #14]	@ movhi
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1452              		.loc 1 843 0
 1453 002c 7B68     		ldr	r3, [r7, #4]
 1454 002e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1455 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1456              		.loc 1 846 0
 1457 0032 7B68     		ldr	r3, [r7, #4]
 1458 0034 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1459 0036 7B81     		strh	r3, [r7, #10]	@ movhi
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 1460              		.loc 1 849 0
 1461 0038 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1462 003a 23F07003 		bic	r3, r3, #112
 1463 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1464              		.loc 1 850 0
 1465 0040 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1466 0042 23F00303 		bic	r3, r3, #3
 1467 0046 7B81     		strh	r3, [r7, #10]	@ movhi
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1468              		.loc 1 852 0
 1469 0048 3B68     		ldr	r3, [r7]
 1470 004a 1A88     		ldrh	r2, [r3]
 1471 004c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1472 004e 1343     		orrs	r3, r3, r2
 1473 0050 7B81     		strh	r3, [r7, #10]	@ movhi
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1474              		.loc 1 855 0
 1475 0052 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1476 0054 23F40073 		bic	r3, r3, #512
 1477 0058 FB81     		strh	r3, [r7, #14]	@ movhi
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1478              		.loc 1 857 0
 1479 005a 3B68     		ldr	r3, [r7]
 1480 005c 9B89     		ldrh	r3, [r3, #12]
 1481 005e 1B02     		lsls	r3, r3, #8
 1482 0060 9AB2     		uxth	r2, r3
 1483 0062 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1484 0064 1343     		orrs	r3, r3, r2
 1485 0066 FB81     		strh	r3, [r7, #14]	@ movhi
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1486              		.loc 1 860 0
 1487 0068 3B68     		ldr	r3, [r7]
 1488 006a 5B88     		ldrh	r3, [r3, #2]
 1489 006c 1B02     		lsls	r3, r3, #8
 1490 006e 9AB2     		uxth	r2, r3
 1491 0070 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1492 0072 1343     		orrs	r3, r3, r2
 1493 0074 FB81     		strh	r3, [r7, #14]	@ movhi
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1494              		.loc 1 862 0
 1495 0076 7A68     		ldr	r2, [r7, #4]
 1496 0078 224B     		ldr	r3, .L62
 1497 007a 9A42     		cmp	r2, r3
 1498 007c 03D0     		beq	.L60
 1499              		.loc 1 862 0 is_stmt 0 discriminator 1
 1500 007e 7A68     		ldr	r2, [r7, #4]
 1501 0080 214B     		ldr	r3, .L62+4
 1502 0082 9A42     		cmp	r2, r3
 1503 0084 2BD1     		bne	.L61
 1504              	.L60:
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1505              		.loc 1 870 0 is_stmt 1
 1506 0086 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1507 0088 23F40063 		bic	r3, r3, #2048
 1508 008c FB81     		strh	r3, [r7, #14]	@ movhi
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1509              		.loc 1 872 0
 1510 008e 3B68     		ldr	r3, [r7]
 1511 0090 DB89     		ldrh	r3, [r3, #14]
 1512 0092 1B02     		lsls	r3, r3, #8
 1513 0094 9AB2     		uxth	r2, r3
 1514 0096 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1515 0098 1343     		orrs	r3, r3, r2
 1516 009a FB81     		strh	r3, [r7, #14]	@ movhi
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1517              		.loc 1 874 0
 1518 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1519 009e 23F48063 		bic	r3, r3, #1024
 1520 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1521              		.loc 1 877 0
 1522 00a4 3B68     		ldr	r3, [r7]
 1523 00a6 9B88     		ldrh	r3, [r3, #4]
 1524 00a8 1B02     		lsls	r3, r3, #8
 1525 00aa 9AB2     		uxth	r2, r3
 1526 00ac FB89     		ldrh	r3, [r7, #14]	@ movhi
 1527 00ae 1343     		orrs	r3, r3, r2
 1528 00b0 FB81     		strh	r3, [r7, #14]	@ movhi
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 1529              		.loc 1 879 0
 1530 00b2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1531 00b4 23F48053 		bic	r3, r3, #4096
 1532 00b8 BB81     		strh	r3, [r7, #12]	@ movhi
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1533              		.loc 1 880 0
 1534 00ba BB89     		ldrh	r3, [r7, #12]	@ movhi
 1535 00bc 23F40053 		bic	r3, r3, #8192
 1536 00c0 BB81     		strh	r3, [r7, #12]	@ movhi
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1537              		.loc 1 882 0
 1538 00c2 3B68     		ldr	r3, [r7]
 1539 00c4 1B8A     		ldrh	r3, [r3, #16]
 1540 00c6 1B01     		lsls	r3, r3, #4
 1541 00c8 9AB2     		uxth	r2, r3
 1542 00ca BB89     		ldrh	r3, [r7, #12]	@ movhi
 1543 00cc 1343     		orrs	r3, r3, r2
 1544 00ce BB81     		strh	r3, [r7, #12]	@ movhi
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1545              		.loc 1 884 0
 1546 00d0 3B68     		ldr	r3, [r7]
 1547 00d2 5B8A     		ldrh	r3, [r3, #18]
 1548 00d4 1B01     		lsls	r3, r3, #4
 1549 00d6 9AB2     		uxth	r2, r3
 1550 00d8 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1551 00da 1343     		orrs	r3, r3, r2
 1552 00dc BB81     		strh	r3, [r7, #12]	@ movhi
 1553              	.L61:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1554              		.loc 1 887 0
 1555 00de 7B68     		ldr	r3, [r7, #4]
 1556 00e0 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1557 00e2 9A80     		strh	r2, [r3, #4]	@ movhi
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1558              		.loc 1 890 0
 1559 00e4 7B68     		ldr	r3, [r7, #4]
 1560 00e6 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1561 00e8 9A83     		strh	r2, [r3, #28]	@ movhi
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1562              		.loc 1 893 0
 1563 00ea 3B68     		ldr	r3, [r7]
 1564 00ec 9A68     		ldr	r2, [r3, #8]
 1565 00ee 7B68     		ldr	r3, [r7, #4]
 1566 00f0 DA63     		str	r2, [r3, #60]
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1567              		.loc 1 896 0
 1568 00f2 7B68     		ldr	r3, [r7, #4]
 1569 00f4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1570 00f6 1A84     		strh	r2, [r3, #32]	@ movhi
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1571              		.loc 1 897 0
 1572 00f8 1437     		adds	r7, r7, #20
 1573 00fa BD46     		mov	sp, r7
 1574              		@ sp needed
 1575 00fc 5DF8047B 		ldr	r7, [sp], #4
 1576 0100 7047     		bx	lr
 1577              	.L63:
 1578 0102 00BF     		.align	2
 1579              	.L62:
 1580 0104 00000140 		.word	1073807360
 1581 0108 00040140 		.word	1073808384
 1582              		.cfi_endproc
 1583              	.LFE127:
 1585              		.section	.text.TIM_OC4Init,"ax",%progbits
 1586              		.align	2
 1587              		.global	TIM_OC4Init
 1588              		.thumb
 1589              		.thumb_func
 1591              	TIM_OC4Init:
 1592              	.LFB128:
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1593              		.loc 1 908 0
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 16
 1596              		@ frame_needed = 1, uses_anonymous_args = 0
 1597              		@ link register save eliminated.
 1598 0000 80B4     		push	{r7}
 1599              	.LCFI54:
 1600              		.cfi_def_cfa_offset 4
 1601              		.cfi_offset 7, -4
 1602 0002 85B0     		sub	sp, sp, #20
 1603              	.LCFI55:
 1604              		.cfi_def_cfa_offset 24
 1605 0004 00AF     		add	r7, sp, #0
 1606              	.LCFI56:
 1607              		.cfi_def_cfa_register 7
 1608 0006 7860     		str	r0, [r7, #4]
 1609 0008 3960     		str	r1, [r7]
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1610              		.loc 1 909 0
 1611 000a 0023     		movs	r3, #0
 1612 000c BB81     		strh	r3, [r7, #12]	@ movhi
 1613 000e 0023     		movs	r3, #0
 1614 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1615 0012 0023     		movs	r3, #0
 1616 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1617              		.loc 1 918 0
 1618 0016 7B68     		ldr	r3, [r7, #4]
 1619 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1620 001a 9BB2     		uxth	r3, r3
 1621 001c 23F48053 		bic	r3, r3, #4096
 1622 0020 9AB2     		uxth	r2, r3
 1623 0022 7B68     		ldr	r3, [r7, #4]
 1624 0024 1A84     		strh	r2, [r3, #32]	@ movhi
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1625              		.loc 1 921 0
 1626 0026 7B68     		ldr	r3, [r7, #4]
 1627 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1628 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1629              		.loc 1 923 0
 1630 002c 7B68     		ldr	r3, [r7, #4]
 1631 002e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1632 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1633              		.loc 1 926 0
 1634 0032 7B68     		ldr	r3, [r7, #4]
 1635 0034 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1636 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 1637              		.loc 1 929 0
 1638 0038 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1639 003a 23F4E043 		bic	r3, r3, #28672
 1640 003e BB81     		strh	r3, [r7, #12]	@ movhi
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1641              		.loc 1 930 0
 1642 0040 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1643 0042 23F44073 		bic	r3, r3, #768
 1644 0046 BB81     		strh	r3, [r7, #12]	@ movhi
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1645              		.loc 1 933 0
 1646 0048 3B68     		ldr	r3, [r7]
 1647 004a 1B88     		ldrh	r3, [r3]
 1648 004c 1B02     		lsls	r3, r3, #8
 1649 004e 9AB2     		uxth	r2, r3
 1650 0050 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1651 0052 1343     		orrs	r3, r3, r2
 1652 0054 BB81     		strh	r3, [r7, #12]	@ movhi
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1653              		.loc 1 936 0
 1654 0056 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1655 0058 23F40053 		bic	r3, r3, #8192
 1656 005c 7B81     		strh	r3, [r7, #10]	@ movhi
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1657              		.loc 1 938 0
 1658 005e 3B68     		ldr	r3, [r7]
 1659 0060 9B89     		ldrh	r3, [r3, #12]
 1660 0062 1B03     		lsls	r3, r3, #12
 1661 0064 9AB2     		uxth	r2, r3
 1662 0066 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1663 0068 1343     		orrs	r3, r3, r2
 1664 006a 7B81     		strh	r3, [r7, #10]	@ movhi
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1665              		.loc 1 941 0
 1666 006c 3B68     		ldr	r3, [r7]
 1667 006e 5B88     		ldrh	r3, [r3, #2]
 1668 0070 1B03     		lsls	r3, r3, #12
 1669 0072 9AB2     		uxth	r2, r3
 1670 0074 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1671 0076 1343     		orrs	r3, r3, r2
 1672 0078 7B81     		strh	r3, [r7, #10]	@ movhi
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1673              		.loc 1 943 0
 1674 007a 7A68     		ldr	r2, [r7, #4]
 1675 007c 114B     		ldr	r3, .L67
 1676 007e 9A42     		cmp	r2, r3
 1677 0080 03D0     		beq	.L65
 1678              		.loc 1 943 0 is_stmt 0 discriminator 1
 1679 0082 7A68     		ldr	r2, [r7, #4]
 1680 0084 104B     		ldr	r3, .L67+4
 1681 0086 9A42     		cmp	r2, r3
 1682 0088 0AD1     		bne	.L66
 1683              	.L65:
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1684              		.loc 1 947 0 is_stmt 1
 1685 008a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1686 008c 23F48043 		bic	r3, r3, #16384
 1687 0090 FB81     		strh	r3, [r7, #14]	@ movhi
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1688              		.loc 1 949 0
 1689 0092 3B68     		ldr	r3, [r7]
 1690 0094 1B8A     		ldrh	r3, [r3, #16]
 1691 0096 9B01     		lsls	r3, r3, #6
 1692 0098 9AB2     		uxth	r2, r3
 1693 009a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1694 009c 1343     		orrs	r3, r3, r2
 1695 009e FB81     		strh	r3, [r7, #14]	@ movhi
 1696              	.L66:
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1697              		.loc 1 952 0
 1698 00a0 7B68     		ldr	r3, [r7, #4]
 1699 00a2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1700 00a4 9A80     		strh	r2, [r3, #4]	@ movhi
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1701              		.loc 1 955 0
 1702 00a6 7B68     		ldr	r3, [r7, #4]
 1703 00a8 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1704 00aa 9A83     		strh	r2, [r3, #28]	@ movhi
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1705              		.loc 1 958 0
 1706 00ac 3B68     		ldr	r3, [r7]
 1707 00ae 9A68     		ldr	r2, [r3, #8]
 1708 00b0 7B68     		ldr	r3, [r7, #4]
 1709 00b2 1A64     		str	r2, [r3, #64]
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1710              		.loc 1 961 0
 1711 00b4 7B68     		ldr	r3, [r7, #4]
 1712 00b6 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1713 00b8 1A84     		strh	r2, [r3, #32]	@ movhi
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1714              		.loc 1 962 0
 1715 00ba 1437     		adds	r7, r7, #20
 1716 00bc BD46     		mov	sp, r7
 1717              		@ sp needed
 1718 00be 5DF8047B 		ldr	r7, [sp], #4
 1719 00c2 7047     		bx	lr
 1720              	.L68:
 1721              		.align	2
 1722              	.L67:
 1723 00c4 00000140 		.word	1073807360
 1724 00c8 00040140 		.word	1073808384
 1725              		.cfi_endproc
 1726              	.LFE128:
 1728              		.section	.text.TIM_OCStructInit,"ax",%progbits
 1729              		.align	2
 1730              		.global	TIM_OCStructInit
 1731              		.thumb
 1732              		.thumb_func
 1734              	TIM_OCStructInit:
 1735              	.LFB129:
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1736              		.loc 1 971 0
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 8
 1739              		@ frame_needed = 1, uses_anonymous_args = 0
 1740              		@ link register save eliminated.
 1741 0000 80B4     		push	{r7}
 1742              	.LCFI57:
 1743              		.cfi_def_cfa_offset 4
 1744              		.cfi_offset 7, -4
 1745 0002 83B0     		sub	sp, sp, #12
 1746              	.LCFI58:
 1747              		.cfi_def_cfa_offset 16
 1748 0004 00AF     		add	r7, sp, #0
 1749              	.LCFI59:
 1750              		.cfi_def_cfa_register 7
 1751 0006 7860     		str	r0, [r7, #4]
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1752              		.loc 1 973 0
 1753 0008 7B68     		ldr	r3, [r7, #4]
 1754 000a 0022     		movs	r2, #0
 1755 000c 1A80     		strh	r2, [r3]	@ movhi
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1756              		.loc 1 974 0
 1757 000e 7B68     		ldr	r3, [r7, #4]
 1758 0010 0022     		movs	r2, #0
 1759 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1760              		.loc 1 975 0
 1761 0014 7B68     		ldr	r3, [r7, #4]
 1762 0016 0022     		movs	r2, #0
 1763 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1764              		.loc 1 976 0
 1765 001a 7B68     		ldr	r3, [r7, #4]
 1766 001c 0022     		movs	r2, #0
 1767 001e 9A60     		str	r2, [r3, #8]
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1768              		.loc 1 977 0
 1769 0020 7B68     		ldr	r3, [r7, #4]
 1770 0022 0022     		movs	r2, #0
 1771 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1772              		.loc 1 978 0
 1773 0026 7B68     		ldr	r3, [r7, #4]
 1774 0028 0022     		movs	r2, #0
 1775 002a DA81     		strh	r2, [r3, #14]	@ movhi
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1776              		.loc 1 979 0
 1777 002c 7B68     		ldr	r3, [r7, #4]
 1778 002e 0022     		movs	r2, #0
 1779 0030 1A82     		strh	r2, [r3, #16]	@ movhi
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1780              		.loc 1 980 0
 1781 0032 7B68     		ldr	r3, [r7, #4]
 1782 0034 0022     		movs	r2, #0
 1783 0036 5A82     		strh	r2, [r3, #18]	@ movhi
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1784              		.loc 1 981 0
 1785 0038 0C37     		adds	r7, r7, #12
 1786 003a BD46     		mov	sp, r7
 1787              		@ sp needed
 1788 003c 5DF8047B 		ldr	r7, [sp], #4
 1789 0040 7047     		bx	lr
 1790              		.cfi_endproc
 1791              	.LFE129:
 1793 0042 00BF     		.section	.text.TIM_SelectOCxM,"ax",%progbits
 1794              		.align	2
 1795              		.global	TIM_SelectOCxM
 1796              		.thumb
 1797              		.thumb_func
 1799              	TIM_SelectOCxM:
 1800              	.LFB130:
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1801              		.loc 1 1007 0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 16
 1804              		@ frame_needed = 1, uses_anonymous_args = 0
 1805              		@ link register save eliminated.
 1806 0000 80B4     		push	{r7}
 1807              	.LCFI60:
 1808              		.cfi_def_cfa_offset 4
 1809              		.cfi_offset 7, -4
 1810 0002 85B0     		sub	sp, sp, #20
 1811              	.LCFI61:
 1812              		.cfi_def_cfa_offset 24
 1813 0004 00AF     		add	r7, sp, #0
 1814              	.LCFI62:
 1815              		.cfi_def_cfa_register 7
 1816 0006 7860     		str	r0, [r7, #4]
 1817 0008 1346     		mov	r3, r2
 1818 000a 0A46     		mov	r2, r1	@ movhi
 1819 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1820 000e 3B80     		strh	r3, [r7]	@ movhi
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 1821              		.loc 1 1008 0
 1822 0010 0023     		movs	r3, #0
 1823 0012 FB60     		str	r3, [r7, #12]
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
 1824              		.loc 1 1009 0
 1825 0014 0023     		movs	r3, #0
 1826 0016 7B81     		strh	r3, [r7, #10]	@ movhi
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
 1827              		.loc 1 1016 0
 1828 0018 7B68     		ldr	r3, [r7, #4]
 1829 001a FB60     		str	r3, [r7, #12]
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 1830              		.loc 1 1017 0
 1831 001c FB68     		ldr	r3, [r7, #12]
 1832 001e 1833     		adds	r3, r3, #24
 1833 0020 FB60     		str	r3, [r7, #12]
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1834              		.loc 1 1019 0
 1835 0022 7B88     		ldrh	r3, [r7, #2]
 1836 0024 0122     		movs	r2, #1
 1837 0026 02FA03F3 		lsl	r3, r2, r3
 1838 002a 7B81     		strh	r3, [r7, #10]	@ movhi
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1839              		.loc 1 1022 0
 1840 002c 7B68     		ldr	r3, [r7, #4]
 1841 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1842 0030 9AB2     		uxth	r2, r3
 1843 0032 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1844 0034 DB43     		mvns	r3, r3
 1845 0036 9BB2     		uxth	r3, r3
 1846 0038 1340     		ands	r3, r3, r2
 1847 003a 9AB2     		uxth	r2, r3
 1848 003c 7B68     		ldr	r3, [r7, #4]
 1849 003e 1A84     		strh	r2, [r3, #32]	@ movhi
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1850              		.loc 1 1024 0
 1851 0040 7B88     		ldrh	r3, [r7, #2]
 1852 0042 002B     		cmp	r3, #0
 1853 0044 02D0     		beq	.L71
 1854              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1855 0046 7B88     		ldrh	r3, [r7, #2]
 1856 0048 082B     		cmp	r3, #8
 1857 004a 13D1     		bne	.L72
 1858              	.L71:
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 1859              		.loc 1 1026 0 is_stmt 1
 1860 004c 7B88     		ldrh	r3, [r7, #2]
 1861 004e 5B08     		lsrs	r3, r3, #1
 1862 0050 9BB2     		uxth	r3, r3
 1863 0052 FA68     		ldr	r2, [r7, #12]
 1864 0054 1344     		add	r3, r3, r2
 1865 0056 FB60     		str	r3, [r7, #12]
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1866              		.loc 1 1029 0
 1867 0058 FA68     		ldr	r2, [r7, #12]
 1868 005a FB68     		ldr	r3, [r7, #12]
 1869 005c 1968     		ldr	r1, [r3]
 1870 005e 4FF68F73 		movw	r3, #65423
 1871 0062 0B40     		ands	r3, r3, r1
 1872 0064 1360     		str	r3, [r2]
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1873              		.loc 1 1032 0
 1874 0066 FB68     		ldr	r3, [r7, #12]
 1875 0068 FA68     		ldr	r2, [r7, #12]
 1876 006a 1168     		ldr	r1, [r2]
 1877 006c 3A88     		ldrh	r2, [r7]
 1878 006e 0A43     		orrs	r2, r2, r1
 1879 0070 1A60     		str	r2, [r3]
 1880 0072 16E0     		b	.L70
 1881              	.L72:
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1882              		.loc 1 1036 0
 1883 0074 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1884 0076 043B     		subs	r3, r3, #4
 1885 0078 9BB2     		uxth	r3, r3
 1886 007a 5B08     		lsrs	r3, r3, #1
 1887 007c 9BB2     		uxth	r3, r3
 1888 007e FA68     		ldr	r2, [r7, #12]
 1889 0080 1344     		add	r3, r3, r2
 1890 0082 FB60     		str	r3, [r7, #12]
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1891              		.loc 1 1039 0
 1892 0084 FA68     		ldr	r2, [r7, #12]
 1893 0086 FB68     		ldr	r3, [r7, #12]
 1894 0088 1968     		ldr	r1, [r3]
 1895 008a 48F6FF73 		movw	r3, #36863
 1896 008e 0B40     		ands	r3, r3, r1
 1897 0090 1360     		str	r3, [r2]
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1898              		.loc 1 1042 0
 1899 0092 FB68     		ldr	r3, [r7, #12]
 1900 0094 FA68     		ldr	r2, [r7, #12]
 1901 0096 1168     		ldr	r1, [r2]
 1902 0098 3A88     		ldrh	r2, [r7]	@ movhi
 1903 009a 1202     		lsls	r2, r2, #8
 1904 009c 92B2     		uxth	r2, r2
 1905 009e 0A43     		orrs	r2, r2, r1
 1906 00a0 1A60     		str	r2, [r3]
 1907              	.L70:
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1908              		.loc 1 1044 0
 1909 00a2 1437     		adds	r7, r7, #20
 1910 00a4 BD46     		mov	sp, r7
 1911              		@ sp needed
 1912 00a6 5DF8047B 		ldr	r7, [sp], #4
 1913 00aa 7047     		bx	lr
 1914              		.cfi_endproc
 1915              	.LFE130:
 1917              		.section	.text.TIM_SetCompare1,"ax",%progbits
 1918              		.align	2
 1919              		.global	TIM_SetCompare1
 1920              		.thumb
 1921              		.thumb_func
 1923              	TIM_SetCompare1:
 1924              	.LFB131:
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1925              		.loc 1 1053 0
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 8
 1928              		@ frame_needed = 1, uses_anonymous_args = 0
 1929              		@ link register save eliminated.
 1930 0000 80B4     		push	{r7}
 1931              	.LCFI63:
 1932              		.cfi_def_cfa_offset 4
 1933              		.cfi_offset 7, -4
 1934 0002 83B0     		sub	sp, sp, #12
 1935              	.LCFI64:
 1936              		.cfi_def_cfa_offset 16
 1937 0004 00AF     		add	r7, sp, #0
 1938              	.LCFI65:
 1939              		.cfi_def_cfa_register 7
 1940 0006 7860     		str	r0, [r7, #4]
 1941 0008 3960     		str	r1, [r7]
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 1942              		.loc 1 1058 0
 1943 000a 7B68     		ldr	r3, [r7, #4]
 1944 000c 3A68     		ldr	r2, [r7]
 1945 000e 5A63     		str	r2, [r3, #52]
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1946              		.loc 1 1059 0
 1947 0010 0C37     		adds	r7, r7, #12
 1948 0012 BD46     		mov	sp, r7
 1949              		@ sp needed
 1950 0014 5DF8047B 		ldr	r7, [sp], #4
 1951 0018 7047     		bx	lr
 1952              		.cfi_endproc
 1953              	.LFE131:
 1955 001a 00BF     		.section	.text.TIM_SetCompare2,"ax",%progbits
 1956              		.align	2
 1957              		.global	TIM_SetCompare2
 1958              		.thumb
 1959              		.thumb_func
 1961              	TIM_SetCompare2:
 1962              	.LFB132:
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1963              		.loc 1 1069 0
 1964              		.cfi_startproc
 1965              		@ args = 0, pretend = 0, frame = 8
 1966              		@ frame_needed = 1, uses_anonymous_args = 0
 1967              		@ link register save eliminated.
 1968 0000 80B4     		push	{r7}
 1969              	.LCFI66:
 1970              		.cfi_def_cfa_offset 4
 1971              		.cfi_offset 7, -4
 1972 0002 83B0     		sub	sp, sp, #12
 1973              	.LCFI67:
 1974              		.cfi_def_cfa_offset 16
 1975 0004 00AF     		add	r7, sp, #0
 1976              	.LCFI68:
 1977              		.cfi_def_cfa_register 7
 1978 0006 7860     		str	r0, [r7, #4]
 1979 0008 3960     		str	r1, [r7]
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 1980              		.loc 1 1074 0
 1981 000a 7B68     		ldr	r3, [r7, #4]
 1982 000c 3A68     		ldr	r2, [r7]
 1983 000e 9A63     		str	r2, [r3, #56]
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1984              		.loc 1 1075 0
 1985 0010 0C37     		adds	r7, r7, #12
 1986 0012 BD46     		mov	sp, r7
 1987              		@ sp needed
 1988 0014 5DF8047B 		ldr	r7, [sp], #4
 1989 0018 7047     		bx	lr
 1990              		.cfi_endproc
 1991              	.LFE132:
 1993 001a 00BF     		.section	.text.TIM_SetCompare3,"ax",%progbits
 1994              		.align	2
 1995              		.global	TIM_SetCompare3
 1996              		.thumb
 1997              		.thumb_func
 1999              	TIM_SetCompare3:
 2000              	.LFB133:
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2001              		.loc 1 1084 0
 2002              		.cfi_startproc
 2003              		@ args = 0, pretend = 0, frame = 8
 2004              		@ frame_needed = 1, uses_anonymous_args = 0
 2005              		@ link register save eliminated.
 2006 0000 80B4     		push	{r7}
 2007              	.LCFI69:
 2008              		.cfi_def_cfa_offset 4
 2009              		.cfi_offset 7, -4
 2010 0002 83B0     		sub	sp, sp, #12
 2011              	.LCFI70:
 2012              		.cfi_def_cfa_offset 16
 2013 0004 00AF     		add	r7, sp, #0
 2014              	.LCFI71:
 2015              		.cfi_def_cfa_register 7
 2016 0006 7860     		str	r0, [r7, #4]
 2017 0008 3960     		str	r1, [r7]
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 2018              		.loc 1 1089 0
 2019 000a 7B68     		ldr	r3, [r7, #4]
 2020 000c 3A68     		ldr	r2, [r7]
 2021 000e DA63     		str	r2, [r3, #60]
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2022              		.loc 1 1090 0
 2023 0010 0C37     		adds	r7, r7, #12
 2024 0012 BD46     		mov	sp, r7
 2025              		@ sp needed
 2026 0014 5DF8047B 		ldr	r7, [sp], #4
 2027 0018 7047     		bx	lr
 2028              		.cfi_endproc
 2029              	.LFE133:
 2031 001a 00BF     		.section	.text.TIM_SetCompare4,"ax",%progbits
 2032              		.align	2
 2033              		.global	TIM_SetCompare4
 2034              		.thumb
 2035              		.thumb_func
 2037              	TIM_SetCompare4:
 2038              	.LFB134:
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2039              		.loc 1 1099 0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 8
 2042              		@ frame_needed = 1, uses_anonymous_args = 0
 2043              		@ link register save eliminated.
 2044 0000 80B4     		push	{r7}
 2045              	.LCFI72:
 2046              		.cfi_def_cfa_offset 4
 2047              		.cfi_offset 7, -4
 2048 0002 83B0     		sub	sp, sp, #12
 2049              	.LCFI73:
 2050              		.cfi_def_cfa_offset 16
 2051 0004 00AF     		add	r7, sp, #0
 2052              	.LCFI74:
 2053              		.cfi_def_cfa_register 7
 2054 0006 7860     		str	r0, [r7, #4]
 2055 0008 3960     		str	r1, [r7]
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 2056              		.loc 1 1104 0
 2057 000a 7B68     		ldr	r3, [r7, #4]
 2058 000c 3A68     		ldr	r2, [r7]
 2059 000e 1A64     		str	r2, [r3, #64]
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2060              		.loc 1 1105 0
 2061 0010 0C37     		adds	r7, r7, #12
 2062 0012 BD46     		mov	sp, r7
 2063              		@ sp needed
 2064 0014 5DF8047B 		ldr	r7, [sp], #4
 2065 0018 7047     		bx	lr
 2066              		.cfi_endproc
 2067              	.LFE134:
 2069 001a 00BF     		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 2070              		.align	2
 2071              		.global	TIM_ForcedOC1Config
 2072              		.thumb
 2073              		.thumb_func
 2075              	TIM_ForcedOC1Config:
 2076              	.LFB135:
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2077              		.loc 1 1117 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 16
 2080              		@ frame_needed = 1, uses_anonymous_args = 0
 2081              		@ link register save eliminated.
 2082 0000 80B4     		push	{r7}
 2083              	.LCFI75:
 2084              		.cfi_def_cfa_offset 4
 2085              		.cfi_offset 7, -4
 2086 0002 85B0     		sub	sp, sp, #20
 2087              	.LCFI76:
 2088              		.cfi_def_cfa_offset 24
 2089 0004 00AF     		add	r7, sp, #0
 2090              	.LCFI77:
 2091              		.cfi_def_cfa_register 7
 2092 0006 7860     		str	r0, [r7, #4]
 2093 0008 0B46     		mov	r3, r1
 2094 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2095              		.loc 1 1118 0
 2096 000c 0023     		movs	r3, #0
 2097 000e FB81     		strh	r3, [r7, #14]	@ movhi
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2098              		.loc 1 1123 0
 2099 0010 7B68     		ldr	r3, [r7, #4]
 2100 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2101 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 2102              		.loc 1 1126 0
 2103 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2104 0018 23F07003 		bic	r3, r3, #112
 2105 001c FB81     		strh	r3, [r7, #14]	@ movhi
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 2106              		.loc 1 1129 0
 2107 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2108 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2109 0022 1343     		orrs	r3, r3, r2
 2110 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2111              		.loc 1 1132 0
 2112 0026 7B68     		ldr	r3, [r7, #4]
 2113 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2114 002a 1A83     		strh	r2, [r3, #24]	@ movhi
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2115              		.loc 1 1133 0
 2116 002c 1437     		adds	r7, r7, #20
 2117 002e BD46     		mov	sp, r7
 2118              		@ sp needed
 2119 0030 5DF8047B 		ldr	r7, [sp], #4
 2120 0034 7047     		bx	lr
 2121              		.cfi_endproc
 2122              	.LFE135:
 2124 0036 00BF     		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 2125              		.align	2
 2126              		.global	TIM_ForcedOC2Config
 2127              		.thumb
 2128              		.thumb_func
 2130              	TIM_ForcedOC2Config:
 2131              	.LFB136:
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2132              		.loc 1 1146 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 16
 2135              		@ frame_needed = 1, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
 2137 0000 80B4     		push	{r7}
 2138              	.LCFI78:
 2139              		.cfi_def_cfa_offset 4
 2140              		.cfi_offset 7, -4
 2141 0002 85B0     		sub	sp, sp, #20
 2142              	.LCFI79:
 2143              		.cfi_def_cfa_offset 24
 2144 0004 00AF     		add	r7, sp, #0
 2145              	.LCFI80:
 2146              		.cfi_def_cfa_register 7
 2147 0006 7860     		str	r0, [r7, #4]
 2148 0008 0B46     		mov	r3, r1
 2149 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2150              		.loc 1 1147 0
 2151 000c 0023     		movs	r3, #0
 2152 000e FB81     		strh	r3, [r7, #14]	@ movhi
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2153              		.loc 1 1152 0
 2154 0010 7B68     		ldr	r3, [r7, #4]
 2155 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2156 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 2157              		.loc 1 1155 0
 2158 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2159 0018 23F4E043 		bic	r3, r3, #28672
 2160 001c FB81     		strh	r3, [r7, #14]	@ movhi
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 2161              		.loc 1 1158 0
 2162 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2163 0020 1B02     		lsls	r3, r3, #8
 2164 0022 9AB2     		uxth	r2, r3
 2165 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2166 0026 1343     		orrs	r3, r3, r2
 2167 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2168              		.loc 1 1161 0
 2169 002a 7B68     		ldr	r3, [r7, #4]
 2170 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2171 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2172              		.loc 1 1162 0
 2173 0030 1437     		adds	r7, r7, #20
 2174 0032 BD46     		mov	sp, r7
 2175              		@ sp needed
 2176 0034 5DF8047B 		ldr	r7, [sp], #4
 2177 0038 7047     		bx	lr
 2178              		.cfi_endproc
 2179              	.LFE136:
 2181 003a 00BF     		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 2182              		.align	2
 2183              		.global	TIM_ForcedOC3Config
 2184              		.thumb
 2185              		.thumb_func
 2187              	TIM_ForcedOC3Config:
 2188              	.LFB137:
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2189              		.loc 1 1174 0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 16
 2192              		@ frame_needed = 1, uses_anonymous_args = 0
 2193              		@ link register save eliminated.
 2194 0000 80B4     		push	{r7}
 2195              	.LCFI81:
 2196              		.cfi_def_cfa_offset 4
 2197              		.cfi_offset 7, -4
 2198 0002 85B0     		sub	sp, sp, #20
 2199              	.LCFI82:
 2200              		.cfi_def_cfa_offset 24
 2201 0004 00AF     		add	r7, sp, #0
 2202              	.LCFI83:
 2203              		.cfi_def_cfa_register 7
 2204 0006 7860     		str	r0, [r7, #4]
 2205 0008 0B46     		mov	r3, r1
 2206 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2207              		.loc 1 1175 0
 2208 000c 0023     		movs	r3, #0
 2209 000e FB81     		strh	r3, [r7, #14]	@ movhi
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2210              		.loc 1 1181 0
 2211 0010 7B68     		ldr	r3, [r7, #4]
 2212 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2213 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 2214              		.loc 1 1184 0
 2215 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2216 0018 23F07003 		bic	r3, r3, #112
 2217 001c FB81     		strh	r3, [r7, #14]	@ movhi
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 2218              		.loc 1 1187 0
 2219 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2220 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2221 0022 1343     		orrs	r3, r3, r2
 2222 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2223              		.loc 1 1190 0
 2224 0026 7B68     		ldr	r3, [r7, #4]
 2225 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2226 002a 9A83     		strh	r2, [r3, #28]	@ movhi
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2227              		.loc 1 1191 0
 2228 002c 1437     		adds	r7, r7, #20
 2229 002e BD46     		mov	sp, r7
 2230              		@ sp needed
 2231 0030 5DF8047B 		ldr	r7, [sp], #4
 2232 0034 7047     		bx	lr
 2233              		.cfi_endproc
 2234              	.LFE137:
 2236 0036 00BF     		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 2237              		.align	2
 2238              		.global	TIM_ForcedOC4Config
 2239              		.thumb
 2240              		.thumb_func
 2242              	TIM_ForcedOC4Config:
 2243              	.LFB138:
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2244              		.loc 1 1203 0
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 16
 2247              		@ frame_needed = 1, uses_anonymous_args = 0
 2248              		@ link register save eliminated.
 2249 0000 80B4     		push	{r7}
 2250              	.LCFI84:
 2251              		.cfi_def_cfa_offset 4
 2252              		.cfi_offset 7, -4
 2253 0002 85B0     		sub	sp, sp, #20
 2254              	.LCFI85:
 2255              		.cfi_def_cfa_offset 24
 2256 0004 00AF     		add	r7, sp, #0
 2257              	.LCFI86:
 2258              		.cfi_def_cfa_register 7
 2259 0006 7860     		str	r0, [r7, #4]
 2260 0008 0B46     		mov	r3, r1
 2261 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2262              		.loc 1 1204 0
 2263 000c 0023     		movs	r3, #0
 2264 000e FB81     		strh	r3, [r7, #14]	@ movhi
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2265              		.loc 1 1209 0
 2266 0010 7B68     		ldr	r3, [r7, #4]
 2267 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2268 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 2269              		.loc 1 1212 0
 2270 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2271 0018 23F4E043 		bic	r3, r3, #28672
 2272 001c FB81     		strh	r3, [r7, #14]	@ movhi
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 2273              		.loc 1 1215 0
 2274 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2275 0020 1B02     		lsls	r3, r3, #8
 2276 0022 9AB2     		uxth	r2, r3
 2277 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2278 0026 1343     		orrs	r3, r3, r2
 2279 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2280              		.loc 1 1218 0
 2281 002a 7B68     		ldr	r3, [r7, #4]
 2282 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2283 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2284              		.loc 1 1219 0
 2285 0030 1437     		adds	r7, r7, #20
 2286 0032 BD46     		mov	sp, r7
 2287              		@ sp needed
 2288 0034 5DF8047B 		ldr	r7, [sp], #4
 2289 0038 7047     		bx	lr
 2290              		.cfi_endproc
 2291              	.LFE138:
 2293 003a 00BF     		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2294              		.align	2
 2295              		.global	TIM_OC1PreloadConfig
 2296              		.thumb
 2297              		.thumb_func
 2299              	TIM_OC1PreloadConfig:
 2300              	.LFB139:
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2301              		.loc 1 1231 0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 16
 2304              		@ frame_needed = 1, uses_anonymous_args = 0
 2305              		@ link register save eliminated.
 2306 0000 80B4     		push	{r7}
 2307              	.LCFI87:
 2308              		.cfi_def_cfa_offset 4
 2309              		.cfi_offset 7, -4
 2310 0002 85B0     		sub	sp, sp, #20
 2311              	.LCFI88:
 2312              		.cfi_def_cfa_offset 24
 2313 0004 00AF     		add	r7, sp, #0
 2314              	.LCFI89:
 2315              		.cfi_def_cfa_register 7
 2316 0006 7860     		str	r0, [r7, #4]
 2317 0008 0B46     		mov	r3, r1
 2318 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2319              		.loc 1 1232 0
 2320 000c 0023     		movs	r3, #0
 2321 000e FB81     		strh	r3, [r7, #14]	@ movhi
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2322              		.loc 1 1238 0
 2323 0010 7B68     		ldr	r3, [r7, #4]
 2324 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2325 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 2326              		.loc 1 1241 0
 2327 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2328 0018 23F00803 		bic	r3, r3, #8
 2329 001c FB81     		strh	r3, [r7, #14]	@ movhi
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2330              		.loc 1 1244 0
 2331 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2332 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2333 0022 1343     		orrs	r3, r3, r2
 2334 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2335              		.loc 1 1247 0
 2336 0026 7B68     		ldr	r3, [r7, #4]
 2337 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2338 002a 1A83     		strh	r2, [r3, #24]	@ movhi
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2339              		.loc 1 1248 0
 2340 002c 1437     		adds	r7, r7, #20
 2341 002e BD46     		mov	sp, r7
 2342              		@ sp needed
 2343 0030 5DF8047B 		ldr	r7, [sp], #4
 2344 0034 7047     		bx	lr
 2345              		.cfi_endproc
 2346              	.LFE139:
 2348 0036 00BF     		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2349              		.align	2
 2350              		.global	TIM_OC2PreloadConfig
 2351              		.thumb
 2352              		.thumb_func
 2354              	TIM_OC2PreloadConfig:
 2355              	.LFB140:
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2356              		.loc 1 1261 0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 16
 2359              		@ frame_needed = 1, uses_anonymous_args = 0
 2360              		@ link register save eliminated.
 2361 0000 80B4     		push	{r7}
 2362              	.LCFI90:
 2363              		.cfi_def_cfa_offset 4
 2364              		.cfi_offset 7, -4
 2365 0002 85B0     		sub	sp, sp, #20
 2366              	.LCFI91:
 2367              		.cfi_def_cfa_offset 24
 2368 0004 00AF     		add	r7, sp, #0
 2369              	.LCFI92:
 2370              		.cfi_def_cfa_register 7
 2371 0006 7860     		str	r0, [r7, #4]
 2372 0008 0B46     		mov	r3, r1
 2373 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2374              		.loc 1 1262 0
 2375 000c 0023     		movs	r3, #0
 2376 000e FB81     		strh	r3, [r7, #14]	@ movhi
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2377              		.loc 1 1268 0
 2378 0010 7B68     		ldr	r3, [r7, #4]
 2379 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2380 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 2381              		.loc 1 1271 0
 2382 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2383 0018 23F40063 		bic	r3, r3, #2048
 2384 001c FB81     		strh	r3, [r7, #14]	@ movhi
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 2385              		.loc 1 1274 0
 2386 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2387 0020 1B02     		lsls	r3, r3, #8
 2388 0022 9AB2     		uxth	r2, r3
 2389 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2390 0026 1343     		orrs	r3, r3, r2
 2391 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2392              		.loc 1 1277 0
 2393 002a 7B68     		ldr	r3, [r7, #4]
 2394 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2395 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2396              		.loc 1 1278 0
 2397 0030 1437     		adds	r7, r7, #20
 2398 0032 BD46     		mov	sp, r7
 2399              		@ sp needed
 2400 0034 5DF8047B 		ldr	r7, [sp], #4
 2401 0038 7047     		bx	lr
 2402              		.cfi_endproc
 2403              	.LFE140:
 2405 003a 00BF     		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2406              		.align	2
 2407              		.global	TIM_OC3PreloadConfig
 2408              		.thumb
 2409              		.thumb_func
 2411              	TIM_OC3PreloadConfig:
 2412              	.LFB141:
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2413              		.loc 1 1290 0
 2414              		.cfi_startproc
 2415              		@ args = 0, pretend = 0, frame = 16
 2416              		@ frame_needed = 1, uses_anonymous_args = 0
 2417              		@ link register save eliminated.
 2418 0000 80B4     		push	{r7}
 2419              	.LCFI93:
 2420              		.cfi_def_cfa_offset 4
 2421              		.cfi_offset 7, -4
 2422 0002 85B0     		sub	sp, sp, #20
 2423              	.LCFI94:
 2424              		.cfi_def_cfa_offset 24
 2425 0004 00AF     		add	r7, sp, #0
 2426              	.LCFI95:
 2427              		.cfi_def_cfa_register 7
 2428 0006 7860     		str	r0, [r7, #4]
 2429 0008 0B46     		mov	r3, r1
 2430 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2431              		.loc 1 1291 0
 2432 000c 0023     		movs	r3, #0
 2433 000e FB81     		strh	r3, [r7, #14]	@ movhi
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2434              		.loc 1 1297 0
 2435 0010 7B68     		ldr	r3, [r7, #4]
 2436 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2437 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 2438              		.loc 1 1300 0
 2439 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2440 0018 23F00803 		bic	r3, r3, #8
 2441 001c FB81     		strh	r3, [r7, #14]	@ movhi
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2442              		.loc 1 1303 0
 2443 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2444 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2445 0022 1343     		orrs	r3, r3, r2
 2446 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2447              		.loc 1 1306 0
 2448 0026 7B68     		ldr	r3, [r7, #4]
 2449 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2450 002a 9A83     		strh	r2, [r3, #28]	@ movhi
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2451              		.loc 1 1307 0
 2452 002c 1437     		adds	r7, r7, #20
 2453 002e BD46     		mov	sp, r7
 2454              		@ sp needed
 2455 0030 5DF8047B 		ldr	r7, [sp], #4
 2456 0034 7047     		bx	lr
 2457              		.cfi_endproc
 2458              	.LFE141:
 2460 0036 00BF     		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 2461              		.align	2
 2462              		.global	TIM_OC4PreloadConfig
 2463              		.thumb
 2464              		.thumb_func
 2466              	TIM_OC4PreloadConfig:
 2467              	.LFB142:
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2468              		.loc 1 1319 0
 2469              		.cfi_startproc
 2470              		@ args = 0, pretend = 0, frame = 16
 2471              		@ frame_needed = 1, uses_anonymous_args = 0
 2472              		@ link register save eliminated.
 2473 0000 80B4     		push	{r7}
 2474              	.LCFI96:
 2475              		.cfi_def_cfa_offset 4
 2476              		.cfi_offset 7, -4
 2477 0002 85B0     		sub	sp, sp, #20
 2478              	.LCFI97:
 2479              		.cfi_def_cfa_offset 24
 2480 0004 00AF     		add	r7, sp, #0
 2481              	.LCFI98:
 2482              		.cfi_def_cfa_register 7
 2483 0006 7860     		str	r0, [r7, #4]
 2484 0008 0B46     		mov	r3, r1
 2485 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2486              		.loc 1 1320 0
 2487 000c 0023     		movs	r3, #0
 2488 000e FB81     		strh	r3, [r7, #14]	@ movhi
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2489              		.loc 1 1326 0
 2490 0010 7B68     		ldr	r3, [r7, #4]
 2491 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2492 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 2493              		.loc 1 1329 0
 2494 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2495 0018 23F40063 		bic	r3, r3, #2048
 2496 001c FB81     		strh	r3, [r7, #14]	@ movhi
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 2497              		.loc 1 1332 0
 2498 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2499 0020 1B02     		lsls	r3, r3, #8
 2500 0022 9AB2     		uxth	r2, r3
 2501 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2502 0026 1343     		orrs	r3, r3, r2
 2503 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2504              		.loc 1 1335 0
 2505 002a 7B68     		ldr	r3, [r7, #4]
 2506 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2507 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2508              		.loc 1 1336 0
 2509 0030 1437     		adds	r7, r7, #20
 2510 0032 BD46     		mov	sp, r7
 2511              		@ sp needed
 2512 0034 5DF8047B 		ldr	r7, [sp], #4
 2513 0038 7047     		bx	lr
 2514              		.cfi_endproc
 2515              	.LFE142:
 2517 003a 00BF     		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2518              		.align	2
 2519              		.global	TIM_OC1FastConfig
 2520              		.thumb
 2521              		.thumb_func
 2523              	TIM_OC1FastConfig:
 2524              	.LFB143:
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2525              		.loc 1 1348 0
 2526              		.cfi_startproc
 2527              		@ args = 0, pretend = 0, frame = 16
 2528              		@ frame_needed = 1, uses_anonymous_args = 0
 2529              		@ link register save eliminated.
 2530 0000 80B4     		push	{r7}
 2531              	.LCFI99:
 2532              		.cfi_def_cfa_offset 4
 2533              		.cfi_offset 7, -4
 2534 0002 85B0     		sub	sp, sp, #20
 2535              	.LCFI100:
 2536              		.cfi_def_cfa_offset 24
 2537 0004 00AF     		add	r7, sp, #0
 2538              	.LCFI101:
 2539              		.cfi_def_cfa_register 7
 2540 0006 7860     		str	r0, [r7, #4]
 2541 0008 0B46     		mov	r3, r1
 2542 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2543              		.loc 1 1349 0
 2544 000c 0023     		movs	r3, #0
 2545 000e FB81     		strh	r3, [r7, #14]	@ movhi
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2546              		.loc 1 1356 0
 2547 0010 7B68     		ldr	r3, [r7, #4]
 2548 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2549 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 2550              		.loc 1 1359 0
 2551 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2552 0018 23F00403 		bic	r3, r3, #4
 2553 001c FB81     		strh	r3, [r7, #14]	@ movhi
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 2554              		.loc 1 1362 0
 2555 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2556 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2557 0022 1343     		orrs	r3, r3, r2
 2558 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2559              		.loc 1 1365 0
 2560 0026 7B68     		ldr	r3, [r7, #4]
 2561 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2562 002a 1A83     		strh	r2, [r3, #24]	@ movhi
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2563              		.loc 1 1366 0
 2564 002c 1437     		adds	r7, r7, #20
 2565 002e BD46     		mov	sp, r7
 2566              		@ sp needed
 2567 0030 5DF8047B 		ldr	r7, [sp], #4
 2568 0034 7047     		bx	lr
 2569              		.cfi_endproc
 2570              	.LFE143:
 2572 0036 00BF     		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2573              		.align	2
 2574              		.global	TIM_OC2FastConfig
 2575              		.thumb
 2576              		.thumb_func
 2578              	TIM_OC2FastConfig:
 2579              	.LFB144:
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2580              		.loc 1 1379 0
 2581              		.cfi_startproc
 2582              		@ args = 0, pretend = 0, frame = 16
 2583              		@ frame_needed = 1, uses_anonymous_args = 0
 2584              		@ link register save eliminated.
 2585 0000 80B4     		push	{r7}
 2586              	.LCFI102:
 2587              		.cfi_def_cfa_offset 4
 2588              		.cfi_offset 7, -4
 2589 0002 85B0     		sub	sp, sp, #20
 2590              	.LCFI103:
 2591              		.cfi_def_cfa_offset 24
 2592 0004 00AF     		add	r7, sp, #0
 2593              	.LCFI104:
 2594              		.cfi_def_cfa_register 7
 2595 0006 7860     		str	r0, [r7, #4]
 2596 0008 0B46     		mov	r3, r1
 2597 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2598              		.loc 1 1380 0
 2599 000c 0023     		movs	r3, #0
 2600 000e FB81     		strh	r3, [r7, #14]	@ movhi
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2601              		.loc 1 1387 0
 2602 0010 7B68     		ldr	r3, [r7, #4]
 2603 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2604 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 2605              		.loc 1 1390 0
 2606 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2607 0018 23F48063 		bic	r3, r3, #1024
 2608 001c FB81     		strh	r3, [r7, #14]	@ movhi
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2609              		.loc 1 1393 0
 2610 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2611 0020 1B02     		lsls	r3, r3, #8
 2612 0022 9AB2     		uxth	r2, r3
 2613 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2614 0026 1343     		orrs	r3, r3, r2
 2615 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2616              		.loc 1 1396 0
 2617 002a 7B68     		ldr	r3, [r7, #4]
 2618 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2619 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2620              		.loc 1 1397 0
 2621 0030 1437     		adds	r7, r7, #20
 2622 0032 BD46     		mov	sp, r7
 2623              		@ sp needed
 2624 0034 5DF8047B 		ldr	r7, [sp], #4
 2625 0038 7047     		bx	lr
 2626              		.cfi_endproc
 2627              	.LFE144:
 2629 003a 00BF     		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2630              		.align	2
 2631              		.global	TIM_OC3FastConfig
 2632              		.thumb
 2633              		.thumb_func
 2635              	TIM_OC3FastConfig:
 2636              	.LFB145:
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2637              		.loc 1 1409 0
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 16
 2640              		@ frame_needed = 1, uses_anonymous_args = 0
 2641              		@ link register save eliminated.
 2642 0000 80B4     		push	{r7}
 2643              	.LCFI105:
 2644              		.cfi_def_cfa_offset 4
 2645              		.cfi_offset 7, -4
 2646 0002 85B0     		sub	sp, sp, #20
 2647              	.LCFI106:
 2648              		.cfi_def_cfa_offset 24
 2649 0004 00AF     		add	r7, sp, #0
 2650              	.LCFI107:
 2651              		.cfi_def_cfa_register 7
 2652 0006 7860     		str	r0, [r7, #4]
 2653 0008 0B46     		mov	r3, r1
 2654 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2655              		.loc 1 1410 0
 2656 000c 0023     		movs	r3, #0
 2657 000e FB81     		strh	r3, [r7, #14]	@ movhi
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2658              		.loc 1 1417 0
 2659 0010 7B68     		ldr	r3, [r7, #4]
 2660 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2661 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 2662              		.loc 1 1420 0
 2663 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2664 0018 23F00403 		bic	r3, r3, #4
 2665 001c FB81     		strh	r3, [r7, #14]	@ movhi
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2666              		.loc 1 1423 0
 2667 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2668 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2669 0022 1343     		orrs	r3, r3, r2
 2670 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2671              		.loc 1 1426 0
 2672 0026 7B68     		ldr	r3, [r7, #4]
 2673 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2674 002a 9A83     		strh	r2, [r3, #28]	@ movhi
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2675              		.loc 1 1427 0
 2676 002c 1437     		adds	r7, r7, #20
 2677 002e BD46     		mov	sp, r7
 2678              		@ sp needed
 2679 0030 5DF8047B 		ldr	r7, [sp], #4
 2680 0034 7047     		bx	lr
 2681              		.cfi_endproc
 2682              	.LFE145:
 2684 0036 00BF     		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2685              		.align	2
 2686              		.global	TIM_OC4FastConfig
 2687              		.thumb
 2688              		.thumb_func
 2690              	TIM_OC4FastConfig:
 2691              	.LFB146:
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2692              		.loc 1 1439 0
 2693              		.cfi_startproc
 2694              		@ args = 0, pretend = 0, frame = 16
 2695              		@ frame_needed = 1, uses_anonymous_args = 0
 2696              		@ link register save eliminated.
 2697 0000 80B4     		push	{r7}
 2698              	.LCFI108:
 2699              		.cfi_def_cfa_offset 4
 2700              		.cfi_offset 7, -4
 2701 0002 85B0     		sub	sp, sp, #20
 2702              	.LCFI109:
 2703              		.cfi_def_cfa_offset 24
 2704 0004 00AF     		add	r7, sp, #0
 2705              	.LCFI110:
 2706              		.cfi_def_cfa_register 7
 2707 0006 7860     		str	r0, [r7, #4]
 2708 0008 0B46     		mov	r3, r1
 2709 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2710              		.loc 1 1440 0
 2711 000c 0023     		movs	r3, #0
 2712 000e FB81     		strh	r3, [r7, #14]	@ movhi
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2713              		.loc 1 1447 0
 2714 0010 7B68     		ldr	r3, [r7, #4]
 2715 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2716 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 2717              		.loc 1 1450 0
 2718 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2719 0018 23F48063 		bic	r3, r3, #1024
 2720 001c FB81     		strh	r3, [r7, #14]	@ movhi
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2721              		.loc 1 1453 0
 2722 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2723 0020 1B02     		lsls	r3, r3, #8
 2724 0022 9AB2     		uxth	r2, r3
 2725 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2726 0026 1343     		orrs	r3, r3, r2
 2727 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2728              		.loc 1 1456 0
 2729 002a 7B68     		ldr	r3, [r7, #4]
 2730 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2731 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2732              		.loc 1 1457 0
 2733 0030 1437     		adds	r7, r7, #20
 2734 0032 BD46     		mov	sp, r7
 2735              		@ sp needed
 2736 0034 5DF8047B 		ldr	r7, [sp], #4
 2737 0038 7047     		bx	lr
 2738              		.cfi_endproc
 2739              	.LFE146:
 2741 003a 00BF     		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2742              		.align	2
 2743              		.global	TIM_ClearOC1Ref
 2744              		.thumb
 2745              		.thumb_func
 2747              	TIM_ClearOC1Ref:
 2748              	.LFB147:
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2749              		.loc 1 1469 0
 2750              		.cfi_startproc
 2751              		@ args = 0, pretend = 0, frame = 16
 2752              		@ frame_needed = 1, uses_anonymous_args = 0
 2753              		@ link register save eliminated.
 2754 0000 80B4     		push	{r7}
 2755              	.LCFI111:
 2756              		.cfi_def_cfa_offset 4
 2757              		.cfi_offset 7, -4
 2758 0002 85B0     		sub	sp, sp, #20
 2759              	.LCFI112:
 2760              		.cfi_def_cfa_offset 24
 2761 0004 00AF     		add	r7, sp, #0
 2762              	.LCFI113:
 2763              		.cfi_def_cfa_register 7
 2764 0006 7860     		str	r0, [r7, #4]
 2765 0008 0B46     		mov	r3, r1
 2766 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2767              		.loc 1 1470 0
 2768 000c 0023     		movs	r3, #0
 2769 000e FB81     		strh	r3, [r7, #14]	@ movhi
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2770              		.loc 1 1476 0
 2771 0010 7B68     		ldr	r3, [r7, #4]
 2772 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2773 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 2774              		.loc 1 1479 0
 2775 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2776 0018 23F08003 		bic	r3, r3, #128
 2777 001c FB81     		strh	r3, [r7, #14]	@ movhi
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2778              		.loc 1 1482 0
 2779 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2780 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2781 0022 1343     		orrs	r3, r3, r2
 2782 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2783              		.loc 1 1485 0
 2784 0026 7B68     		ldr	r3, [r7, #4]
 2785 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2786 002a 1A83     		strh	r2, [r3, #24]	@ movhi
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2787              		.loc 1 1486 0
 2788 002c 1437     		adds	r7, r7, #20
 2789 002e BD46     		mov	sp, r7
 2790              		@ sp needed
 2791 0030 5DF8047B 		ldr	r7, [sp], #4
 2792 0034 7047     		bx	lr
 2793              		.cfi_endproc
 2794              	.LFE147:
 2796 0036 00BF     		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2797              		.align	2
 2798              		.global	TIM_ClearOC2Ref
 2799              		.thumb
 2800              		.thumb_func
 2802              	TIM_ClearOC2Ref:
 2803              	.LFB148:
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2804              		.loc 1 1499 0
 2805              		.cfi_startproc
 2806              		@ args = 0, pretend = 0, frame = 16
 2807              		@ frame_needed = 1, uses_anonymous_args = 0
 2808              		@ link register save eliminated.
 2809 0000 80B4     		push	{r7}
 2810              	.LCFI114:
 2811              		.cfi_def_cfa_offset 4
 2812              		.cfi_offset 7, -4
 2813 0002 85B0     		sub	sp, sp, #20
 2814              	.LCFI115:
 2815              		.cfi_def_cfa_offset 24
 2816 0004 00AF     		add	r7, sp, #0
 2817              	.LCFI116:
 2818              		.cfi_def_cfa_register 7
 2819 0006 7860     		str	r0, [r7, #4]
 2820 0008 0B46     		mov	r3, r1
 2821 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2822              		.loc 1 1500 0
 2823 000c 0023     		movs	r3, #0
 2824 000e FB81     		strh	r3, [r7, #14]	@ movhi
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2825              		.loc 1 1506 0
 2826 0010 7B68     		ldr	r3, [r7, #4]
 2827 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2828 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2829              		.loc 1 1509 0
 2830 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2831 0018 C3F30E03 		ubfx	r3, r3, #0, #15
 2832 001c FB81     		strh	r3, [r7, #14]	@ movhi
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2833              		.loc 1 1512 0
 2834 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2835 0020 1B02     		lsls	r3, r3, #8
 2836 0022 9AB2     		uxth	r2, r3
 2837 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2838 0026 1343     		orrs	r3, r3, r2
 2839 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2840              		.loc 1 1515 0
 2841 002a 7B68     		ldr	r3, [r7, #4]
 2842 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2843 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2844              		.loc 1 1516 0
 2845 0030 1437     		adds	r7, r7, #20
 2846 0032 BD46     		mov	sp, r7
 2847              		@ sp needed
 2848 0034 5DF8047B 		ldr	r7, [sp], #4
 2849 0038 7047     		bx	lr
 2850              		.cfi_endproc
 2851              	.LFE148:
 2853 003a 00BF     		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2854              		.align	2
 2855              		.global	TIM_ClearOC3Ref
 2856              		.thumb
 2857              		.thumb_func
 2859              	TIM_ClearOC3Ref:
 2860              	.LFB149:
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2861              		.loc 1 1528 0
 2862              		.cfi_startproc
 2863              		@ args = 0, pretend = 0, frame = 16
 2864              		@ frame_needed = 1, uses_anonymous_args = 0
 2865              		@ link register save eliminated.
 2866 0000 80B4     		push	{r7}
 2867              	.LCFI117:
 2868              		.cfi_def_cfa_offset 4
 2869              		.cfi_offset 7, -4
 2870 0002 85B0     		sub	sp, sp, #20
 2871              	.LCFI118:
 2872              		.cfi_def_cfa_offset 24
 2873 0004 00AF     		add	r7, sp, #0
 2874              	.LCFI119:
 2875              		.cfi_def_cfa_register 7
 2876 0006 7860     		str	r0, [r7, #4]
 2877 0008 0B46     		mov	r3, r1
 2878 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2879              		.loc 1 1529 0
 2880 000c 0023     		movs	r3, #0
 2881 000e FB81     		strh	r3, [r7, #14]	@ movhi
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2882              		.loc 1 1535 0
 2883 0010 7B68     		ldr	r3, [r7, #4]
 2884 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2885 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2886              		.loc 1 1538 0
 2887 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2888 0018 23F08003 		bic	r3, r3, #128
 2889 001c FB81     		strh	r3, [r7, #14]	@ movhi
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2890              		.loc 1 1541 0
 2891 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2892 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2893 0022 1343     		orrs	r3, r3, r2
 2894 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2895              		.loc 1 1544 0
 2896 0026 7B68     		ldr	r3, [r7, #4]
 2897 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2898 002a 9A83     		strh	r2, [r3, #28]	@ movhi
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2899              		.loc 1 1545 0
 2900 002c 1437     		adds	r7, r7, #20
 2901 002e BD46     		mov	sp, r7
 2902              		@ sp needed
 2903 0030 5DF8047B 		ldr	r7, [sp], #4
 2904 0034 7047     		bx	lr
 2905              		.cfi_endproc
 2906              	.LFE149:
 2908 0036 00BF     		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2909              		.align	2
 2910              		.global	TIM_ClearOC4Ref
 2911              		.thumb
 2912              		.thumb_func
 2914              	TIM_ClearOC4Ref:
 2915              	.LFB150:
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2916              		.loc 1 1557 0
 2917              		.cfi_startproc
 2918              		@ args = 0, pretend = 0, frame = 16
 2919              		@ frame_needed = 1, uses_anonymous_args = 0
 2920              		@ link register save eliminated.
 2921 0000 80B4     		push	{r7}
 2922              	.LCFI120:
 2923              		.cfi_def_cfa_offset 4
 2924              		.cfi_offset 7, -4
 2925 0002 85B0     		sub	sp, sp, #20
 2926              	.LCFI121:
 2927              		.cfi_def_cfa_offset 24
 2928 0004 00AF     		add	r7, sp, #0
 2929              	.LCFI122:
 2930              		.cfi_def_cfa_register 7
 2931 0006 7860     		str	r0, [r7, #4]
 2932 0008 0B46     		mov	r3, r1
 2933 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2934              		.loc 1 1558 0
 2935 000c 0023     		movs	r3, #0
 2936 000e FB81     		strh	r3, [r7, #14]	@ movhi
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2937              		.loc 1 1564 0
 2938 0010 7B68     		ldr	r3, [r7, #4]
 2939 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2940 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2941              		.loc 1 1567 0
 2942 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2943 0018 C3F30E03 		ubfx	r3, r3, #0, #15
 2944 001c FB81     		strh	r3, [r7, #14]	@ movhi
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2945              		.loc 1 1570 0
 2946 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2947 0020 1B02     		lsls	r3, r3, #8
 2948 0022 9AB2     		uxth	r2, r3
 2949 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2950 0026 1343     		orrs	r3, r3, r2
 2951 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2952              		.loc 1 1573 0
 2953 002a 7B68     		ldr	r3, [r7, #4]
 2954 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2955 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2956              		.loc 1 1574 0
 2957 0030 1437     		adds	r7, r7, #20
 2958 0032 BD46     		mov	sp, r7
 2959              		@ sp needed
 2960 0034 5DF8047B 		ldr	r7, [sp], #4
 2961 0038 7047     		bx	lr
 2962              		.cfi_endproc
 2963              	.LFE150:
 2965 003a 00BF     		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2966              		.align	2
 2967              		.global	TIM_OC1PolarityConfig
 2968              		.thumb
 2969              		.thumb_func
 2971              	TIM_OC1PolarityConfig:
 2972              	.LFB151:
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2973              		.loc 1 1586 0
 2974              		.cfi_startproc
 2975              		@ args = 0, pretend = 0, frame = 16
 2976              		@ frame_needed = 1, uses_anonymous_args = 0
 2977              		@ link register save eliminated.
 2978 0000 80B4     		push	{r7}
 2979              	.LCFI123:
 2980              		.cfi_def_cfa_offset 4
 2981              		.cfi_offset 7, -4
 2982 0002 85B0     		sub	sp, sp, #20
 2983              	.LCFI124:
 2984              		.cfi_def_cfa_offset 24
 2985 0004 00AF     		add	r7, sp, #0
 2986              	.LCFI125:
 2987              		.cfi_def_cfa_register 7
 2988 0006 7860     		str	r0, [r7, #4]
 2989 0008 0B46     		mov	r3, r1
 2990 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2991              		.loc 1 1587 0
 2992 000c 0023     		movs	r3, #0
 2993 000e FB81     		strh	r3, [r7, #14]	@ movhi
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2994              		.loc 1 1593 0
 2995 0010 7B68     		ldr	r3, [r7, #4]
 2996 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2997 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2998              		.loc 1 1596 0
 2999 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3000 0018 23F00203 		bic	r3, r3, #2
 3001 001c FB81     		strh	r3, [r7, #14]	@ movhi
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 3002              		.loc 1 1597 0
 3003 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 3004 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3005 0022 1343     		orrs	r3, r3, r2
 3006 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3007              		.loc 1 1600 0
 3008 0026 7B68     		ldr	r3, [r7, #4]
 3009 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3010 002a 1A84     		strh	r2, [r3, #32]	@ movhi
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3011              		.loc 1 1601 0
 3012 002c 1437     		adds	r7, r7, #20
 3013 002e BD46     		mov	sp, r7
 3014              		@ sp needed
 3015 0030 5DF8047B 		ldr	r7, [sp], #4
 3016 0034 7047     		bx	lr
 3017              		.cfi_endproc
 3018              	.LFE151:
 3020 0036 00BF     		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 3021              		.align	2
 3022              		.global	TIM_OC1NPolarityConfig
 3023              		.thumb
 3024              		.thumb_func
 3026              	TIM_OC1NPolarityConfig:
 3027              	.LFB152:
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3028              		.loc 1 1613 0
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 16
 3031              		@ frame_needed = 1, uses_anonymous_args = 0
 3032              		@ link register save eliminated.
 3033 0000 80B4     		push	{r7}
 3034              	.LCFI126:
 3035              		.cfi_def_cfa_offset 4
 3036              		.cfi_offset 7, -4
 3037 0002 85B0     		sub	sp, sp, #20
 3038              	.LCFI127:
 3039              		.cfi_def_cfa_offset 24
 3040 0004 00AF     		add	r7, sp, #0
 3041              	.LCFI128:
 3042              		.cfi_def_cfa_register 7
 3043 0006 7860     		str	r0, [r7, #4]
 3044 0008 0B46     		mov	r3, r1
 3045 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3046              		.loc 1 1614 0
 3047 000c 0023     		movs	r3, #0
 3048 000e FB81     		strh	r3, [r7, #14]	@ movhi
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3049              		.loc 1 1619 0
 3050 0010 7B68     		ldr	r3, [r7, #4]
 3051 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3052 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 3053              		.loc 1 1622 0
 3054 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3055 0018 23F00803 		bic	r3, r3, #8
 3056 001c FB81     		strh	r3, [r7, #14]	@ movhi
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 3057              		.loc 1 1623 0
 3058 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 3059 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3060 0022 1343     		orrs	r3, r3, r2
 3061 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3062              		.loc 1 1626 0
 3063 0026 7B68     		ldr	r3, [r7, #4]
 3064 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3065 002a 1A84     		strh	r2, [r3, #32]	@ movhi
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3066              		.loc 1 1627 0
 3067 002c 1437     		adds	r7, r7, #20
 3068 002e BD46     		mov	sp, r7
 3069              		@ sp needed
 3070 0030 5DF8047B 		ldr	r7, [sp], #4
 3071 0034 7047     		bx	lr
 3072              		.cfi_endproc
 3073              	.LFE152:
 3075 0036 00BF     		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 3076              		.align	2
 3077              		.global	TIM_OC2PolarityConfig
 3078              		.thumb
 3079              		.thumb_func
 3081              	TIM_OC2PolarityConfig:
 3082              	.LFB153:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3083              		.loc 1 1640 0
 3084              		.cfi_startproc
 3085              		@ args = 0, pretend = 0, frame = 16
 3086              		@ frame_needed = 1, uses_anonymous_args = 0
 3087              		@ link register save eliminated.
 3088 0000 80B4     		push	{r7}
 3089              	.LCFI129:
 3090              		.cfi_def_cfa_offset 4
 3091              		.cfi_offset 7, -4
 3092 0002 85B0     		sub	sp, sp, #20
 3093              	.LCFI130:
 3094              		.cfi_def_cfa_offset 24
 3095 0004 00AF     		add	r7, sp, #0
 3096              	.LCFI131:
 3097              		.cfi_def_cfa_register 7
 3098 0006 7860     		str	r0, [r7, #4]
 3099 0008 0B46     		mov	r3, r1
 3100 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3101              		.loc 1 1641 0
 3102 000c 0023     		movs	r3, #0
 3103 000e FB81     		strh	r3, [r7, #14]	@ movhi
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3104              		.loc 1 1647 0
 3105 0010 7B68     		ldr	r3, [r7, #4]
 3106 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3107 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 3108              		.loc 1 1650 0
 3109 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3110 0018 23F02003 		bic	r3, r3, #32
 3111 001c FB81     		strh	r3, [r7, #14]	@ movhi
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3112              		.loc 1 1651 0
 3113 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3114 0020 1B01     		lsls	r3, r3, #4
 3115 0022 9AB2     		uxth	r2, r3
 3116 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3117 0026 1343     		orrs	r3, r3, r2
 3118 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3119              		.loc 1 1654 0
 3120 002a 7B68     		ldr	r3, [r7, #4]
 3121 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3122 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3123              		.loc 1 1655 0
 3124 0030 1437     		adds	r7, r7, #20
 3125 0032 BD46     		mov	sp, r7
 3126              		@ sp needed
 3127 0034 5DF8047B 		ldr	r7, [sp], #4
 3128 0038 7047     		bx	lr
 3129              		.cfi_endproc
 3130              	.LFE153:
 3132 003a 00BF     		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 3133              		.align	2
 3134              		.global	TIM_OC2NPolarityConfig
 3135              		.thumb
 3136              		.thumb_func
 3138              	TIM_OC2NPolarityConfig:
 3139              	.LFB154:
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3140              		.loc 1 1667 0
 3141              		.cfi_startproc
 3142              		@ args = 0, pretend = 0, frame = 16
 3143              		@ frame_needed = 1, uses_anonymous_args = 0
 3144              		@ link register save eliminated.
 3145 0000 80B4     		push	{r7}
 3146              	.LCFI132:
 3147              		.cfi_def_cfa_offset 4
 3148              		.cfi_offset 7, -4
 3149 0002 85B0     		sub	sp, sp, #20
 3150              	.LCFI133:
 3151              		.cfi_def_cfa_offset 24
 3152 0004 00AF     		add	r7, sp, #0
 3153              	.LCFI134:
 3154              		.cfi_def_cfa_register 7
 3155 0006 7860     		str	r0, [r7, #4]
 3156 0008 0B46     		mov	r3, r1
 3157 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3158              		.loc 1 1668 0
 3159 000c 0023     		movs	r3, #0
 3160 000e FB81     		strh	r3, [r7, #14]	@ movhi
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3161              		.loc 1 1674 0
 3162 0010 7B68     		ldr	r3, [r7, #4]
 3163 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3164 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 3165              		.loc 1 1677 0
 3166 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3167 0018 23F08003 		bic	r3, r3, #128
 3168 001c FB81     		strh	r3, [r7, #14]	@ movhi
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3169              		.loc 1 1678 0
 3170 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3171 0020 1B01     		lsls	r3, r3, #4
 3172 0022 9AB2     		uxth	r2, r3
 3173 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3174 0026 1343     		orrs	r3, r3, r2
 3175 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3176              		.loc 1 1681 0
 3177 002a 7B68     		ldr	r3, [r7, #4]
 3178 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3179 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3180              		.loc 1 1682 0
 3181 0030 1437     		adds	r7, r7, #20
 3182 0032 BD46     		mov	sp, r7
 3183              		@ sp needed
 3184 0034 5DF8047B 		ldr	r7, [sp], #4
 3185 0038 7047     		bx	lr
 3186              		.cfi_endproc
 3187              	.LFE154:
 3189 003a 00BF     		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 3190              		.align	2
 3191              		.global	TIM_OC3PolarityConfig
 3192              		.thumb
 3193              		.thumb_func
 3195              	TIM_OC3PolarityConfig:
 3196              	.LFB155:
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3197              		.loc 1 1694 0
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 16
 3200              		@ frame_needed = 1, uses_anonymous_args = 0
 3201              		@ link register save eliminated.
 3202 0000 80B4     		push	{r7}
 3203              	.LCFI135:
 3204              		.cfi_def_cfa_offset 4
 3205              		.cfi_offset 7, -4
 3206 0002 85B0     		sub	sp, sp, #20
 3207              	.LCFI136:
 3208              		.cfi_def_cfa_offset 24
 3209 0004 00AF     		add	r7, sp, #0
 3210              	.LCFI137:
 3211              		.cfi_def_cfa_register 7
 3212 0006 7860     		str	r0, [r7, #4]
 3213 0008 0B46     		mov	r3, r1
 3214 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3215              		.loc 1 1695 0
 3216 000c 0023     		movs	r3, #0
 3217 000e FB81     		strh	r3, [r7, #14]	@ movhi
1696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3218              		.loc 1 1701 0
 3219 0010 7B68     		ldr	r3, [r7, #4]
 3220 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3221 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 3222              		.loc 1 1704 0
 3223 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3224 0018 23F40073 		bic	r3, r3, #512
 3225 001c FB81     		strh	r3, [r7, #14]	@ movhi
1705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3226              		.loc 1 1705 0
 3227 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3228 0020 1B02     		lsls	r3, r3, #8
 3229 0022 9AB2     		uxth	r2, r3
 3230 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3231 0026 1343     		orrs	r3, r3, r2
 3232 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3233              		.loc 1 1708 0
 3234 002a 7B68     		ldr	r3, [r7, #4]
 3235 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3236 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3237              		.loc 1 1709 0
 3238 0030 1437     		adds	r7, r7, #20
 3239 0032 BD46     		mov	sp, r7
 3240              		@ sp needed
 3241 0034 5DF8047B 		ldr	r7, [sp], #4
 3242 0038 7047     		bx	lr
 3243              		.cfi_endproc
 3244              	.LFE155:
 3246 003a 00BF     		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 3247              		.align	2
 3248              		.global	TIM_OC3NPolarityConfig
 3249              		.thumb
 3250              		.thumb_func
 3252              	TIM_OC3NPolarityConfig:
 3253              	.LFB156:
1710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3254              		.loc 1 1721 0
 3255              		.cfi_startproc
 3256              		@ args = 0, pretend = 0, frame = 16
 3257              		@ frame_needed = 1, uses_anonymous_args = 0
 3258              		@ link register save eliminated.
 3259 0000 80B4     		push	{r7}
 3260              	.LCFI138:
 3261              		.cfi_def_cfa_offset 4
 3262              		.cfi_offset 7, -4
 3263 0002 85B0     		sub	sp, sp, #20
 3264              	.LCFI139:
 3265              		.cfi_def_cfa_offset 24
 3266 0004 00AF     		add	r7, sp, #0
 3267              	.LCFI140:
 3268              		.cfi_def_cfa_register 7
 3269 0006 7860     		str	r0, [r7, #4]
 3270 0008 0B46     		mov	r3, r1
 3271 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3272              		.loc 1 1722 0
 3273 000c 0023     		movs	r3, #0
 3274 000e FB81     		strh	r3, [r7, #14]	@ movhi
1723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3275              		.loc 1 1728 0
 3276 0010 7B68     		ldr	r3, [r7, #4]
 3277 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3278 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 3279              		.loc 1 1731 0
 3280 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3281 0018 23F40063 		bic	r3, r3, #2048
 3282 001c FB81     		strh	r3, [r7, #14]	@ movhi
1732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3283              		.loc 1 1732 0
 3284 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3285 0020 1B02     		lsls	r3, r3, #8
 3286 0022 9AB2     		uxth	r2, r3
 3287 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3288 0026 1343     		orrs	r3, r3, r2
 3289 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3290              		.loc 1 1735 0
 3291 002a 7B68     		ldr	r3, [r7, #4]
 3292 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3293 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3294              		.loc 1 1736 0
 3295 0030 1437     		adds	r7, r7, #20
 3296 0032 BD46     		mov	sp, r7
 3297              		@ sp needed
 3298 0034 5DF8047B 		ldr	r7, [sp], #4
 3299 0038 7047     		bx	lr
 3300              		.cfi_endproc
 3301              	.LFE156:
 3303 003a 00BF     		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 3304              		.align	2
 3305              		.global	TIM_OC4PolarityConfig
 3306              		.thumb
 3307              		.thumb_func
 3309              	TIM_OC4PolarityConfig:
 3310              	.LFB157:
1737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3311              		.loc 1 1748 0
 3312              		.cfi_startproc
 3313              		@ args = 0, pretend = 0, frame = 16
 3314              		@ frame_needed = 1, uses_anonymous_args = 0
 3315              		@ link register save eliminated.
 3316 0000 80B4     		push	{r7}
 3317              	.LCFI141:
 3318              		.cfi_def_cfa_offset 4
 3319              		.cfi_offset 7, -4
 3320 0002 85B0     		sub	sp, sp, #20
 3321              	.LCFI142:
 3322              		.cfi_def_cfa_offset 24
 3323 0004 00AF     		add	r7, sp, #0
 3324              	.LCFI143:
 3325              		.cfi_def_cfa_register 7
 3326 0006 7860     		str	r0, [r7, #4]
 3327 0008 0B46     		mov	r3, r1
 3328 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3329              		.loc 1 1749 0
 3330 000c 0023     		movs	r3, #0
 3331 000e FB81     		strh	r3, [r7, #14]	@ movhi
1750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3332              		.loc 1 1755 0
 3333 0010 7B68     		ldr	r3, [r7, #4]
 3334 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3335 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 3336              		.loc 1 1758 0
 3337 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3338 0018 23F40053 		bic	r3, r3, #8192
 3339 001c FB81     		strh	r3, [r7, #14]	@ movhi
1759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3340              		.loc 1 1759 0
 3341 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3342 0020 1B03     		lsls	r3, r3, #12
 3343 0022 9AB2     		uxth	r2, r3
 3344 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3345 0026 1343     		orrs	r3, r3, r2
 3346 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3347              		.loc 1 1762 0
 3348 002a 7B68     		ldr	r3, [r7, #4]
 3349 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3350 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3351              		.loc 1 1763 0
 3352 0030 1437     		adds	r7, r7, #20
 3353 0032 BD46     		mov	sp, r7
 3354              		@ sp needed
 3355 0034 5DF8047B 		ldr	r7, [sp], #4
 3356 0038 7047     		bx	lr
 3357              		.cfi_endproc
 3358              	.LFE157:
 3360 003a 00BF     		.section	.text.TIM_CCxCmd,"ax",%progbits
 3361              		.align	2
 3362              		.global	TIM_CCxCmd
 3363              		.thumb
 3364              		.thumb_func
 3366              	TIM_CCxCmd:
 3367              	.LFB158:
1764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3368              		.loc 1 1779 0
 3369              		.cfi_startproc
 3370              		@ args = 0, pretend = 0, frame = 16
 3371              		@ frame_needed = 1, uses_anonymous_args = 0
 3372              		@ link register save eliminated.
 3373 0000 80B4     		push	{r7}
 3374              	.LCFI144:
 3375              		.cfi_def_cfa_offset 4
 3376              		.cfi_offset 7, -4
 3377 0002 85B0     		sub	sp, sp, #20
 3378              	.LCFI145:
 3379              		.cfi_def_cfa_offset 24
 3380 0004 00AF     		add	r7, sp, #0
 3381              	.LCFI146:
 3382              		.cfi_def_cfa_register 7
 3383 0006 7860     		str	r0, [r7, #4]
 3384 0008 1346     		mov	r3, r2
 3385 000a 0A46     		mov	r2, r1	@ movhi
 3386 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3387 000e 3B80     		strh	r3, [r7]	@ movhi
1780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3388              		.loc 1 1780 0
 3389 0010 0023     		movs	r3, #0
 3390 0012 FB81     		strh	r3, [r7, #14]	@ movhi
1781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 3391              		.loc 1 1787 0
 3392 0014 7B88     		ldrh	r3, [r7, #2]
 3393 0016 0122     		movs	r2, #1
 3394 0018 02FA03F3 		lsl	r3, r2, r3
 3395 001c FB81     		strh	r3, [r7, #14]	@ movhi
1788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 3396              		.loc 1 1790 0
 3397 001e 7B68     		ldr	r3, [r7, #4]
 3398 0020 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3399 0022 9AB2     		uxth	r2, r3
 3400 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3401 0026 DB43     		mvns	r3, r3
 3402 0028 9BB2     		uxth	r3, r3
 3403 002a 1340     		ands	r3, r3, r2
 3404 002c 9AB2     		uxth	r2, r3
 3405 002e 7B68     		ldr	r3, [r7, #4]
 3406 0030 1A84     		strh	r2, [r3, #32]	@ movhi
1791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 3407              		.loc 1 1793 0
 3408 0032 7B68     		ldr	r3, [r7, #4]
 3409 0034 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3410 0036 9AB2     		uxth	r2, r3
 3411 0038 3988     		ldrh	r1, [r7]
 3412 003a 7B88     		ldrh	r3, [r7, #2]
 3413 003c 01FA03F3 		lsl	r3, r1, r3
 3414 0040 9BB2     		uxth	r3, r3
 3415 0042 1343     		orrs	r3, r3, r2
 3416 0044 9AB2     		uxth	r2, r3
 3417 0046 7B68     		ldr	r3, [r7, #4]
 3418 0048 1A84     		strh	r2, [r3, #32]	@ movhi
1794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3419              		.loc 1 1794 0
 3420 004a 1437     		adds	r7, r7, #20
 3421 004c BD46     		mov	sp, r7
 3422              		@ sp needed
 3423 004e 5DF8047B 		ldr	r7, [sp], #4
 3424 0052 7047     		bx	lr
 3425              		.cfi_endproc
 3426              	.LFE158:
 3428              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 3429              		.align	2
 3430              		.global	TIM_CCxNCmd
 3431              		.thumb
 3432              		.thumb_func
 3434              	TIM_CCxNCmd:
 3435              	.LFB159:
1795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3436              		.loc 1 1809 0
 3437              		.cfi_startproc
 3438              		@ args = 0, pretend = 0, frame = 16
 3439              		@ frame_needed = 1, uses_anonymous_args = 0
 3440              		@ link register save eliminated.
 3441 0000 80B4     		push	{r7}
 3442              	.LCFI147:
 3443              		.cfi_def_cfa_offset 4
 3444              		.cfi_offset 7, -4
 3445 0002 85B0     		sub	sp, sp, #20
 3446              	.LCFI148:
 3447              		.cfi_def_cfa_offset 24
 3448 0004 00AF     		add	r7, sp, #0
 3449              	.LCFI149:
 3450              		.cfi_def_cfa_register 7
 3451 0006 7860     		str	r0, [r7, #4]
 3452 0008 1346     		mov	r3, r2
 3453 000a 0A46     		mov	r2, r1	@ movhi
 3454 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3455 000e 3B80     		strh	r3, [r7]	@ movhi
1810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3456              		.loc 1 1810 0
 3457 0010 0023     		movs	r3, #0
 3458 0012 FB81     		strh	r3, [r7, #14]	@ movhi
1811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 3459              		.loc 1 1817 0
 3460 0014 7B88     		ldrh	r3, [r7, #2]
 3461 0016 0422     		movs	r2, #4
 3462 0018 02FA03F3 		lsl	r3, r2, r3
 3463 001c FB81     		strh	r3, [r7, #14]	@ movhi
1818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 3464              		.loc 1 1820 0
 3465 001e 7B68     		ldr	r3, [r7, #4]
 3466 0020 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3467 0022 9AB2     		uxth	r2, r3
 3468 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3469 0026 DB43     		mvns	r3, r3
 3470 0028 9BB2     		uxth	r3, r3
 3471 002a 1340     		ands	r3, r3, r2
 3472 002c 9AB2     		uxth	r2, r3
 3473 002e 7B68     		ldr	r3, [r7, #4]
 3474 0030 1A84     		strh	r2, [r3, #32]	@ movhi
1821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 3475              		.loc 1 1823 0
 3476 0032 7B68     		ldr	r3, [r7, #4]
 3477 0034 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3478 0036 9AB2     		uxth	r2, r3
 3479 0038 3988     		ldrh	r1, [r7]
 3480 003a 7B88     		ldrh	r3, [r7, #2]
 3481 003c 01FA03F3 		lsl	r3, r1, r3
 3482 0040 9BB2     		uxth	r3, r3
 3483 0042 1343     		orrs	r3, r3, r2
 3484 0044 9AB2     		uxth	r2, r3
 3485 0046 7B68     		ldr	r3, [r7, #4]
 3486 0048 1A84     		strh	r2, [r3, #32]	@ movhi
1824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3487              		.loc 1 1824 0
 3488 004a 1437     		adds	r7, r7, #20
 3489 004c BD46     		mov	sp, r7
 3490              		@ sp needed
 3491 004e 5DF8047B 		ldr	r7, [sp], #4
 3492 0052 7047     		bx	lr
 3493              		.cfi_endproc
 3494              	.LFE159:
 3496              		.section	.text.TIM_ICInit,"ax",%progbits
 3497              		.align	2
 3498              		.global	TIM_ICInit
 3499              		.thumb
 3500              		.thumb_func
 3502              	TIM_ICInit:
 3503              	.LFB160:
1825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3504              		.loc 1 1891 0
 3505              		.cfi_startproc
 3506              		@ args = 0, pretend = 0, frame = 8
 3507              		@ frame_needed = 1, uses_anonymous_args = 0
 3508 0000 80B5     		push	{r7, lr}
 3509              	.LCFI150:
 3510              		.cfi_def_cfa_offset 8
 3511              		.cfi_offset 7, -8
 3512              		.cfi_offset 14, -4
 3513 0002 82B0     		sub	sp, sp, #8
 3514              	.LCFI151:
 3515              		.cfi_def_cfa_offset 16
 3516 0004 00AF     		add	r7, sp, #0
 3517              	.LCFI152:
 3518              		.cfi_def_cfa_register 7
 3519 0006 7860     		str	r0, [r7, #4]
 3520 0008 3960     		str	r1, [r7]
1892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3521              		.loc 1 1899 0
 3522 000a 3B68     		ldr	r3, [r7]
 3523 000c 1B88     		ldrh	r3, [r3]
 3524 000e 002B     		cmp	r3, #0
 3525 0010 0FD1     		bne	.L104
1900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3526              		.loc 1 1902 0
 3527 0012 3B68     		ldr	r3, [r7]
 3528 0014 5988     		ldrh	r1, [r3, #2]
 3529 0016 3B68     		ldr	r3, [r7]
 3530 0018 9A88     		ldrh	r2, [r3, #4]
 3531 001a 3B68     		ldr	r3, [r7]
 3532 001c 1B89     		ldrh	r3, [r3, #8]
 3533 001e 7868     		ldr	r0, [r7, #4]
 3534 0020 FFF7FEFF 		bl	TI1_Config
1903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3535              		.loc 1 1906 0
 3536 0024 3B68     		ldr	r3, [r7]
 3537 0026 DB88     		ldrh	r3, [r3, #6]
 3538 0028 7868     		ldr	r0, [r7, #4]
 3539 002a 1946     		mov	r1, r3
 3540 002c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3541 0030 36E0     		b	.L103
 3542              	.L104:
1907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 3543              		.loc 1 1908 0
 3544 0032 3B68     		ldr	r3, [r7]
 3545 0034 1B88     		ldrh	r3, [r3]
 3546 0036 042B     		cmp	r3, #4
 3547 0038 0FD1     		bne	.L106
1909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3548              		.loc 1 1911 0
 3549 003a 3B68     		ldr	r3, [r7]
 3550 003c 5988     		ldrh	r1, [r3, #2]
 3551 003e 3B68     		ldr	r3, [r7]
 3552 0040 9A88     		ldrh	r2, [r3, #4]
 3553 0042 3B68     		ldr	r3, [r7]
 3554 0044 1B89     		ldrh	r3, [r3, #8]
 3555 0046 7868     		ldr	r0, [r7, #4]
 3556 0048 FFF7FEFF 		bl	TI2_Config
1912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3557              		.loc 1 1915 0
 3558 004c 3B68     		ldr	r3, [r7]
 3559 004e DB88     		ldrh	r3, [r3, #6]
 3560 0050 7868     		ldr	r0, [r7, #4]
 3561 0052 1946     		mov	r1, r3
 3562 0054 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3563 0058 22E0     		b	.L103
 3564              	.L106:
1916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3565              		.loc 1 1917 0
 3566 005a 3B68     		ldr	r3, [r7]
 3567 005c 1B88     		ldrh	r3, [r3]
 3568 005e 082B     		cmp	r3, #8
 3569 0060 0FD1     		bne	.L107
1918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3570              		.loc 1 1920 0
 3571 0062 3B68     		ldr	r3, [r7]
 3572 0064 5988     		ldrh	r1, [r3, #2]
 3573 0066 3B68     		ldr	r3, [r7]
 3574 0068 9A88     		ldrh	r2, [r3, #4]
 3575 006a 3B68     		ldr	r3, [r7]
 3576 006c 1B89     		ldrh	r3, [r3, #8]
 3577 006e 7868     		ldr	r0, [r7, #4]
 3578 0070 FFF7FEFF 		bl	TI3_Config
1921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3579              		.loc 1 1924 0
 3580 0074 3B68     		ldr	r3, [r7]
 3581 0076 DB88     		ldrh	r3, [r3, #6]
 3582 0078 7868     		ldr	r0, [r7, #4]
 3583 007a 1946     		mov	r1, r3
 3584 007c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3585 0080 0EE0     		b	.L103
 3586              	.L107:
1925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3587              		.loc 1 1929 0
 3588 0082 3B68     		ldr	r3, [r7]
 3589 0084 5988     		ldrh	r1, [r3, #2]
 3590 0086 3B68     		ldr	r3, [r7]
 3591 0088 9A88     		ldrh	r2, [r3, #4]
 3592 008a 3B68     		ldr	r3, [r7]
 3593 008c 1B89     		ldrh	r3, [r3, #8]
 3594 008e 7868     		ldr	r0, [r7, #4]
 3595 0090 FFF7FEFF 		bl	TI4_Config
1930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3596              		.loc 1 1933 0
 3597 0094 3B68     		ldr	r3, [r7]
 3598 0096 DB88     		ldrh	r3, [r3, #6]
 3599 0098 7868     		ldr	r0, [r7, #4]
 3600 009a 1946     		mov	r1, r3
 3601 009c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3602              	.L103:
1934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3603              		.loc 1 1935 0
 3604 00a0 0837     		adds	r7, r7, #8
 3605 00a2 BD46     		mov	sp, r7
 3606              		@ sp needed
 3607 00a4 80BD     		pop	{r7, pc}
 3608              		.cfi_endproc
 3609              	.LFE160:
 3611 00a6 00BF     		.section	.text.TIM_ICStructInit,"ax",%progbits
 3612              		.align	2
 3613              		.global	TIM_ICStructInit
 3614              		.thumb
 3615              		.thumb_func
 3617              	TIM_ICStructInit:
 3618              	.LFB161:
1936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3619              		.loc 1 1944 0
 3620              		.cfi_startproc
 3621              		@ args = 0, pretend = 0, frame = 8
 3622              		@ frame_needed = 1, uses_anonymous_args = 0
 3623              		@ link register save eliminated.
 3624 0000 80B4     		push	{r7}
 3625              	.LCFI153:
 3626              		.cfi_def_cfa_offset 4
 3627              		.cfi_offset 7, -4
 3628 0002 83B0     		sub	sp, sp, #12
 3629              	.LCFI154:
 3630              		.cfi_def_cfa_offset 16
 3631 0004 00AF     		add	r7, sp, #0
 3632              	.LCFI155:
 3633              		.cfi_def_cfa_register 7
 3634 0006 7860     		str	r0, [r7, #4]
1945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 3635              		.loc 1 1946 0
 3636 0008 7B68     		ldr	r3, [r7, #4]
 3637 000a 0022     		movs	r2, #0
 3638 000c 1A80     		strh	r2, [r3]	@ movhi
1947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 3639              		.loc 1 1947 0
 3640 000e 7B68     		ldr	r3, [r7, #4]
 3641 0010 0022     		movs	r2, #0
 3642 0012 5A80     		strh	r2, [r3, #2]	@ movhi
1948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 3643              		.loc 1 1948 0
 3644 0014 7B68     		ldr	r3, [r7, #4]
 3645 0016 0122     		movs	r2, #1
 3646 0018 9A80     		strh	r2, [r3, #4]	@ movhi
1949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 3647              		.loc 1 1949 0
 3648 001a 7B68     		ldr	r3, [r7, #4]
 3649 001c 0022     		movs	r2, #0
 3650 001e DA80     		strh	r2, [r3, #6]	@ movhi
1950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 3651              		.loc 1 1950 0
 3652 0020 7B68     		ldr	r3, [r7, #4]
 3653 0022 0022     		movs	r2, #0
 3654 0024 1A81     		strh	r2, [r3, #8]	@ movhi
1951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3655              		.loc 1 1951 0
 3656 0026 0C37     		adds	r7, r7, #12
 3657 0028 BD46     		mov	sp, r7
 3658              		@ sp needed
 3659 002a 5DF8047B 		ldr	r7, [sp], #4
 3660 002e 7047     		bx	lr
 3661              		.cfi_endproc
 3662              	.LFE161:
 3664              		.section	.text.TIM_PWMIConfig,"ax",%progbits
 3665              		.align	2
 3666              		.global	TIM_PWMIConfig
 3667              		.thumb
 3668              		.thumb_func
 3670              	TIM_PWMIConfig:
 3671              	.LFB162:
1952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3672              		.loc 1 1963 0
 3673              		.cfi_startproc
 3674              		@ args = 0, pretend = 0, frame = 16
 3675              		@ frame_needed = 1, uses_anonymous_args = 0
 3676 0000 80B5     		push	{r7, lr}
 3677              	.LCFI156:
 3678              		.cfi_def_cfa_offset 8
 3679              		.cfi_offset 7, -8
 3680              		.cfi_offset 14, -4
 3681 0002 84B0     		sub	sp, sp, #16
 3682              	.LCFI157:
 3683              		.cfi_def_cfa_offset 24
 3684 0004 00AF     		add	r7, sp, #0
 3685              	.LCFI158:
 3686              		.cfi_def_cfa_register 7
 3687 0006 7860     		str	r0, [r7, #4]
 3688 0008 3960     		str	r1, [r7]
1964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3689              		.loc 1 1964 0
 3690 000a 0023     		movs	r3, #0
 3691 000c FB81     		strh	r3, [r7, #14]	@ movhi
1965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 3692              		.loc 1 1965 0
 3693 000e 0123     		movs	r3, #1
 3694 0010 BB81     		strh	r3, [r7, #12]	@ movhi
1966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 3695              		.loc 1 1971 0
 3696 0012 3B68     		ldr	r3, [r7]
 3697 0014 5B88     		ldrh	r3, [r3, #2]
 3698 0016 002B     		cmp	r3, #0
 3699 0018 02D1     		bne	.L110
1972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 3700              		.loc 1 1973 0
 3701 001a 0223     		movs	r3, #2
 3702 001c FB81     		strh	r3, [r7, #14]	@ movhi
 3703 001e 01E0     		b	.L111
 3704              	.L110:
1974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 3705              		.loc 1 1977 0
 3706 0020 0023     		movs	r3, #0
 3707 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 3708              	.L111:
1978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 3709              		.loc 1 1980 0
 3710 0024 3B68     		ldr	r3, [r7]
 3711 0026 9B88     		ldrh	r3, [r3, #4]
 3712 0028 012B     		cmp	r3, #1
 3713 002a 02D1     		bne	.L112
1981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 3714              		.loc 1 1982 0
 3715 002c 0223     		movs	r3, #2
 3716 002e BB81     		strh	r3, [r7, #12]	@ movhi
 3717 0030 01E0     		b	.L113
 3718              	.L112:
1983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 3719              		.loc 1 1986 0
 3720 0032 0123     		movs	r3, #1
 3721 0034 BB81     		strh	r3, [r7, #12]	@ movhi
 3722              	.L113:
1987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3723              		.loc 1 1988 0
 3724 0036 3B68     		ldr	r3, [r7]
 3725 0038 1B88     		ldrh	r3, [r3]
 3726 003a 002B     		cmp	r3, #0
 3727 003c 1CD1     		bne	.L114
1989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3728              		.loc 1 1991 0
 3729 003e 3B68     		ldr	r3, [r7]
 3730 0040 5988     		ldrh	r1, [r3, #2]
 3731 0042 3B68     		ldr	r3, [r7]
 3732 0044 9A88     		ldrh	r2, [r3, #4]
 3733 0046 3B68     		ldr	r3, [r7]
 3734 0048 1B89     		ldrh	r3, [r3, #8]
 3735 004a 7868     		ldr	r0, [r7, #4]
 3736 004c FFF7FEFF 		bl	TI1_Config
1992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3737              		.loc 1 1994 0
 3738 0050 3B68     		ldr	r3, [r7]
 3739 0052 DB88     		ldrh	r3, [r3, #6]
 3740 0054 7868     		ldr	r0, [r7, #4]
 3741 0056 1946     		mov	r1, r3
 3742 0058 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3743              		.loc 1 1996 0
 3744 005c 3B68     		ldr	r3, [r7]
 3745 005e 1B89     		ldrh	r3, [r3, #8]
 3746 0060 F989     		ldrh	r1, [r7, #14]
 3747 0062 BA89     		ldrh	r2, [r7, #12]
 3748 0064 7868     		ldr	r0, [r7, #4]
 3749 0066 FFF7FEFF 		bl	TI2_Config
1997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3750              		.loc 1 1998 0
 3751 006a 3B68     		ldr	r3, [r7]
 3752 006c DB88     		ldrh	r3, [r3, #6]
 3753 006e 7868     		ldr	r0, [r7, #4]
 3754 0070 1946     		mov	r1, r3
 3755 0072 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3756 0076 1BE0     		b	.L109
 3757              	.L114:
1999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3758              		.loc 1 2003 0
 3759 0078 3B68     		ldr	r3, [r7]
 3760 007a 5988     		ldrh	r1, [r3, #2]
 3761 007c 3B68     		ldr	r3, [r7]
 3762 007e 9A88     		ldrh	r2, [r3, #4]
 3763 0080 3B68     		ldr	r3, [r7]
 3764 0082 1B89     		ldrh	r3, [r3, #8]
 3765 0084 7868     		ldr	r0, [r7, #4]
 3766 0086 FFF7FEFF 		bl	TI2_Config
2004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3767              		.loc 1 2006 0
 3768 008a 3B68     		ldr	r3, [r7]
 3769 008c DB88     		ldrh	r3, [r3, #6]
 3770 008e 7868     		ldr	r0, [r7, #4]
 3771 0090 1946     		mov	r1, r3
 3772 0092 FFF7FEFF 		bl	TIM_SetIC2Prescaler
2007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3773              		.loc 1 2008 0
 3774 0096 3B68     		ldr	r3, [r7]
 3775 0098 1B89     		ldrh	r3, [r3, #8]
 3776 009a F989     		ldrh	r1, [r7, #14]
 3777 009c BA89     		ldrh	r2, [r7, #12]
 3778 009e 7868     		ldr	r0, [r7, #4]
 3779 00a0 FFF7FEFF 		bl	TI1_Config
2009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3780              		.loc 1 2010 0
 3781 00a4 3B68     		ldr	r3, [r7]
 3782 00a6 DB88     		ldrh	r3, [r3, #6]
 3783 00a8 7868     		ldr	r0, [r7, #4]
 3784 00aa 1946     		mov	r1, r3
 3785 00ac FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3786              	.L109:
2011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3787              		.loc 1 2012 0
 3788 00b0 1037     		adds	r7, r7, #16
 3789 00b2 BD46     		mov	sp, r7
 3790              		@ sp needed
 3791 00b4 80BD     		pop	{r7, pc}
 3792              		.cfi_endproc
 3793              	.LFE162:
 3795 00b6 00BF     		.section	.text.TIM_GetCapture1,"ax",%progbits
 3796              		.align	2
 3797              		.global	TIM_GetCapture1
 3798              		.thumb
 3799              		.thumb_func
 3801              	TIM_GetCapture1:
 3802              	.LFB163:
2013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3803              		.loc 1 2020 0
 3804              		.cfi_startproc
 3805              		@ args = 0, pretend = 0, frame = 8
 3806              		@ frame_needed = 1, uses_anonymous_args = 0
 3807              		@ link register save eliminated.
 3808 0000 80B4     		push	{r7}
 3809              	.LCFI159:
 3810              		.cfi_def_cfa_offset 4
 3811              		.cfi_offset 7, -4
 3812 0002 83B0     		sub	sp, sp, #12
 3813              	.LCFI160:
 3814              		.cfi_def_cfa_offset 16
 3815 0004 00AF     		add	r7, sp, #0
 3816              	.LCFI161:
 3817              		.cfi_def_cfa_register 7
 3818 0006 7860     		str	r0, [r7, #4]
2021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 3819              		.loc 1 2025 0
 3820 0008 7B68     		ldr	r3, [r7, #4]
 3821 000a 5B6B     		ldr	r3, [r3, #52]
2026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3822              		.loc 1 2026 0
 3823 000c 1846     		mov	r0, r3
 3824 000e 0C37     		adds	r7, r7, #12
 3825 0010 BD46     		mov	sp, r7
 3826              		@ sp needed
 3827 0012 5DF8047B 		ldr	r7, [sp], #4
 3828 0016 7047     		bx	lr
 3829              		.cfi_endproc
 3830              	.LFE163:
 3832              		.section	.text.TIM_GetCapture2,"ax",%progbits
 3833              		.align	2
 3834              		.global	TIM_GetCapture2
 3835              		.thumb
 3836              		.thumb_func
 3838              	TIM_GetCapture2:
 3839              	.LFB164:
2027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3840              		.loc 1 2035 0
 3841              		.cfi_startproc
 3842              		@ args = 0, pretend = 0, frame = 8
 3843              		@ frame_needed = 1, uses_anonymous_args = 0
 3844              		@ link register save eliminated.
 3845 0000 80B4     		push	{r7}
 3846              	.LCFI162:
 3847              		.cfi_def_cfa_offset 4
 3848              		.cfi_offset 7, -4
 3849 0002 83B0     		sub	sp, sp, #12
 3850              	.LCFI163:
 3851              		.cfi_def_cfa_offset 16
 3852 0004 00AF     		add	r7, sp, #0
 3853              	.LCFI164:
 3854              		.cfi_def_cfa_register 7
 3855 0006 7860     		str	r0, [r7, #4]
2036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 3856              		.loc 1 2040 0
 3857 0008 7B68     		ldr	r3, [r7, #4]
 3858 000a 9B6B     		ldr	r3, [r3, #56]
2041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3859              		.loc 1 2041 0
 3860 000c 1846     		mov	r0, r3
 3861 000e 0C37     		adds	r7, r7, #12
 3862 0010 BD46     		mov	sp, r7
 3863              		@ sp needed
 3864 0012 5DF8047B 		ldr	r7, [sp], #4
 3865 0016 7047     		bx	lr
 3866              		.cfi_endproc
 3867              	.LFE164:
 3869              		.section	.text.TIM_GetCapture3,"ax",%progbits
 3870              		.align	2
 3871              		.global	TIM_GetCapture3
 3872              		.thumb
 3873              		.thumb_func
 3875              	TIM_GetCapture3:
 3876              	.LFB165:
2042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3877              		.loc 1 2049 0
 3878              		.cfi_startproc
 3879              		@ args = 0, pretend = 0, frame = 8
 3880              		@ frame_needed = 1, uses_anonymous_args = 0
 3881              		@ link register save eliminated.
 3882 0000 80B4     		push	{r7}
 3883              	.LCFI165:
 3884              		.cfi_def_cfa_offset 4
 3885              		.cfi_offset 7, -4
 3886 0002 83B0     		sub	sp, sp, #12
 3887              	.LCFI166:
 3888              		.cfi_def_cfa_offset 16
 3889 0004 00AF     		add	r7, sp, #0
 3890              	.LCFI167:
 3891              		.cfi_def_cfa_register 7
 3892 0006 7860     		str	r0, [r7, #4]
2050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 3893              		.loc 1 2054 0
 3894 0008 7B68     		ldr	r3, [r7, #4]
 3895 000a DB6B     		ldr	r3, [r3, #60]
2055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3896              		.loc 1 2055 0
 3897 000c 1846     		mov	r0, r3
 3898 000e 0C37     		adds	r7, r7, #12
 3899 0010 BD46     		mov	sp, r7
 3900              		@ sp needed
 3901 0012 5DF8047B 		ldr	r7, [sp], #4
 3902 0016 7047     		bx	lr
 3903              		.cfi_endproc
 3904              	.LFE165:
 3906              		.section	.text.TIM_GetCapture4,"ax",%progbits
 3907              		.align	2
 3908              		.global	TIM_GetCapture4
 3909              		.thumb
 3910              		.thumb_func
 3912              	TIM_GetCapture4:
 3913              	.LFB166:
2056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3914              		.loc 1 2063 0
 3915              		.cfi_startproc
 3916              		@ args = 0, pretend = 0, frame = 8
 3917              		@ frame_needed = 1, uses_anonymous_args = 0
 3918              		@ link register save eliminated.
 3919 0000 80B4     		push	{r7}
 3920              	.LCFI168:
 3921              		.cfi_def_cfa_offset 4
 3922              		.cfi_offset 7, -4
 3923 0002 83B0     		sub	sp, sp, #12
 3924              	.LCFI169:
 3925              		.cfi_def_cfa_offset 16
 3926 0004 00AF     		add	r7, sp, #0
 3927              	.LCFI170:
 3928              		.cfi_def_cfa_register 7
 3929 0006 7860     		str	r0, [r7, #4]
2064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 3930              		.loc 1 2068 0
 3931 0008 7B68     		ldr	r3, [r7, #4]
 3932 000a 1B6C     		ldr	r3, [r3, #64]
2069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3933              		.loc 1 2069 0
 3934 000c 1846     		mov	r0, r3
 3935 000e 0C37     		adds	r7, r7, #12
 3936 0010 BD46     		mov	sp, r7
 3937              		@ sp needed
 3938 0012 5DF8047B 		ldr	r7, [sp], #4
 3939 0016 7047     		bx	lr
 3940              		.cfi_endproc
 3941              	.LFE166:
 3943              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 3944              		.align	2
 3945              		.global	TIM_SetIC1Prescaler
 3946              		.thumb
 3947              		.thumb_func
 3949              	TIM_SetIC1Prescaler:
 3950              	.LFB167:
2070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3951              		.loc 1 2083 0
 3952              		.cfi_startproc
 3953              		@ args = 0, pretend = 0, frame = 8
 3954              		@ frame_needed = 1, uses_anonymous_args = 0
 3955              		@ link register save eliminated.
 3956 0000 80B4     		push	{r7}
 3957              	.LCFI171:
 3958              		.cfi_def_cfa_offset 4
 3959              		.cfi_offset 7, -4
 3960 0002 83B0     		sub	sp, sp, #12
 3961              	.LCFI172:
 3962              		.cfi_def_cfa_offset 16
 3963 0004 00AF     		add	r7, sp, #0
 3964              	.LCFI173:
 3965              		.cfi_def_cfa_register 7
 3966 0006 7860     		str	r0, [r7, #4]
 3967 0008 0B46     		mov	r3, r1
 3968 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 3969              		.loc 1 2089 0
 3970 000c 7B68     		ldr	r3, [r7, #4]
 3971 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3972 0010 9BB2     		uxth	r3, r3
 3973 0012 23F00C03 		bic	r3, r3, #12
 3974 0016 9AB2     		uxth	r2, r3
 3975 0018 7B68     		ldr	r3, [r7, #4]
 3976 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 3977              		.loc 1 2092 0
 3978 001c 7B68     		ldr	r3, [r7, #4]
 3979 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3980 0020 9AB2     		uxth	r2, r3
 3981 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3982 0024 1343     		orrs	r3, r3, r2
 3983 0026 9AB2     		uxth	r2, r3
 3984 0028 7B68     		ldr	r3, [r7, #4]
 3985 002a 1A83     		strh	r2, [r3, #24]	@ movhi
2093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3986              		.loc 1 2093 0
 3987 002c 0C37     		adds	r7, r7, #12
 3988 002e BD46     		mov	sp, r7
 3989              		@ sp needed
 3990 0030 5DF8047B 		ldr	r7, [sp], #4
 3991 0034 7047     		bx	lr
 3992              		.cfi_endproc
 3993              	.LFE167:
 3995 0036 00BF     		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 3996              		.align	2
 3997              		.global	TIM_SetIC2Prescaler
 3998              		.thumb
 3999              		.thumb_func
 4001              	TIM_SetIC2Prescaler:
 4002              	.LFB168:
2094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4003              		.loc 1 2108 0
 4004              		.cfi_startproc
 4005              		@ args = 0, pretend = 0, frame = 8
 4006              		@ frame_needed = 1, uses_anonymous_args = 0
 4007              		@ link register save eliminated.
 4008 0000 80B4     		push	{r7}
 4009              	.LCFI174:
 4010              		.cfi_def_cfa_offset 4
 4011              		.cfi_offset 7, -4
 4012 0002 83B0     		sub	sp, sp, #12
 4013              	.LCFI175:
 4014              		.cfi_def_cfa_offset 16
 4015 0004 00AF     		add	r7, sp, #0
 4016              	.LCFI176:
 4017              		.cfi_def_cfa_register 7
 4018 0006 7860     		str	r0, [r7, #4]
 4019 0008 0B46     		mov	r3, r1
 4020 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 4021              		.loc 1 2114 0
 4022 000c 7B68     		ldr	r3, [r7, #4]
 4023 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4024 0010 9BB2     		uxth	r3, r3
 4025 0012 23F44063 		bic	r3, r3, #3072
 4026 0016 9AB2     		uxth	r2, r3
 4027 0018 7B68     		ldr	r3, [r7, #4]
 4028 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 4029              		.loc 1 2117 0
 4030 001c 7B68     		ldr	r3, [r7, #4]
 4031 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4032 0020 9AB2     		uxth	r2, r3
 4033 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4034 0024 1B02     		lsls	r3, r3, #8
 4035 0026 9BB2     		uxth	r3, r3
 4036 0028 1343     		orrs	r3, r3, r2
 4037 002a 9AB2     		uxth	r2, r3
 4038 002c 7B68     		ldr	r3, [r7, #4]
 4039 002e 1A83     		strh	r2, [r3, #24]	@ movhi
2118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4040              		.loc 1 2118 0
 4041 0030 0C37     		adds	r7, r7, #12
 4042 0032 BD46     		mov	sp, r7
 4043              		@ sp needed
 4044 0034 5DF8047B 		ldr	r7, [sp], #4
 4045 0038 7047     		bx	lr
 4046              		.cfi_endproc
 4047              	.LFE168:
 4049 003a 00BF     		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 4050              		.align	2
 4051              		.global	TIM_SetIC3Prescaler
 4052              		.thumb
 4053              		.thumb_func
 4055              	TIM_SetIC3Prescaler:
 4056              	.LFB169:
2119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4057              		.loc 1 2132 0
 4058              		.cfi_startproc
 4059              		@ args = 0, pretend = 0, frame = 8
 4060              		@ frame_needed = 1, uses_anonymous_args = 0
 4061              		@ link register save eliminated.
 4062 0000 80B4     		push	{r7}
 4063              	.LCFI177:
 4064              		.cfi_def_cfa_offset 4
 4065              		.cfi_offset 7, -4
 4066 0002 83B0     		sub	sp, sp, #12
 4067              	.LCFI178:
 4068              		.cfi_def_cfa_offset 16
 4069 0004 00AF     		add	r7, sp, #0
 4070              	.LCFI179:
 4071              		.cfi_def_cfa_register 7
 4072 0006 7860     		str	r0, [r7, #4]
 4073 0008 0B46     		mov	r3, r1
 4074 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 4075              		.loc 1 2138 0
 4076 000c 7B68     		ldr	r3, [r7, #4]
 4077 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4078 0010 9BB2     		uxth	r3, r3
 4079 0012 23F00C03 		bic	r3, r3, #12
 4080 0016 9AB2     		uxth	r2, r3
 4081 0018 7B68     		ldr	r3, [r7, #4]
 4082 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 4083              		.loc 1 2141 0
 4084 001c 7B68     		ldr	r3, [r7, #4]
 4085 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4086 0020 9AB2     		uxth	r2, r3
 4087 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4088 0024 1343     		orrs	r3, r3, r2
 4089 0026 9AB2     		uxth	r2, r3
 4090 0028 7B68     		ldr	r3, [r7, #4]
 4091 002a 9A83     		strh	r2, [r3, #28]	@ movhi
2142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4092              		.loc 1 2142 0
 4093 002c 0C37     		adds	r7, r7, #12
 4094 002e BD46     		mov	sp, r7
 4095              		@ sp needed
 4096 0030 5DF8047B 		ldr	r7, [sp], #4
 4097 0034 7047     		bx	lr
 4098              		.cfi_endproc
 4099              	.LFE169:
 4101 0036 00BF     		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 4102              		.align	2
 4103              		.global	TIM_SetIC4Prescaler
 4104              		.thumb
 4105              		.thumb_func
 4107              	TIM_SetIC4Prescaler:
 4108              	.LFB170:
2143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4109              		.loc 1 2156 0
 4110              		.cfi_startproc
 4111              		@ args = 0, pretend = 0, frame = 8
 4112              		@ frame_needed = 1, uses_anonymous_args = 0
 4113              		@ link register save eliminated.
 4114 0000 80B4     		push	{r7}
 4115              	.LCFI180:
 4116              		.cfi_def_cfa_offset 4
 4117              		.cfi_offset 7, -4
 4118 0002 83B0     		sub	sp, sp, #12
 4119              	.LCFI181:
 4120              		.cfi_def_cfa_offset 16
 4121 0004 00AF     		add	r7, sp, #0
 4122              	.LCFI182:
 4123              		.cfi_def_cfa_register 7
 4124 0006 7860     		str	r0, [r7, #4]
 4125 0008 0B46     		mov	r3, r1
 4126 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 4127              		.loc 1 2162 0
 4128 000c 7B68     		ldr	r3, [r7, #4]
 4129 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4130 0010 9BB2     		uxth	r3, r3
 4131 0012 23F44063 		bic	r3, r3, #3072
 4132 0016 9AB2     		uxth	r2, r3
 4133 0018 7B68     		ldr	r3, [r7, #4]
 4134 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 4135              		.loc 1 2165 0
 4136 001c 7B68     		ldr	r3, [r7, #4]
 4137 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4138 0020 9AB2     		uxth	r2, r3
 4139 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4140 0024 1B02     		lsls	r3, r3, #8
 4141 0026 9BB2     		uxth	r3, r3
 4142 0028 1343     		orrs	r3, r3, r2
 4143 002a 9AB2     		uxth	r2, r3
 4144 002c 7B68     		ldr	r3, [r7, #4]
 4145 002e 9A83     		strh	r2, [r3, #28]	@ movhi
2166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4146              		.loc 1 2166 0
 4147 0030 0C37     		adds	r7, r7, #12
 4148 0032 BD46     		mov	sp, r7
 4149              		@ sp needed
 4150 0034 5DF8047B 		ldr	r7, [sp], #4
 4151 0038 7047     		bx	lr
 4152              		.cfi_endproc
 4153              	.LFE170:
 4155 003a 00BF     		.section	.text.TIM_BDTRConfig,"ax",%progbits
 4156              		.align	2
 4157              		.global	TIM_BDTRConfig
 4158              		.thumb
 4159              		.thumb_func
 4161              	TIM_BDTRConfig:
 4162              	.LFB171:
2167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4163              		.loc 1 2209 0
 4164              		.cfi_startproc
 4165              		@ args = 0, pretend = 0, frame = 8
 4166              		@ frame_needed = 1, uses_anonymous_args = 0
 4167              		@ link register save eliminated.
 4168 0000 80B4     		push	{r7}
 4169              	.LCFI183:
 4170              		.cfi_def_cfa_offset 4
 4171              		.cfi_offset 7, -4
 4172 0002 83B0     		sub	sp, sp, #12
 4173              	.LCFI184:
 4174              		.cfi_def_cfa_offset 16
 4175 0004 00AF     		add	r7, sp, #0
 4176              	.LCFI185:
 4177              		.cfi_def_cfa_register 7
 4178 0006 7860     		str	r0, [r7, #4]
 4179 0008 3960     		str	r1, [r7]
2210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4180              		.loc 1 2221 0
 4181 000a 3B68     		ldr	r3, [r7]
 4182 000c 1A88     		ldrh	r2, [r3]
 4183 000e 3B68     		ldr	r3, [r7]
 4184 0010 5B88     		ldrh	r3, [r3, #2]
 4185 0012 1343     		orrs	r3, r3, r2
 4186 0014 9AB2     		uxth	r2, r3
2222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4187              		.loc 1 2222 0
 4188 0016 3B68     		ldr	r3, [r7]
 4189 0018 9B88     		ldrh	r3, [r3, #4]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4190              		.loc 1 2221 0
 4191 001a 1343     		orrs	r3, r3, r2
 4192 001c 9AB2     		uxth	r2, r3
 4193              		.loc 1 2222 0
 4194 001e 3B68     		ldr	r3, [r7]
 4195 0020 DB88     		ldrh	r3, [r3, #6]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4196              		.loc 1 2221 0
 4197 0022 1343     		orrs	r3, r3, r2
 4198 0024 9AB2     		uxth	r2, r3
2223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4199              		.loc 1 2223 0
 4200 0026 3B68     		ldr	r3, [r7]
 4201 0028 1B89     		ldrh	r3, [r3, #8]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4202              		.loc 1 2221 0
 4203 002a 1343     		orrs	r3, r3, r2
 4204 002c 9AB2     		uxth	r2, r3
 4205              		.loc 1 2223 0
 4206 002e 3B68     		ldr	r3, [r7]
 4207 0030 5B89     		ldrh	r3, [r3, #10]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4208              		.loc 1 2221 0
 4209 0032 1343     		orrs	r3, r3, r2
 4210 0034 9AB2     		uxth	r2, r3
2224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 4211              		.loc 1 2224 0
 4212 0036 3B68     		ldr	r3, [r7]
 4213 0038 9B89     		ldrh	r3, [r3, #12]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4214              		.loc 1 2221 0
 4215 003a 1343     		orrs	r3, r3, r2
 4216 003c 9AB2     		uxth	r2, r3
 4217 003e 7B68     		ldr	r3, [r7, #4]
 4218 0040 A3F84420 		strh	r2, [r3, #68]	@ movhi
2225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4219              		.loc 1 2225 0
 4220 0044 0C37     		adds	r7, r7, #12
 4221 0046 BD46     		mov	sp, r7
 4222              		@ sp needed
 4223 0048 5DF8047B 		ldr	r7, [sp], #4
 4224 004c 7047     		bx	lr
 4225              		.cfi_endproc
 4226              	.LFE171:
 4228 004e 00BF     		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 4229              		.align	2
 4230              		.global	TIM_BDTRStructInit
 4231              		.thumb
 4232              		.thumb_func
 4234              	TIM_BDTRStructInit:
 4235              	.LFB172:
2226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4236              		.loc 1 2234 0
 4237              		.cfi_startproc
 4238              		@ args = 0, pretend = 0, frame = 8
 4239              		@ frame_needed = 1, uses_anonymous_args = 0
 4240              		@ link register save eliminated.
 4241 0000 80B4     		push	{r7}
 4242              	.LCFI186:
 4243              		.cfi_def_cfa_offset 4
 4244              		.cfi_offset 7, -4
 4245 0002 83B0     		sub	sp, sp, #12
 4246              	.LCFI187:
 4247              		.cfi_def_cfa_offset 16
 4248 0004 00AF     		add	r7, sp, #0
 4249              	.LCFI188:
 4250              		.cfi_def_cfa_register 7
 4251 0006 7860     		str	r0, [r7, #4]
2235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 4252              		.loc 1 2236 0
 4253 0008 7B68     		ldr	r3, [r7, #4]
 4254 000a 0022     		movs	r2, #0
 4255 000c 1A80     		strh	r2, [r3]	@ movhi
2237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 4256              		.loc 1 2237 0
 4257 000e 7B68     		ldr	r3, [r7, #4]
 4258 0010 0022     		movs	r2, #0
 4259 0012 5A80     		strh	r2, [r3, #2]	@ movhi
2238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 4260              		.loc 1 2238 0
 4261 0014 7B68     		ldr	r3, [r7, #4]
 4262 0016 0022     		movs	r2, #0
 4263 0018 9A80     		strh	r2, [r3, #4]	@ movhi
2239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 4264              		.loc 1 2239 0
 4265 001a 7B68     		ldr	r3, [r7, #4]
 4266 001c 0022     		movs	r2, #0
 4267 001e DA80     		strh	r2, [r3, #6]	@ movhi
2240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 4268              		.loc 1 2240 0
 4269 0020 7B68     		ldr	r3, [r7, #4]
 4270 0022 0022     		movs	r2, #0
 4271 0024 1A81     		strh	r2, [r3, #8]	@ movhi
2241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 4272              		.loc 1 2241 0
 4273 0026 7B68     		ldr	r3, [r7, #4]
 4274 0028 0022     		movs	r2, #0
 4275 002a 5A81     		strh	r2, [r3, #10]	@ movhi
2242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 4276              		.loc 1 2242 0
 4277 002c 7B68     		ldr	r3, [r7, #4]
 4278 002e 0022     		movs	r2, #0
 4279 0030 9A81     		strh	r2, [r3, #12]	@ movhi
2243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4280              		.loc 1 2243 0
 4281 0032 0C37     		adds	r7, r7, #12
 4282 0034 BD46     		mov	sp, r7
 4283              		@ sp needed
 4284 0036 5DF8047B 		ldr	r7, [sp], #4
 4285 003a 7047     		bx	lr
 4286              		.cfi_endproc
 4287              	.LFE172:
 4289              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 4290              		.align	2
 4291              		.global	TIM_CtrlPWMOutputs
 4292              		.thumb
 4293              		.thumb_func
 4295              	TIM_CtrlPWMOutputs:
 4296              	.LFB173:
2244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4297              		.loc 1 2253 0
 4298              		.cfi_startproc
 4299              		@ args = 0, pretend = 0, frame = 8
 4300              		@ frame_needed = 1, uses_anonymous_args = 0
 4301              		@ link register save eliminated.
 4302 0000 80B4     		push	{r7}
 4303              	.LCFI189:
 4304              		.cfi_def_cfa_offset 4
 4305              		.cfi_offset 7, -4
 4306 0002 83B0     		sub	sp, sp, #12
 4307              	.LCFI190:
 4308              		.cfi_def_cfa_offset 16
 4309 0004 00AF     		add	r7, sp, #0
 4310              	.LCFI191:
 4311              		.cfi_def_cfa_register 7
 4312 0006 7860     		str	r0, [r7, #4]
 4313 0008 0B46     		mov	r3, r1
 4314 000a FB70     		strb	r3, [r7, #3]
2254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4315              		.loc 1 2258 0
 4316 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4317 000e 002B     		cmp	r3, #0
 4318 0010 0CD0     		beq	.L131
2259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 4319              		.loc 1 2261 0
 4320 0012 7B68     		ldr	r3, [r7, #4]
 4321 0014 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4322 0018 9BB2     		uxth	r3, r3
 4323 001a 6FEA4343 		mvn	r3, r3, lsl #17
 4324 001e 6FEA5343 		mvn	r3, r3, lsr #17
 4325 0022 9AB2     		uxth	r2, r3
 4326 0024 7B68     		ldr	r3, [r7, #4]
 4327 0026 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4328 002a 09E0     		b	.L130
 4329              	.L131:
2262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 4330              		.loc 1 2266 0
 4331 002c 7B68     		ldr	r3, [r7, #4]
 4332 002e B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4333 0032 9BB2     		uxth	r3, r3
 4334 0034 C3F30E03 		ubfx	r3, r3, #0, #15
 4335 0038 9AB2     		uxth	r2, r3
 4336 003a 7B68     		ldr	r3, [r7, #4]
 4337 003c A3F84420 		strh	r2, [r3, #68]	@ movhi
 4338              	.L130:
2267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4339              		.loc 1 2268 0
 4340 0040 0C37     		adds	r7, r7, #12
 4341 0042 BD46     		mov	sp, r7
 4342              		@ sp needed
 4343 0044 5DF8047B 		ldr	r7, [sp], #4
 4344 0048 7047     		bx	lr
 4345              		.cfi_endproc
 4346              	.LFE173:
 4348 004a 00BF     		.section	.text.TIM_SelectCOM,"ax",%progbits
 4349              		.align	2
 4350              		.global	TIM_SelectCOM
 4351              		.thumb
 4352              		.thumb_func
 4354              	TIM_SelectCOM:
 4355              	.LFB174:
2269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4356              		.loc 1 2278 0
 4357              		.cfi_startproc
 4358              		@ args = 0, pretend = 0, frame = 8
 4359              		@ frame_needed = 1, uses_anonymous_args = 0
 4360              		@ link register save eliminated.
 4361 0000 80B4     		push	{r7}
 4362              	.LCFI192:
 4363              		.cfi_def_cfa_offset 4
 4364              		.cfi_offset 7, -4
 4365 0002 83B0     		sub	sp, sp, #12
 4366              	.LCFI193:
 4367              		.cfi_def_cfa_offset 16
 4368 0004 00AF     		add	r7, sp, #0
 4369              	.LCFI194:
 4370              		.cfi_def_cfa_register 7
 4371 0006 7860     		str	r0, [r7, #4]
 4372 0008 0B46     		mov	r3, r1
 4373 000a FB70     		strb	r3, [r7, #3]
2279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4374              		.loc 1 2283 0
 4375 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4376 000e 002B     		cmp	r3, #0
 4377 0010 08D0     		beq	.L134
2284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 4378              		.loc 1 2286 0
 4379 0012 7B68     		ldr	r3, [r7, #4]
 4380 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4381 0016 9BB2     		uxth	r3, r3
 4382 0018 43F00403 		orr	r3, r3, #4
 4383 001c 9AB2     		uxth	r2, r3
 4384 001e 7B68     		ldr	r3, [r7, #4]
 4385 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4386 0022 07E0     		b	.L133
 4387              	.L134:
2287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 4388              		.loc 1 2291 0
 4389 0024 7B68     		ldr	r3, [r7, #4]
 4390 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4391 0028 9BB2     		uxth	r3, r3
 4392 002a 23F00403 		bic	r3, r3, #4
 4393 002e 9AB2     		uxth	r2, r3
 4394 0030 7B68     		ldr	r3, [r7, #4]
 4395 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4396              	.L133:
2292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4397              		.loc 1 2293 0
 4398 0034 0C37     		adds	r7, r7, #12
 4399 0036 BD46     		mov	sp, r7
 4400              		@ sp needed
 4401 0038 5DF8047B 		ldr	r7, [sp], #4
 4402 003c 7047     		bx	lr
 4403              		.cfi_endproc
 4404              	.LFE174:
 4406 003e 00BF     		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 4407              		.align	2
 4408              		.global	TIM_CCPreloadControl
 4409              		.thumb
 4410              		.thumb_func
 4412              	TIM_CCPreloadControl:
 4413              	.LFB175:
2294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4414              		.loc 1 2303 0
 4415              		.cfi_startproc
 4416              		@ args = 0, pretend = 0, frame = 8
 4417              		@ frame_needed = 1, uses_anonymous_args = 0
 4418              		@ link register save eliminated.
 4419 0000 80B4     		push	{r7}
 4420              	.LCFI195:
 4421              		.cfi_def_cfa_offset 4
 4422              		.cfi_offset 7, -4
 4423 0002 83B0     		sub	sp, sp, #12
 4424              	.LCFI196:
 4425              		.cfi_def_cfa_offset 16
 4426 0004 00AF     		add	r7, sp, #0
 4427              	.LCFI197:
 4428              		.cfi_def_cfa_register 7
 4429 0006 7860     		str	r0, [r7, #4]
 4430 0008 0B46     		mov	r3, r1
 4431 000a FB70     		strb	r3, [r7, #3]
2304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4432              		.loc 1 2307 0
 4433 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4434 000e 002B     		cmp	r3, #0
 4435 0010 08D0     		beq	.L137
2308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 4436              		.loc 1 2310 0
 4437 0012 7B68     		ldr	r3, [r7, #4]
 4438 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4439 0016 9BB2     		uxth	r3, r3
 4440 0018 43F00103 		orr	r3, r3, #1
 4441 001c 9AB2     		uxth	r2, r3
 4442 001e 7B68     		ldr	r3, [r7, #4]
 4443 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4444 0022 07E0     		b	.L136
 4445              	.L137:
2311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 4446              		.loc 1 2315 0
 4447 0024 7B68     		ldr	r3, [r7, #4]
 4448 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4449 0028 9BB2     		uxth	r3, r3
 4450 002a 23F00103 		bic	r3, r3, #1
 4451 002e 9AB2     		uxth	r2, r3
 4452 0030 7B68     		ldr	r3, [r7, #4]
 4453 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4454              	.L136:
2316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4455              		.loc 1 2317 0
 4456 0034 0C37     		adds	r7, r7, #12
 4457 0036 BD46     		mov	sp, r7
 4458              		@ sp needed
 4459 0038 5DF8047B 		ldr	r7, [sp], #4
 4460 003c 7047     		bx	lr
 4461              		.cfi_endproc
 4462              	.LFE175:
 4464 003e 00BF     		.section	.text.TIM_ITConfig,"ax",%progbits
 4465              		.align	2
 4466              		.global	TIM_ITConfig
 4467              		.thumb
 4468              		.thumb_func
 4470              	TIM_ITConfig:
 4471              	.LFB176:
2318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4472              		.loc 1 2360 0
 4473              		.cfi_startproc
 4474              		@ args = 0, pretend = 0, frame = 8
 4475              		@ frame_needed = 1, uses_anonymous_args = 0
 4476              		@ link register save eliminated.
 4477 0000 80B4     		push	{r7}
 4478              	.LCFI198:
 4479              		.cfi_def_cfa_offset 4
 4480              		.cfi_offset 7, -4
 4481 0002 83B0     		sub	sp, sp, #12
 4482              	.LCFI199:
 4483              		.cfi_def_cfa_offset 16
 4484 0004 00AF     		add	r7, sp, #0
 4485              	.LCFI200:
 4486              		.cfi_def_cfa_register 7
 4487 0006 7860     		str	r0, [r7, #4]
 4488 0008 1346     		mov	r3, r2
 4489 000a 0A46     		mov	r2, r1	@ movhi
 4490 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4491 000e 7B70     		strb	r3, [r7, #1]
2361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4492              		.loc 1 2366 0
 4493 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4494 0012 002B     		cmp	r3, #0
 4495 0014 08D0     		beq	.L140
2367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 4496              		.loc 1 2369 0
 4497 0016 7B68     		ldr	r3, [r7, #4]
 4498 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4499 001a 9AB2     		uxth	r2, r3
 4500 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4501 001e 1343     		orrs	r3, r3, r2
 4502 0020 9AB2     		uxth	r2, r3
 4503 0022 7B68     		ldr	r3, [r7, #4]
 4504 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 4505 0026 09E0     		b	.L139
 4506              	.L140:
2370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 4507              		.loc 1 2374 0
 4508 0028 7B68     		ldr	r3, [r7, #4]
 4509 002a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4510 002c 9AB2     		uxth	r2, r3
 4511 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4512 0030 DB43     		mvns	r3, r3
 4513 0032 9BB2     		uxth	r3, r3
 4514 0034 1340     		ands	r3, r3, r2
 4515 0036 9AB2     		uxth	r2, r3
 4516 0038 7B68     		ldr	r3, [r7, #4]
 4517 003a 9A81     		strh	r2, [r3, #12]	@ movhi
 4518              	.L139:
2375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4519              		.loc 1 2376 0
 4520 003c 0C37     		adds	r7, r7, #12
 4521 003e BD46     		mov	sp, r7
 4522              		@ sp needed
 4523 0040 5DF8047B 		ldr	r7, [sp], #4
 4524 0044 7047     		bx	lr
 4525              		.cfi_endproc
 4526              	.LFE176:
 4528 0046 00BF     		.section	.text.TIM_GenerateEvent,"ax",%progbits
 4529              		.align	2
 4530              		.global	TIM_GenerateEvent
 4531              		.thumb
 4532              		.thumb_func
 4534              	TIM_GenerateEvent:
 4535              	.LFB177:
2377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4536              		.loc 1 2398 0
 4537              		.cfi_startproc
 4538              		@ args = 0, pretend = 0, frame = 8
 4539              		@ frame_needed = 1, uses_anonymous_args = 0
 4540              		@ link register save eliminated.
 4541 0000 80B4     		push	{r7}
 4542              	.LCFI201:
 4543              		.cfi_def_cfa_offset 4
 4544              		.cfi_offset 7, -4
 4545 0002 83B0     		sub	sp, sp, #12
 4546              	.LCFI202:
 4547              		.cfi_def_cfa_offset 16
 4548 0004 00AF     		add	r7, sp, #0
 4549              	.LCFI203:
 4550              		.cfi_def_cfa_register 7
 4551 0006 7860     		str	r0, [r7, #4]
 4552 0008 0B46     		mov	r3, r1
 4553 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 4554              		.loc 1 2404 0
 4555 000c 7B68     		ldr	r3, [r7, #4]
 4556 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4557 0010 9A82     		strh	r2, [r3, #20]	@ movhi
2405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4558              		.loc 1 2405 0
 4559 0012 0C37     		adds	r7, r7, #12
 4560 0014 BD46     		mov	sp, r7
 4561              		@ sp needed
 4562 0016 5DF8047B 		ldr	r7, [sp], #4
 4563 001a 7047     		bx	lr
 4564              		.cfi_endproc
 4565              	.LFE177:
 4567              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 4568              		.align	2
 4569              		.global	TIM_GetFlagStatus
 4570              		.thumb
 4571              		.thumb_func
 4573              	TIM_GetFlagStatus:
 4574              	.LFB178:
2406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4575              		.loc 1 2431 0
 4576              		.cfi_startproc
 4577              		@ args = 0, pretend = 0, frame = 16
 4578              		@ frame_needed = 1, uses_anonymous_args = 0
 4579              		@ link register save eliminated.
 4580 0000 80B4     		push	{r7}
 4581              	.LCFI204:
 4582              		.cfi_def_cfa_offset 4
 4583              		.cfi_offset 7, -4
 4584 0002 85B0     		sub	sp, sp, #20
 4585              	.LCFI205:
 4586              		.cfi_def_cfa_offset 24
 4587 0004 00AF     		add	r7, sp, #0
 4588              	.LCFI206:
 4589              		.cfi_def_cfa_register 7
 4590 0006 7860     		str	r0, [r7, #4]
 4591 0008 0B46     		mov	r3, r1
 4592 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4593              		.loc 1 2432 0
 4594 000c 0023     		movs	r3, #0
 4595 000e FB73     		strb	r3, [r7, #15]
2433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 4596              		.loc 1 2438 0
 4597 0010 7B68     		ldr	r3, [r7, #4]
 4598 0012 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4599 0014 9AB2     		uxth	r2, r3
 4600 0016 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4601 0018 1340     		ands	r3, r3, r2
 4602 001a 9BB2     		uxth	r3, r3
 4603 001c 002B     		cmp	r3, #0
 4604 001e 02D0     		beq	.L144
2439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4605              		.loc 1 2440 0
 4606 0020 0123     		movs	r3, #1
 4607 0022 FB73     		strb	r3, [r7, #15]
 4608 0024 01E0     		b	.L145
 4609              	.L144:
2441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4610              		.loc 1 2444 0
 4611 0026 0023     		movs	r3, #0
 4612 0028 FB73     		strb	r3, [r7, #15]
 4613              	.L145:
2445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4614              		.loc 1 2446 0
 4615 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4616              		.loc 1 2447 0
 4617 002c 1846     		mov	r0, r3
 4618 002e 1437     		adds	r7, r7, #20
 4619 0030 BD46     		mov	sp, r7
 4620              		@ sp needed
 4621 0032 5DF8047B 		ldr	r7, [sp], #4
 4622 0036 7047     		bx	lr
 4623              		.cfi_endproc
 4624              	.LFE178:
 4626              		.section	.text.TIM_ClearFlag,"ax",%progbits
 4627              		.align	2
 4628              		.global	TIM_ClearFlag
 4629              		.thumb
 4630              		.thumb_func
 4632              	TIM_ClearFlag:
 4633              	.LFB179:
2448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4634              		.loc 1 2473 0
 4635              		.cfi_startproc
 4636              		@ args = 0, pretend = 0, frame = 8
 4637              		@ frame_needed = 1, uses_anonymous_args = 0
 4638              		@ link register save eliminated.
 4639 0000 80B4     		push	{r7}
 4640              	.LCFI207:
 4641              		.cfi_def_cfa_offset 4
 4642              		.cfi_offset 7, -4
 4643 0002 83B0     		sub	sp, sp, #12
 4644              	.LCFI208:
 4645              		.cfi_def_cfa_offset 16
 4646 0004 00AF     		add	r7, sp, #0
 4647              	.LCFI209:
 4648              		.cfi_def_cfa_register 7
 4649 0006 7860     		str	r0, [r7, #4]
 4650 0008 0B46     		mov	r3, r1
 4651 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 4652              		.loc 1 2478 0
 4653 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4654 000e DB43     		mvns	r3, r3
 4655 0010 9AB2     		uxth	r2, r3
 4656 0012 7B68     		ldr	r3, [r7, #4]
 4657 0014 1A82     		strh	r2, [r3, #16]	@ movhi
2479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4658              		.loc 1 2479 0
 4659 0016 0C37     		adds	r7, r7, #12
 4660 0018 BD46     		mov	sp, r7
 4661              		@ sp needed
 4662 001a 5DF8047B 		ldr	r7, [sp], #4
 4663 001e 7047     		bx	lr
 4664              		.cfi_endproc
 4665              	.LFE179:
 4667              		.section	.text.TIM_GetITStatus,"ax",%progbits
 4668              		.align	2
 4669              		.global	TIM_GetITStatus
 4670              		.thumb
 4671              		.thumb_func
 4673              	TIM_GetITStatus:
 4674              	.LFB180:
2480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4675              		.loc 1 2501 0
 4676              		.cfi_startproc
 4677              		@ args = 0, pretend = 0, frame = 16
 4678              		@ frame_needed = 1, uses_anonymous_args = 0
 4679              		@ link register save eliminated.
 4680 0000 80B4     		push	{r7}
 4681              	.LCFI210:
 4682              		.cfi_def_cfa_offset 4
 4683              		.cfi_offset 7, -4
 4684 0002 85B0     		sub	sp, sp, #20
 4685              	.LCFI211:
 4686              		.cfi_def_cfa_offset 24
 4687 0004 00AF     		add	r7, sp, #0
 4688              	.LCFI212:
 4689              		.cfi_def_cfa_register 7
 4690 0006 7860     		str	r0, [r7, #4]
 4691 0008 0B46     		mov	r3, r1
 4692 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4693              		.loc 1 2502 0
 4694 000c 0023     		movs	r3, #0
 4695 000e FB73     		strb	r3, [r7, #15]
2503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 4696              		.loc 1 2503 0
 4697 0010 0023     		movs	r3, #0
 4698 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 4699 0014 0023     		movs	r3, #0
 4700 0016 7B81     		strh	r3, [r7, #10]	@ movhi
2504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 4701              		.loc 1 2508 0
 4702 0018 7B68     		ldr	r3, [r7, #4]
 4703 001a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4704 001c 9AB2     		uxth	r2, r3
 4705 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4706 0020 1340     		ands	r3, r3, r2
 4707 0022 BB81     		strh	r3, [r7, #12]	@ movhi
2509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 4708              		.loc 1 2510 0
 4709 0024 7B68     		ldr	r3, [r7, #4]
 4710 0026 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4711 0028 9AB2     		uxth	r2, r3
 4712 002a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4713 002c 1340     		ands	r3, r3, r2
 4714 002e 7B81     		strh	r3, [r7, #10]	@ movhi
2511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4715              		.loc 1 2511 0
 4716 0030 BB89     		ldrh	r3, [r7, #12]
 4717 0032 002B     		cmp	r3, #0
 4718 0034 05D0     		beq	.L149
 4719              		.loc 1 2511 0 is_stmt 0 discriminator 1
 4720 0036 7B89     		ldrh	r3, [r7, #10]
 4721 0038 002B     		cmp	r3, #0
 4722 003a 02D0     		beq	.L149
2512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4723              		.loc 1 2513 0 is_stmt 1
 4724 003c 0123     		movs	r3, #1
 4725 003e FB73     		strb	r3, [r7, #15]
 4726 0040 01E0     		b	.L150
 4727              	.L149:
2514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4728              		.loc 1 2517 0
 4729 0042 0023     		movs	r3, #0
 4730 0044 FB73     		strb	r3, [r7, #15]
 4731              	.L150:
2518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4732              		.loc 1 2519 0
 4733 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4734              		.loc 1 2520 0
 4735 0048 1846     		mov	r0, r3
 4736 004a 1437     		adds	r7, r7, #20
 4737 004c BD46     		mov	sp, r7
 4738              		@ sp needed
 4739 004e 5DF8047B 		ldr	r7, [sp], #4
 4740 0052 7047     		bx	lr
 4741              		.cfi_endproc
 4742              	.LFE180:
 4744              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 4745              		.align	2
 4746              		.global	TIM_ClearITPendingBit
 4747              		.thumb
 4748              		.thumb_func
 4750              	TIM_ClearITPendingBit:
 4751              	.LFB181:
2521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4752              		.loc 1 2542 0
 4753              		.cfi_startproc
 4754              		@ args = 0, pretend = 0, frame = 8
 4755              		@ frame_needed = 1, uses_anonymous_args = 0
 4756              		@ link register save eliminated.
 4757 0000 80B4     		push	{r7}
 4758              	.LCFI213:
 4759              		.cfi_def_cfa_offset 4
 4760              		.cfi_offset 7, -4
 4761 0002 83B0     		sub	sp, sp, #12
 4762              	.LCFI214:
 4763              		.cfi_def_cfa_offset 16
 4764 0004 00AF     		add	r7, sp, #0
 4765              	.LCFI215:
 4766              		.cfi_def_cfa_register 7
 4767 0006 7860     		str	r0, [r7, #4]
 4768 0008 0B46     		mov	r3, r1
 4769 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 4770              		.loc 1 2547 0
 4771 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4772 000e DB43     		mvns	r3, r3
 4773 0010 9AB2     		uxth	r2, r3
 4774 0012 7B68     		ldr	r3, [r7, #4]
 4775 0014 1A82     		strh	r2, [r3, #16]	@ movhi
2548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4776              		.loc 1 2548 0
 4777 0016 0C37     		adds	r7, r7, #12
 4778 0018 BD46     		mov	sp, r7
 4779              		@ sp needed
 4780 001a 5DF8047B 		ldr	r7, [sp], #4
 4781 001e 7047     		bx	lr
 4782              		.cfi_endproc
 4783              	.LFE181:
 4785              		.section	.text.TIM_DMAConfig,"ax",%progbits
 4786              		.align	2
 4787              		.global	TIM_DMAConfig
 4788              		.thumb
 4789              		.thumb_func
 4791              	TIM_DMAConfig:
 4792              	.LFB182:
2549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4793              		.loc 1 2579 0
 4794              		.cfi_startproc
 4795              		@ args = 0, pretend = 0, frame = 8
 4796              		@ frame_needed = 1, uses_anonymous_args = 0
 4797              		@ link register save eliminated.
 4798 0000 80B4     		push	{r7}
 4799              	.LCFI216:
 4800              		.cfi_def_cfa_offset 4
 4801              		.cfi_offset 7, -4
 4802 0002 83B0     		sub	sp, sp, #12
 4803              	.LCFI217:
 4804              		.cfi_def_cfa_offset 16
 4805 0004 00AF     		add	r7, sp, #0
 4806              	.LCFI218:
 4807              		.cfi_def_cfa_register 7
 4808 0006 7860     		str	r0, [r7, #4]
 4809 0008 1346     		mov	r3, r2
 4810 000a 0A46     		mov	r2, r1	@ movhi
 4811 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4812 000e 3B80     		strh	r3, [r7]	@ movhi
2580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 4813              		.loc 1 2586 0
 4814 0010 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4815 0012 3B88     		ldrh	r3, [r7]	@ movhi
 4816 0014 1343     		orrs	r3, r3, r2
 4817 0016 9AB2     		uxth	r2, r3
 4818 0018 7B68     		ldr	r3, [r7, #4]
 4819 001a A3F84820 		strh	r2, [r3, #72]	@ movhi
2587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4820              		.loc 1 2587 0
 4821 001e 0C37     		adds	r7, r7, #12
 4822 0020 BD46     		mov	sp, r7
 4823              		@ sp needed
 4824 0022 5DF8047B 		ldr	r7, [sp], #4
 4825 0026 7047     		bx	lr
 4826              		.cfi_endproc
 4827              	.LFE182:
 4829              		.section	.text.TIM_DMACmd,"ax",%progbits
 4830              		.align	2
 4831              		.global	TIM_DMACmd
 4832              		.thumb
 4833              		.thumb_func
 4835              	TIM_DMACmd:
 4836              	.LFB183:
2588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4837              		.loc 1 2606 0
 4838              		.cfi_startproc
 4839              		@ args = 0, pretend = 0, frame = 8
 4840              		@ frame_needed = 1, uses_anonymous_args = 0
 4841              		@ link register save eliminated.
 4842 0000 80B4     		push	{r7}
 4843              	.LCFI219:
 4844              		.cfi_def_cfa_offset 4
 4845              		.cfi_offset 7, -4
 4846 0002 83B0     		sub	sp, sp, #12
 4847              	.LCFI220:
 4848              		.cfi_def_cfa_offset 16
 4849 0004 00AF     		add	r7, sp, #0
 4850              	.LCFI221:
 4851              		.cfi_def_cfa_register 7
 4852 0006 7860     		str	r0, [r7, #4]
 4853 0008 1346     		mov	r3, r2
 4854 000a 0A46     		mov	r2, r1	@ movhi
 4855 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4856 000e 7B70     		strb	r3, [r7, #1]
2607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4857              		.loc 1 2612 0
 4858 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4859 0012 002B     		cmp	r3, #0
 4860 0014 08D0     		beq	.L155
2613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 4861              		.loc 1 2615 0
 4862 0016 7B68     		ldr	r3, [r7, #4]
 4863 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4864 001a 9AB2     		uxth	r2, r3
 4865 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4866 001e 1343     		orrs	r3, r3, r2
 4867 0020 9AB2     		uxth	r2, r3
 4868 0022 7B68     		ldr	r3, [r7, #4]
 4869 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 4870 0026 09E0     		b	.L154
 4871              	.L155:
2616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 4872              		.loc 1 2620 0
 4873 0028 7B68     		ldr	r3, [r7, #4]
 4874 002a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4875 002c 9AB2     		uxth	r2, r3
 4876 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4877 0030 DB43     		mvns	r3, r3
 4878 0032 9BB2     		uxth	r3, r3
 4879 0034 1340     		ands	r3, r3, r2
 4880 0036 9AB2     		uxth	r2, r3
 4881 0038 7B68     		ldr	r3, [r7, #4]
 4882 003a 9A81     		strh	r2, [r3, #12]	@ movhi
 4883              	.L154:
2621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4884              		.loc 1 2622 0
 4885 003c 0C37     		adds	r7, r7, #12
 4886 003e BD46     		mov	sp, r7
 4887              		@ sp needed
 4888 0040 5DF8047B 		ldr	r7, [sp], #4
 4889 0044 7047     		bx	lr
 4890              		.cfi_endproc
 4891              	.LFE183:
 4893 0046 00BF     		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 4894              		.align	2
 4895              		.global	TIM_SelectCCDMA
 4896              		.thumb
 4897              		.thumb_func
 4899              	TIM_SelectCCDMA:
 4900              	.LFB184:
2623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4901              		.loc 1 2632 0
 4902              		.cfi_startproc
 4903              		@ args = 0, pretend = 0, frame = 8
 4904              		@ frame_needed = 1, uses_anonymous_args = 0
 4905              		@ link register save eliminated.
 4906 0000 80B4     		push	{r7}
 4907              	.LCFI222:
 4908              		.cfi_def_cfa_offset 4
 4909              		.cfi_offset 7, -4
 4910 0002 83B0     		sub	sp, sp, #12
 4911              	.LCFI223:
 4912              		.cfi_def_cfa_offset 16
 4913 0004 00AF     		add	r7, sp, #0
 4914              	.LCFI224:
 4915              		.cfi_def_cfa_register 7
 4916 0006 7860     		str	r0, [r7, #4]
 4917 0008 0B46     		mov	r3, r1
 4918 000a FB70     		strb	r3, [r7, #3]
2633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4919              		.loc 1 2637 0
 4920 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4921 000e 002B     		cmp	r3, #0
 4922 0010 08D0     		beq	.L158
2638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 4923              		.loc 1 2640 0
 4924 0012 7B68     		ldr	r3, [r7, #4]
 4925 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4926 0016 9BB2     		uxth	r3, r3
 4927 0018 43F00803 		orr	r3, r3, #8
 4928 001c 9AB2     		uxth	r2, r3
 4929 001e 7B68     		ldr	r3, [r7, #4]
 4930 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4931 0022 07E0     		b	.L157
 4932              	.L158:
2641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 4933              		.loc 1 2645 0
 4934 0024 7B68     		ldr	r3, [r7, #4]
 4935 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4936 0028 9BB2     		uxth	r3, r3
 4937 002a 23F00803 		bic	r3, r3, #8
 4938 002e 9AB2     		uxth	r2, r3
 4939 0030 7B68     		ldr	r3, [r7, #4]
 4940 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4941              	.L157:
2646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4942              		.loc 1 2647 0
 4943 0034 0C37     		adds	r7, r7, #12
 4944 0036 BD46     		mov	sp, r7
 4945              		@ sp needed
 4946 0038 5DF8047B 		ldr	r7, [sp], #4
 4947 003c 7047     		bx	lr
 4948              		.cfi_endproc
 4949              	.LFE184:
 4951 003e 00BF     		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 4952              		.align	2
 4953              		.global	TIM_InternalClockConfig
 4954              		.thumb
 4955              		.thumb_func
 4957              	TIM_InternalClockConfig:
 4958              	.LFB185:
2648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4959              		.loc 1 2671 0
 4960              		.cfi_startproc
 4961              		@ args = 0, pretend = 0, frame = 8
 4962              		@ frame_needed = 1, uses_anonymous_args = 0
 4963              		@ link register save eliminated.
 4964 0000 80B4     		push	{r7}
 4965              	.LCFI225:
 4966              		.cfi_def_cfa_offset 4
 4967              		.cfi_offset 7, -4
 4968 0002 83B0     		sub	sp, sp, #12
 4969              	.LCFI226:
 4970              		.cfi_def_cfa_offset 16
 4971 0004 00AF     		add	r7, sp, #0
 4972              	.LCFI227:
 4973              		.cfi_def_cfa_register 7
 4974 0006 7860     		str	r0, [r7, #4]
2672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 4975              		.loc 1 2676 0
 4976 0008 7B68     		ldr	r3, [r7, #4]
 4977 000a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4978 000c 9BB2     		uxth	r3, r3
 4979 000e 23F00703 		bic	r3, r3, #7
 4980 0012 9AB2     		uxth	r2, r3
 4981 0014 7B68     		ldr	r3, [r7, #4]
 4982 0016 1A81     		strh	r2, [r3, #8]	@ movhi
2677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4983              		.loc 1 2677 0
 4984 0018 0C37     		adds	r7, r7, #12
 4985 001a BD46     		mov	sp, r7
 4986              		@ sp needed
 4987 001c 5DF8047B 		ldr	r7, [sp], #4
 4988 0020 7047     		bx	lr
 4989              		.cfi_endproc
 4990              	.LFE185:
 4992 0022 00BF     		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 4993              		.align	2
 4994              		.global	TIM_ITRxExternalClockConfig
 4995              		.thumb
 4996              		.thumb_func
 4998              	TIM_ITRxExternalClockConfig:
 4999              	.LFB186:
2678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5000              		.loc 1 2692 0
 5001              		.cfi_startproc
 5002              		@ args = 0, pretend = 0, frame = 8
 5003              		@ frame_needed = 1, uses_anonymous_args = 0
 5004 0000 80B5     		push	{r7, lr}
 5005              	.LCFI228:
 5006              		.cfi_def_cfa_offset 8
 5007              		.cfi_offset 7, -8
 5008              		.cfi_offset 14, -4
 5009 0002 82B0     		sub	sp, sp, #8
 5010              	.LCFI229:
 5011              		.cfi_def_cfa_offset 16
 5012 0004 00AF     		add	r7, sp, #0
 5013              	.LCFI230:
 5014              		.cfi_def_cfa_register 7
 5015 0006 7860     		str	r0, [r7, #4]
 5016 0008 0B46     		mov	r3, r1
 5017 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 5018              		.loc 1 2698 0
 5019 000c 7B88     		ldrh	r3, [r7, #2]
 5020 000e 7868     		ldr	r0, [r7, #4]
 5021 0010 1946     		mov	r1, r3
 5022 0012 FFF7FEFF 		bl	TIM_SelectInputTrigger
2699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 5023              		.loc 1 2701 0
 5024 0016 7B68     		ldr	r3, [r7, #4]
 5025 0018 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5026 001a 9BB2     		uxth	r3, r3
 5027 001c 43F00703 		orr	r3, r3, #7
 5028 0020 9AB2     		uxth	r2, r3
 5029 0022 7B68     		ldr	r3, [r7, #4]
 5030 0024 1A81     		strh	r2, [r3, #8]	@ movhi
2702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5031              		.loc 1 2702 0
 5032 0026 0837     		adds	r7, r7, #8
 5033 0028 BD46     		mov	sp, r7
 5034              		@ sp needed
 5035 002a 80BD     		pop	{r7, pc}
 5036              		.cfi_endproc
 5037              	.LFE186:
 5039              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 5040              		.align	2
 5041              		.global	TIM_TIxExternalClockConfig
 5042              		.thumb
 5043              		.thumb_func
 5045              	TIM_TIxExternalClockConfig:
 5046              	.LFB187:
2703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5047              		.loc 1 2723 0
 5048              		.cfi_startproc
 5049              		@ args = 0, pretend = 0, frame = 16
 5050              		@ frame_needed = 1, uses_anonymous_args = 0
 5051 0000 80B5     		push	{r7, lr}
 5052              	.LCFI231:
 5053              		.cfi_def_cfa_offset 8
 5054              		.cfi_offset 7, -8
 5055              		.cfi_offset 14, -4
 5056 0002 84B0     		sub	sp, sp, #16
 5057              	.LCFI232:
 5058              		.cfi_def_cfa_offset 24
 5059 0004 00AF     		add	r7, sp, #0
 5060              	.LCFI233:
 5061              		.cfi_def_cfa_register 7
 5062 0006 F860     		str	r0, [r7, #12]
 5063 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5064 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5065 000c FB80     		strh	r3, [r7, #6]	@ movhi
2724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 5066              		.loc 1 2730 0
 5067 000e 7B89     		ldrh	r3, [r7, #10]
 5068 0010 602B     		cmp	r3, #96
 5069 0012 07D1     		bne	.L163
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 5070              		.loc 1 2732 0
 5071 0014 3A89     		ldrh	r2, [r7, #8]
 5072 0016 FB88     		ldrh	r3, [r7, #6]
 5073 0018 F868     		ldr	r0, [r7, #12]
 5074 001a 1146     		mov	r1, r2
 5075 001c 0122     		movs	r2, #1
 5076 001e FFF7FEFF 		bl	TI2_Config
 5077 0022 06E0     		b	.L164
 5078              	.L163:
2733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 5079              		.loc 1 2736 0
 5080 0024 3A89     		ldrh	r2, [r7, #8]
 5081 0026 FB88     		ldrh	r3, [r7, #6]
 5082 0028 F868     		ldr	r0, [r7, #12]
 5083 002a 1146     		mov	r1, r2
 5084 002c 0122     		movs	r2, #1
 5085 002e FFF7FEFF 		bl	TI1_Config
 5086              	.L164:
2737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 5087              		.loc 1 2739 0
 5088 0032 7B89     		ldrh	r3, [r7, #10]
 5089 0034 F868     		ldr	r0, [r7, #12]
 5090 0036 1946     		mov	r1, r3
 5091 0038 FFF7FEFF 		bl	TIM_SelectInputTrigger
2740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 5092              		.loc 1 2741 0
 5093 003c FB68     		ldr	r3, [r7, #12]
 5094 003e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5095 0040 9BB2     		uxth	r3, r3
 5096 0042 43F00703 		orr	r3, r3, #7
 5097 0046 9AB2     		uxth	r2, r3
 5098 0048 FB68     		ldr	r3, [r7, #12]
 5099 004a 1A81     		strh	r2, [r3, #8]	@ movhi
2742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5100              		.loc 1 2742 0
 5101 004c 1037     		adds	r7, r7, #16
 5102 004e BD46     		mov	sp, r7
 5103              		@ sp needed
 5104 0050 80BD     		pop	{r7, pc}
 5105              		.cfi_endproc
 5106              	.LFE187:
 5108 0052 00BF     		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 5109              		.align	2
 5110              		.global	TIM_ETRClockMode1Config
 5111              		.thumb
 5112              		.thumb_func
 5114              	TIM_ETRClockMode1Config:
 5115              	.LFB188:
2743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5116              		.loc 1 2763 0
 5117              		.cfi_startproc
 5118              		@ args = 0, pretend = 0, frame = 24
 5119              		@ frame_needed = 1, uses_anonymous_args = 0
 5120 0000 80B5     		push	{r7, lr}
 5121              	.LCFI234:
 5122              		.cfi_def_cfa_offset 8
 5123              		.cfi_offset 7, -8
 5124              		.cfi_offset 14, -4
 5125 0002 86B0     		sub	sp, sp, #24
 5126              	.LCFI235:
 5127              		.cfi_def_cfa_offset 32
 5128 0004 00AF     		add	r7, sp, #0
 5129              	.LCFI236:
 5130              		.cfi_def_cfa_register 7
 5131 0006 F860     		str	r0, [r7, #12]
 5132 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5133 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5134 000c FB80     		strh	r3, [r7, #6]	@ movhi
2764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5135              		.loc 1 2764 0
 5136 000e 0023     		movs	r3, #0
 5137 0010 FB82     		strh	r3, [r7, #22]	@ movhi
2765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5138              		.loc 1 2772 0
 5139 0012 7989     		ldrh	r1, [r7, #10]
 5140 0014 3A89     		ldrh	r2, [r7, #8]
 5141 0016 FB88     		ldrh	r3, [r7, #6]
 5142 0018 F868     		ldr	r0, [r7, #12]
 5143 001a FFF7FEFF 		bl	TIM_ETRConfig
2773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5144              		.loc 1 2775 0
 5145 001e FB68     		ldr	r3, [r7, #12]
 5146 0020 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5147 0022 FB82     		strh	r3, [r7, #22]	@ movhi
2776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5148              		.loc 1 2778 0
 5149 0024 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5150 0026 23F00703 		bic	r3, r3, #7
 5151 002a FB82     		strh	r3, [r7, #22]	@ movhi
2779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 5152              		.loc 1 2781 0
 5153 002c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5154 002e 43F00703 		orr	r3, r3, #7
 5155 0032 FB82     		strh	r3, [r7, #22]	@ movhi
2782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5156              		.loc 1 2784 0
 5157 0034 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5158 0036 23F07003 		bic	r3, r3, #112
 5159 003a FB82     		strh	r3, [r7, #22]	@ movhi
2785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 5160              		.loc 1 2785 0
 5161 003c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5162 003e 43F07003 		orr	r3, r3, #112
 5163 0042 FB82     		strh	r3, [r7, #22]	@ movhi
2786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5164              		.loc 1 2788 0
 5165 0044 FB68     		ldr	r3, [r7, #12]
 5166 0046 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5167 0048 1A81     		strh	r2, [r3, #8]	@ movhi
2789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5168              		.loc 1 2789 0
 5169 004a 1837     		adds	r7, r7, #24
 5170 004c BD46     		mov	sp, r7
 5171              		@ sp needed
 5172 004e 80BD     		pop	{r7, pc}
 5173              		.cfi_endproc
 5174              	.LFE188:
 5176              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 5177              		.align	2
 5178              		.global	TIM_ETRClockMode2Config
 5179              		.thumb
 5180              		.thumb_func
 5182              	TIM_ETRClockMode2Config:
 5183              	.LFB189:
2790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5184              		.loc 1 2810 0
 5185              		.cfi_startproc
 5186              		@ args = 0, pretend = 0, frame = 16
 5187              		@ frame_needed = 1, uses_anonymous_args = 0
 5188 0000 80B5     		push	{r7, lr}
 5189              	.LCFI237:
 5190              		.cfi_def_cfa_offset 8
 5191              		.cfi_offset 7, -8
 5192              		.cfi_offset 14, -4
 5193 0002 84B0     		sub	sp, sp, #16
 5194              	.LCFI238:
 5195              		.cfi_def_cfa_offset 24
 5196 0004 00AF     		add	r7, sp, #0
 5197              	.LCFI239:
 5198              		.cfi_def_cfa_register 7
 5199 0006 F860     		str	r0, [r7, #12]
 5200 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5201 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5202 000c FB80     		strh	r3, [r7, #6]	@ movhi
2811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5203              		.loc 1 2818 0
 5204 000e 7989     		ldrh	r1, [r7, #10]
 5205 0010 3A89     		ldrh	r2, [r7, #8]
 5206 0012 FB88     		ldrh	r3, [r7, #6]
 5207 0014 F868     		ldr	r0, [r7, #12]
 5208 0016 FFF7FEFF 		bl	TIM_ETRConfig
2819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 5209              		.loc 1 2821 0
 5210 001a FB68     		ldr	r3, [r7, #12]
 5211 001c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5212 001e 9BB2     		uxth	r3, r3
 5213 0020 43F48043 		orr	r3, r3, #16384
 5214 0024 9AB2     		uxth	r2, r3
 5215 0026 FB68     		ldr	r3, [r7, #12]
 5216 0028 1A81     		strh	r2, [r3, #8]	@ movhi
2822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5217              		.loc 1 2822 0
 5218 002a 1037     		adds	r7, r7, #16
 5219 002c BD46     		mov	sp, r7
 5220              		@ sp needed
 5221 002e 80BD     		pop	{r7, pc}
 5222              		.cfi_endproc
 5223              	.LFE189:
 5225              		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 5226              		.align	2
 5227              		.global	TIM_SelectInputTrigger
 5228              		.thumb
 5229              		.thumb_func
 5231              	TIM_SelectInputTrigger:
 5232              	.LFB190:
2823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5233              		.loc 1 2877 0
 5234              		.cfi_startproc
 5235              		@ args = 0, pretend = 0, frame = 16
 5236              		@ frame_needed = 1, uses_anonymous_args = 0
 5237              		@ link register save eliminated.
 5238 0000 80B4     		push	{r7}
 5239              	.LCFI240:
 5240              		.cfi_def_cfa_offset 4
 5241              		.cfi_offset 7, -4
 5242 0002 85B0     		sub	sp, sp, #20
 5243              	.LCFI241:
 5244              		.cfi_def_cfa_offset 24
 5245 0004 00AF     		add	r7, sp, #0
 5246              	.LCFI242:
 5247              		.cfi_def_cfa_register 7
 5248 0006 7860     		str	r0, [r7, #4]
 5249 0008 0B46     		mov	r3, r1
 5250 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5251              		.loc 1 2878 0
 5252 000c 0023     		movs	r3, #0
 5253 000e FB81     		strh	r3, [r7, #14]	@ movhi
2879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5254              		.loc 1 2885 0
 5255 0010 7B68     		ldr	r3, [r7, #4]
 5256 0012 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5257 0014 FB81     		strh	r3, [r7, #14]	@ movhi
2886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5258              		.loc 1 2888 0
 5259 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5260 0018 23F07003 		bic	r3, r3, #112
 5261 001c FB81     		strh	r3, [r7, #14]	@ movhi
2889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 5262              		.loc 1 2891 0
 5263 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 5264 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5265 0022 1343     		orrs	r3, r3, r2
 5266 0024 FB81     		strh	r3, [r7, #14]	@ movhi
2892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5267              		.loc 1 2894 0
 5268 0026 7B68     		ldr	r3, [r7, #4]
 5269 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5270 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5271              		.loc 1 2895 0
 5272 002c 1437     		adds	r7, r7, #20
 5273 002e BD46     		mov	sp, r7
 5274              		@ sp needed
 5275 0030 5DF8047B 		ldr	r7, [sp], #4
 5276 0034 7047     		bx	lr
 5277              		.cfi_endproc
 5278              	.LFE190:
 5280 0036 00BF     		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 5281              		.align	2
 5282              		.global	TIM_SelectOutputTrigger
 5283              		.thumb
 5284              		.thumb_func
 5286              	TIM_SelectOutputTrigger:
 5287              	.LFB191:
2896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5288              		.loc 1 2920 0
 5289              		.cfi_startproc
 5290              		@ args = 0, pretend = 0, frame = 8
 5291              		@ frame_needed = 1, uses_anonymous_args = 0
 5292              		@ link register save eliminated.
 5293 0000 80B4     		push	{r7}
 5294              	.LCFI243:
 5295              		.cfi_def_cfa_offset 4
 5296              		.cfi_offset 7, -4
 5297 0002 83B0     		sub	sp, sp, #12
 5298              	.LCFI244:
 5299              		.cfi_def_cfa_offset 16
 5300 0004 00AF     		add	r7, sp, #0
 5301              	.LCFI245:
 5302              		.cfi_def_cfa_register 7
 5303 0006 7860     		str	r0, [r7, #4]
 5304 0008 0B46     		mov	r3, r1
 5305 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 5306              		.loc 1 2926 0
 5307 000c 7B68     		ldr	r3, [r7, #4]
 5308 000e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5309 0010 9BB2     		uxth	r3, r3
 5310 0012 23F07003 		bic	r3, r3, #112
 5311 0016 9AB2     		uxth	r2, r3
 5312 0018 7B68     		ldr	r3, [r7, #4]
 5313 001a 9A80     		strh	r2, [r3, #4]	@ movhi
2927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 5314              		.loc 1 2928 0
 5315 001c 7B68     		ldr	r3, [r7, #4]
 5316 001e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5317 0020 9AB2     		uxth	r2, r3
 5318 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5319 0024 1343     		orrs	r3, r3, r2
 5320 0026 9AB2     		uxth	r2, r3
 5321 0028 7B68     		ldr	r3, [r7, #4]
 5322 002a 9A80     		strh	r2, [r3, #4]	@ movhi
2929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5323              		.loc 1 2929 0
 5324 002c 0C37     		adds	r7, r7, #12
 5325 002e BD46     		mov	sp, r7
 5326              		@ sp needed
 5327 0030 5DF8047B 		ldr	r7, [sp], #4
 5328 0034 7047     		bx	lr
 5329              		.cfi_endproc
 5330              	.LFE191:
 5332 0036 00BF     		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 5333              		.align	2
 5334              		.global	TIM_SelectSlaveMode
 5335              		.thumb
 5336              		.thumb_func
 5338              	TIM_SelectSlaveMode:
 5339              	.LFB192:
2930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5340              		.loc 1 2944 0
 5341              		.cfi_startproc
 5342              		@ args = 0, pretend = 0, frame = 8
 5343              		@ frame_needed = 1, uses_anonymous_args = 0
 5344              		@ link register save eliminated.
 5345 0000 80B4     		push	{r7}
 5346              	.LCFI246:
 5347              		.cfi_def_cfa_offset 4
 5348              		.cfi_offset 7, -4
 5349 0002 83B0     		sub	sp, sp, #12
 5350              	.LCFI247:
 5351              		.cfi_def_cfa_offset 16
 5352 0004 00AF     		add	r7, sp, #0
 5353              	.LCFI248:
 5354              		.cfi_def_cfa_register 7
 5355 0006 7860     		str	r0, [r7, #4]
 5356 0008 0B46     		mov	r3, r1
 5357 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 5358              		.loc 1 2950 0
 5359 000c 7B68     		ldr	r3, [r7, #4]
 5360 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5361 0010 9BB2     		uxth	r3, r3
 5362 0012 23F00703 		bic	r3, r3, #7
 5363 0016 9AB2     		uxth	r2, r3
 5364 0018 7B68     		ldr	r3, [r7, #4]
 5365 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 5366              		.loc 1 2953 0
 5367 001c 7B68     		ldr	r3, [r7, #4]
 5368 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5369 0020 9AB2     		uxth	r2, r3
 5370 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5371 0024 1343     		orrs	r3, r3, r2
 5372 0026 9AB2     		uxth	r2, r3
 5373 0028 7B68     		ldr	r3, [r7, #4]
 5374 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5375              		.loc 1 2954 0
 5376 002c 0C37     		adds	r7, r7, #12
 5377 002e BD46     		mov	sp, r7
 5378              		@ sp needed
 5379 0030 5DF8047B 		ldr	r7, [sp], #4
 5380 0034 7047     		bx	lr
 5381              		.cfi_endproc
 5382              	.LFE192:
 5384 0036 00BF     		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 5385              		.align	2
 5386              		.global	TIM_SelectMasterSlaveMode
 5387              		.thumb
 5388              		.thumb_func
 5390              	TIM_SelectMasterSlaveMode:
 5391              	.LFB193:
2955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5392              		.loc 1 2967 0
 5393              		.cfi_startproc
 5394              		@ args = 0, pretend = 0, frame = 8
 5395              		@ frame_needed = 1, uses_anonymous_args = 0
 5396              		@ link register save eliminated.
 5397 0000 80B4     		push	{r7}
 5398              	.LCFI249:
 5399              		.cfi_def_cfa_offset 4
 5400              		.cfi_offset 7, -4
 5401 0002 83B0     		sub	sp, sp, #12
 5402              	.LCFI250:
 5403              		.cfi_def_cfa_offset 16
 5404 0004 00AF     		add	r7, sp, #0
 5405              	.LCFI251:
 5406              		.cfi_def_cfa_register 7
 5407 0006 7860     		str	r0, [r7, #4]
 5408 0008 0B46     		mov	r3, r1
 5409 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 5410              		.loc 1 2973 0
 5411 000c 7B68     		ldr	r3, [r7, #4]
 5412 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5413 0010 9BB2     		uxth	r3, r3
 5414 0012 23F08003 		bic	r3, r3, #128
 5415 0016 9AB2     		uxth	r2, r3
 5416 0018 7B68     		ldr	r3, [r7, #4]
 5417 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 5418              		.loc 1 2976 0
 5419 001c 7B68     		ldr	r3, [r7, #4]
 5420 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5421 0020 9AB2     		uxth	r2, r3
 5422 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5423 0024 1343     		orrs	r3, r3, r2
 5424 0026 9AB2     		uxth	r2, r3
 5425 0028 7B68     		ldr	r3, [r7, #4]
 5426 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5427              		.loc 1 2977 0
 5428 002c 0C37     		adds	r7, r7, #12
 5429 002e BD46     		mov	sp, r7
 5430              		@ sp needed
 5431 0030 5DF8047B 		ldr	r7, [sp], #4
 5432 0034 7047     		bx	lr
 5433              		.cfi_endproc
 5434              	.LFE193:
 5436 0036 00BF     		.section	.text.TIM_ETRConfig,"ax",%progbits
 5437              		.align	2
 5438              		.global	TIM_ETRConfig
 5439              		.thumb
 5440              		.thumb_func
 5442              	TIM_ETRConfig:
 5443              	.LFB194:
2978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5444              		.loc 1 2998 0
 5445              		.cfi_startproc
 5446              		@ args = 0, pretend = 0, frame = 24
 5447              		@ frame_needed = 1, uses_anonymous_args = 0
 5448              		@ link register save eliminated.
 5449 0000 80B4     		push	{r7}
 5450              	.LCFI252:
 5451              		.cfi_def_cfa_offset 4
 5452              		.cfi_offset 7, -4
 5453 0002 87B0     		sub	sp, sp, #28
 5454              	.LCFI253:
 5455              		.cfi_def_cfa_offset 32
 5456 0004 00AF     		add	r7, sp, #0
 5457              	.LCFI254:
 5458              		.cfi_def_cfa_register 7
 5459 0006 F860     		str	r0, [r7, #12]
 5460 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5461 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5462 000c FB80     		strh	r3, [r7, #6]	@ movhi
2999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5463              		.loc 1 2999 0
 5464 000e 0023     		movs	r3, #0
 5465 0010 FB82     		strh	r3, [r7, #22]	@ movhi
3000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5466              		.loc 1 3007 0
 5467 0012 FB68     		ldr	r3, [r7, #12]
 5468 0014 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5469 0016 FB82     		strh	r3, [r7, #22]	@ movhi
3008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 5470              		.loc 1 3010 0
 5471 0018 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5472 001a DBB2     		uxtb	r3, r3
 5473 001c FB82     		strh	r3, [r7, #22]	@ movhi
3011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 5474              		.loc 1 3013 0
 5475 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 5476 0020 1B02     		lsls	r3, r3, #8
 5477 0022 9AB2     		uxth	r2, r3
 5478 0024 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5479 0026 1343     		orrs	r3, r3, r2
 5480 0028 9AB2     		uxth	r2, r3
 5481 002a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5482 002c 1343     		orrs	r3, r3, r2
 5483 002e 9AB2     		uxth	r2, r3
 5484 0030 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5485 0032 1343     		orrs	r3, r3, r2
 5486 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5487              		.loc 1 3016 0
 5488 0036 FB68     		ldr	r3, [r7, #12]
 5489 0038 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5490 003a 1A81     		strh	r2, [r3, #8]	@ movhi
3017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5491              		.loc 1 3017 0
 5492 003c 1C37     		adds	r7, r7, #28
 5493 003e BD46     		mov	sp, r7
 5494              		@ sp needed
 5495 0040 5DF8047B 		ldr	r7, [sp], #4
 5496 0044 7047     		bx	lr
 5497              		.cfi_endproc
 5498              	.LFE194:
 5500 0046 00BF     		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 5501              		.align	2
 5502              		.global	TIM_EncoderInterfaceConfig
 5503              		.thumb
 5504              		.thumb_func
 5506              	TIM_EncoderInterfaceConfig:
 5507              	.LFB195:
3018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5508              		.loc 1 3056 0
 5509              		.cfi_startproc
 5510              		@ args = 0, pretend = 0, frame = 24
 5511              		@ frame_needed = 1, uses_anonymous_args = 0
 5512              		@ link register save eliminated.
 5513 0000 80B4     		push	{r7}
 5514              	.LCFI255:
 5515              		.cfi_def_cfa_offset 4
 5516              		.cfi_offset 7, -4
 5517 0002 87B0     		sub	sp, sp, #28
 5518              	.LCFI256:
 5519              		.cfi_def_cfa_offset 32
 5520 0004 00AF     		add	r7, sp, #0
 5521              	.LCFI257:
 5522              		.cfi_def_cfa_register 7
 5523 0006 F860     		str	r0, [r7, #12]
 5524 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5525 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5526 000c FB80     		strh	r3, [r7, #6]	@ movhi
3057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5527              		.loc 1 3057 0
 5528 000e 0023     		movs	r3, #0
 5529 0010 FB82     		strh	r3, [r7, #22]	@ movhi
3058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5530              		.loc 1 3058 0
 5531 0012 0023     		movs	r3, #0
 5532 0014 BB82     		strh	r3, [r7, #20]	@ movhi
3059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 5533              		.loc 1 3059 0
 5534 0016 0023     		movs	r3, #0
 5535 0018 7B82     		strh	r3, [r7, #18]	@ movhi
3060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5536              		.loc 1 3068 0
 5537 001a FB68     		ldr	r3, [r7, #12]
 5538 001c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5539 001e FB82     		strh	r3, [r7, #22]	@ movhi
3069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5540              		.loc 1 3071 0
 5541 0020 FB68     		ldr	r3, [r7, #12]
 5542 0022 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5543 0024 BB82     		strh	r3, [r7, #20]	@ movhi
3072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5544              		.loc 1 3074 0
 5545 0026 FB68     		ldr	r3, [r7, #12]
 5546 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5547 002a 7B82     		strh	r3, [r7, #18]	@ movhi
3075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5548              		.loc 1 3077 0
 5549 002c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5550 002e 23F00703 		bic	r3, r3, #7
 5551 0032 FB82     		strh	r3, [r7, #22]	@ movhi
3078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 5552              		.loc 1 3078 0
 5553 0034 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5554 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5555 0038 1343     		orrs	r3, r3, r2
 5556 003a FB82     		strh	r3, [r7, #22]	@ movhi
3079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 5557              		.loc 1 3081 0
 5558 003c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5559 003e 23F44073 		bic	r3, r3, #768
 5560 0042 23F00303 		bic	r3, r3, #3
 5561 0046 BB82     		strh	r3, [r7, #20]	@ movhi
3082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 5562              		.loc 1 3082 0
 5563 0048 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5564 004a 43F48073 		orr	r3, r3, #256
 5565 004e 43F00103 		orr	r3, r3, #1
 5566 0052 BB82     		strh	r3, [r7, #20]	@ movhi
3083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 5567              		.loc 1 3085 0
 5568 0054 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5569 0056 23F02203 		bic	r3, r3, #34
 5570 005a 7B82     		strh	r3, [r7, #18]	@ movhi
3086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 5571              		.loc 1 3086 0
 5572 005c FB88     		ldrh	r3, [r7, #6]	@ movhi
 5573 005e 1B01     		lsls	r3, r3, #4
 5574 0060 9AB2     		uxth	r2, r3
 5575 0062 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5576 0064 1343     		orrs	r3, r3, r2
 5577 0066 9AB2     		uxth	r2, r3
 5578 0068 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5579 006a 1343     		orrs	r3, r3, r2
 5580 006c 7B82     		strh	r3, [r7, #18]	@ movhi
3087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5581              		.loc 1 3089 0
 5582 006e FB68     		ldr	r3, [r7, #12]
 5583 0070 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5584 0072 1A81     		strh	r2, [r3, #8]	@ movhi
3090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5585              		.loc 1 3092 0
 5586 0074 FB68     		ldr	r3, [r7, #12]
 5587 0076 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5588 0078 1A83     		strh	r2, [r3, #24]	@ movhi
3093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5589              		.loc 1 3095 0
 5590 007a FB68     		ldr	r3, [r7, #12]
 5591 007c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5592 007e 1A84     		strh	r2, [r3, #32]	@ movhi
3096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5593              		.loc 1 3096 0
 5594 0080 1C37     		adds	r7, r7, #28
 5595 0082 BD46     		mov	sp, r7
 5596              		@ sp needed
 5597 0084 5DF8047B 		ldr	r7, [sp], #4
 5598 0088 7047     		bx	lr
 5599              		.cfi_endproc
 5600              	.LFE195:
 5602 008a 00BF     		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 5603              		.align	2
 5604              		.global	TIM_SelectHallSensor
 5605              		.thumb
 5606              		.thumb_func
 5608              	TIM_SelectHallSensor:
 5609              	.LFB196:
3097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5610              		.loc 1 3107 0
 5611              		.cfi_startproc
 5612              		@ args = 0, pretend = 0, frame = 8
 5613              		@ frame_needed = 1, uses_anonymous_args = 0
 5614              		@ link register save eliminated.
 5615 0000 80B4     		push	{r7}
 5616              	.LCFI258:
 5617              		.cfi_def_cfa_offset 4
 5618              		.cfi_offset 7, -4
 5619 0002 83B0     		sub	sp, sp, #12
 5620              	.LCFI259:
 5621              		.cfi_def_cfa_offset 16
 5622 0004 00AF     		add	r7, sp, #0
 5623              	.LCFI260:
 5624              		.cfi_def_cfa_register 7
 5625 0006 7860     		str	r0, [r7, #4]
 5626 0008 0B46     		mov	r3, r1
 5627 000a FB70     		strb	r3, [r7, #3]
3108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 5628              		.loc 1 3112 0
 5629 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5630 000e 002B     		cmp	r3, #0
 5631 0010 08D0     		beq	.L174
3113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 5632              		.loc 1 3115 0
 5633 0012 7B68     		ldr	r3, [r7, #4]
 5634 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5635 0016 9BB2     		uxth	r3, r3
 5636 0018 43F08003 		orr	r3, r3, #128
 5637 001c 9AB2     		uxth	r2, r3
 5638 001e 7B68     		ldr	r3, [r7, #4]
 5639 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 5640 0022 07E0     		b	.L173
 5641              	.L174:
3116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 5642              		.loc 1 3120 0
 5643 0024 7B68     		ldr	r3, [r7, #4]
 5644 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5645 0028 9BB2     		uxth	r3, r3
 5646 002a 23F08003 		bic	r3, r3, #128
 5647 002e 9AB2     		uxth	r2, r3
 5648 0030 7B68     		ldr	r3, [r7, #4]
 5649 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 5650              	.L173:
3121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5651              		.loc 1 3122 0
 5652 0034 0C37     		adds	r7, r7, #12
 5653 0036 BD46     		mov	sp, r7
 5654              		@ sp needed
 5655 0038 5DF8047B 		ldr	r7, [sp], #4
 5656 003c 7047     		bx	lr
 5657              		.cfi_endproc
 5658              	.LFE196:
 5660 003e 00BF     		.section	.text.TIM_RemapConfig,"ax",%progbits
 5661              		.align	2
 5662              		.global	TIM_RemapConfig
 5663              		.thumb
 5664              		.thumb_func
 5666              	TIM_RemapConfig:
 5667              	.LFB197:
3123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5668              		.loc 1 3158 0
 5669              		.cfi_startproc
 5670              		@ args = 0, pretend = 0, frame = 8
 5671              		@ frame_needed = 1, uses_anonymous_args = 0
 5672              		@ link register save eliminated.
 5673 0000 80B4     		push	{r7}
 5674              	.LCFI261:
 5675              		.cfi_def_cfa_offset 4
 5676              		.cfi_offset 7, -4
 5677 0002 83B0     		sub	sp, sp, #12
 5678              	.LCFI262:
 5679              		.cfi_def_cfa_offset 16
 5680 0004 00AF     		add	r7, sp, #0
 5681              	.LCFI263:
 5682              		.cfi_def_cfa_register 7
 5683 0006 7860     		str	r0, [r7, #4]
 5684 0008 0B46     		mov	r3, r1
 5685 000a 7B80     		strh	r3, [r7, #2]	@ movhi
3159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 5686              		.loc 1 3164 0
 5687 000c 7B68     		ldr	r3, [r7, #4]
 5688 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5689 0010 A3F85020 		strh	r2, [r3, #80]	@ movhi
3165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5690              		.loc 1 3165 0
 5691 0014 0C37     		adds	r7, r7, #12
 5692 0016 BD46     		mov	sp, r7
 5693              		@ sp needed
 5694 0018 5DF8047B 		ldr	r7, [sp], #4
 5695 001c 7047     		bx	lr
 5696              		.cfi_endproc
 5697              	.LFE197:
 5699 001e 00BF     		.section	.text.TI1_Config,"ax",%progbits
 5700              		.align	2
 5701              		.thumb
 5702              		.thumb_func
 5704              	TI1_Config:
 5705              	.LFB198:
3166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5706              		.loc 1 3190 0
 5707              		.cfi_startproc
 5708              		@ args = 0, pretend = 0, frame = 24
 5709              		@ frame_needed = 1, uses_anonymous_args = 0
 5710              		@ link register save eliminated.
 5711 0000 80B4     		push	{r7}
 5712              	.LCFI264:
 5713              		.cfi_def_cfa_offset 4
 5714              		.cfi_offset 7, -4
 5715 0002 87B0     		sub	sp, sp, #28
 5716              	.LCFI265:
 5717              		.cfi_def_cfa_offset 32
 5718 0004 00AF     		add	r7, sp, #0
 5719              	.LCFI266:
 5720              		.cfi_def_cfa_register 7
 5721 0006 F860     		str	r0, [r7, #12]
 5722 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5723 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5724 000c FB80     		strh	r3, [r7, #6]	@ movhi
3191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 5725              		.loc 1 3191 0
 5726 000e 0023     		movs	r3, #0
 5727 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 5728 0012 0023     		movs	r3, #0
 5729 0014 BB82     		strh	r3, [r7, #20]	@ movhi
3192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 5730              		.loc 1 3194 0
 5731 0016 FB68     		ldr	r3, [r7, #12]
 5732 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5733 001a 9BB2     		uxth	r3, r3
 5734 001c 23F00103 		bic	r3, r3, #1
 5735 0020 9AB2     		uxth	r2, r3
 5736 0022 FB68     		ldr	r3, [r7, #12]
 5737 0024 1A84     		strh	r2, [r3, #32]	@ movhi
3195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5738              		.loc 1 3195 0
 5739 0026 FB68     		ldr	r3, [r7, #12]
 5740 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5741 002a FB82     		strh	r3, [r7, #22]	@ movhi
3196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5742              		.loc 1 3196 0
 5743 002c FB68     		ldr	r3, [r7, #12]
 5744 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5745 0030 BB82     		strh	r3, [r7, #20]	@ movhi
3197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 5746              		.loc 1 3199 0
 5747 0032 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5748 0034 23F0F303 		bic	r3, r3, #243
 5749 0038 FB82     		strh	r3, [r7, #22]	@ movhi
3200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5750              		.loc 1 3200 0
 5751 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 5752 003c 1B01     		lsls	r3, r3, #4
 5753 003e 9AB2     		uxth	r2, r3
 5754 0040 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5755 0042 1343     		orrs	r3, r3, r2
 5756 0044 9AB2     		uxth	r2, r3
 5757 0046 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5758 0048 1343     		orrs	r3, r3, r2
 5759 004a FB82     		strh	r3, [r7, #22]	@ movhi
3201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 5760              		.loc 1 3203 0
 5761 004c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5762 004e 23F00A03 		bic	r3, r3, #10
 5763 0052 BB82     		strh	r3, [r7, #20]	@ movhi
3204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 5764              		.loc 1 3204 0
 5765 0054 7A89     		ldrh	r2, [r7, #10]	@ movhi
 5766 0056 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5767 0058 1343     		orrs	r3, r3, r2
 5768 005a 9BB2     		uxth	r3, r3
 5769 005c 43F00103 		orr	r3, r3, #1
 5770 0060 BB82     		strh	r3, [r7, #20]	@ movhi
3205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5771              		.loc 1 3207 0
 5772 0062 FB68     		ldr	r3, [r7, #12]
 5773 0064 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5774 0066 1A83     		strh	r2, [r3, #24]	@ movhi
3208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5775              		.loc 1 3208 0
 5776 0068 FB68     		ldr	r3, [r7, #12]
 5777 006a BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5778 006c 1A84     		strh	r2, [r3, #32]	@ movhi
3209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5779              		.loc 1 3209 0
 5780 006e 1C37     		adds	r7, r7, #28
 5781 0070 BD46     		mov	sp, r7
 5782              		@ sp needed
 5783 0072 5DF8047B 		ldr	r7, [sp], #4
 5784 0076 7047     		bx	lr
 5785              		.cfi_endproc
 5786              	.LFE198:
 5788              		.section	.text.TI2_Config,"ax",%progbits
 5789              		.align	2
 5790              		.thumb
 5791              		.thumb_func
 5793              	TI2_Config:
 5794              	.LFB199:
3210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5795              		.loc 1 3231 0
 5796              		.cfi_startproc
 5797              		@ args = 0, pretend = 0, frame = 24
 5798              		@ frame_needed = 1, uses_anonymous_args = 0
 5799              		@ link register save eliminated.
 5800 0000 80B4     		push	{r7}
 5801              	.LCFI267:
 5802              		.cfi_def_cfa_offset 4
 5803              		.cfi_offset 7, -4
 5804 0002 87B0     		sub	sp, sp, #28
 5805              	.LCFI268:
 5806              		.cfi_def_cfa_offset 32
 5807 0004 00AF     		add	r7, sp, #0
 5808              	.LCFI269:
 5809              		.cfi_def_cfa_register 7
 5810 0006 F860     		str	r0, [r7, #12]
 5811 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5812 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5813 000c FB80     		strh	r3, [r7, #6]	@ movhi
3232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 5814              		.loc 1 3232 0
 5815 000e 0023     		movs	r3, #0
 5816 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 5817 0012 0023     		movs	r3, #0
 5818 0014 BB82     		strh	r3, [r7, #20]	@ movhi
 5819 0016 0023     		movs	r3, #0
 5820 0018 7B82     		strh	r3, [r7, #18]	@ movhi
3233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 5821              		.loc 1 3235 0
 5822 001a FB68     		ldr	r3, [r7, #12]
 5823 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5824 001e 9BB2     		uxth	r3, r3
 5825 0020 23F01003 		bic	r3, r3, #16
 5826 0024 9AB2     		uxth	r2, r3
 5827 0026 FB68     		ldr	r3, [r7, #12]
 5828 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5829              		.loc 1 3236 0
 5830 002a FB68     		ldr	r3, [r7, #12]
 5831 002c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5832 002e FB82     		strh	r3, [r7, #22]	@ movhi
3237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5833              		.loc 1 3237 0
 5834 0030 FB68     		ldr	r3, [r7, #12]
 5835 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5836 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 5837              		.loc 1 3238 0
 5838 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5839 0038 1B01     		lsls	r3, r3, #4
 5840 003a 7B82     		strh	r3, [r7, #18]	@ movhi
3239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5841              		.loc 1 3241 0
 5842 003c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5843 003e 23F44073 		bic	r3, r3, #768
 5844 0042 1B05     		lsls	r3, r3, #20
 5845 0044 1B0D     		lsrs	r3, r3, #20
 5846 0046 FB82     		strh	r3, [r7, #22]	@ movhi
3242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 5847              		.loc 1 3242 0
 5848 0048 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5849 004a 1B03     		lsls	r3, r3, #12
 5850 004c 9AB2     		uxth	r2, r3
 5851 004e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5852 0050 1343     		orrs	r3, r3, r2
 5853 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 5854              		.loc 1 3243 0
 5855 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5856 0056 1B02     		lsls	r3, r3, #8
 5857 0058 9AB2     		uxth	r2, r3
 5858 005a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5859 005c 1343     		orrs	r3, r3, r2
 5860 005e FB82     		strh	r3, [r7, #22]	@ movhi
3244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 5861              		.loc 1 3246 0
 5862 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5863 0062 23F0A003 		bic	r3, r3, #160
 5864 0066 BB82     		strh	r3, [r7, #20]	@ movhi
3247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 5865              		.loc 1 3247 0
 5866 0068 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5867 006a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5868 006c 1343     		orrs	r3, r3, r2
 5869 006e 9BB2     		uxth	r3, r3
 5870 0070 43F01003 		orr	r3, r3, #16
 5871 0074 BB82     		strh	r3, [r7, #20]	@ movhi
3248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 5872              		.loc 1 3250 0
 5873 0076 FB68     		ldr	r3, [r7, #12]
 5874 0078 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5875 007a 1A83     		strh	r2, [r3, #24]	@ movhi
3251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5876              		.loc 1 3251 0
 5877 007c FB68     		ldr	r3, [r7, #12]
 5878 007e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5879 0080 1A84     		strh	r2, [r3, #32]	@ movhi
3252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5880              		.loc 1 3252 0
 5881 0082 1C37     		adds	r7, r7, #28
 5882 0084 BD46     		mov	sp, r7
 5883              		@ sp needed
 5884 0086 5DF8047B 		ldr	r7, [sp], #4
 5885 008a 7047     		bx	lr
 5886              		.cfi_endproc
 5887              	.LFE199:
 5889              		.section	.text.TI3_Config,"ax",%progbits
 5890              		.align	2
 5891              		.thumb
 5892              		.thumb_func
 5894              	TI3_Config:
 5895              	.LFB200:
3253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5896              		.loc 1 3273 0
 5897              		.cfi_startproc
 5898              		@ args = 0, pretend = 0, frame = 24
 5899              		@ frame_needed = 1, uses_anonymous_args = 0
 5900              		@ link register save eliminated.
 5901 0000 80B4     		push	{r7}
 5902              	.LCFI270:
 5903              		.cfi_def_cfa_offset 4
 5904              		.cfi_offset 7, -4
 5905 0002 87B0     		sub	sp, sp, #28
 5906              	.LCFI271:
 5907              		.cfi_def_cfa_offset 32
 5908 0004 00AF     		add	r7, sp, #0
 5909              	.LCFI272:
 5910              		.cfi_def_cfa_register 7
 5911 0006 F860     		str	r0, [r7, #12]
 5912 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5913 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5914 000c FB80     		strh	r3, [r7, #6]	@ movhi
3274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5915              		.loc 1 3274 0
 5916 000e 0023     		movs	r3, #0
 5917 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 5918 0012 0023     		movs	r3, #0
 5919 0014 BB82     		strh	r3, [r7, #20]	@ movhi
 5920 0016 0023     		movs	r3, #0
 5921 0018 7B82     		strh	r3, [r7, #18]	@ movhi
3275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 5922              		.loc 1 3277 0
 5923 001a FB68     		ldr	r3, [r7, #12]
 5924 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5925 001e 9BB2     		uxth	r3, r3
 5926 0020 23F48073 		bic	r3, r3, #256
 5927 0024 9AB2     		uxth	r2, r3
 5928 0026 FB68     		ldr	r3, [r7, #12]
 5929 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5930              		.loc 1 3278 0
 5931 002a FB68     		ldr	r3, [r7, #12]
 5932 002c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5933 002e FB82     		strh	r3, [r7, #22]	@ movhi
3279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5934              		.loc 1 3279 0
 5935 0030 FB68     		ldr	r3, [r7, #12]
 5936 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5937 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 5938              		.loc 1 3280 0
 5939 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5940 0038 1B02     		lsls	r3, r3, #8
 5941 003a 7B82     		strh	r3, [r7, #18]	@ movhi
3281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 5942              		.loc 1 3283 0
 5943 003c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5944 003e 23F0F303 		bic	r3, r3, #243
 5945 0042 FB82     		strh	r3, [r7, #22]	@ movhi
3284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5946              		.loc 1 3284 0
 5947 0044 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5948 0046 1B01     		lsls	r3, r3, #4
 5949 0048 9AB2     		uxth	r2, r3
 5950 004a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5951 004c 1343     		orrs	r3, r3, r2
 5952 004e 9AB2     		uxth	r2, r3
 5953 0050 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5954 0052 1343     		orrs	r3, r3, r2
 5955 0054 FB82     		strh	r3, [r7, #22]	@ movhi
3285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 5956              		.loc 1 3287 0
 5957 0056 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5958 0058 23F42063 		bic	r3, r3, #2560
 5959 005c BB82     		strh	r3, [r7, #20]	@ movhi
3288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 5960              		.loc 1 3288 0
 5961 005e 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5962 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5963 0062 1343     		orrs	r3, r3, r2
 5964 0064 9BB2     		uxth	r3, r3
 5965 0066 43F48073 		orr	r3, r3, #256
 5966 006a BB82     		strh	r3, [r7, #20]	@ movhi
3289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5967              		.loc 1 3291 0
 5968 006c FB68     		ldr	r3, [r7, #12]
 5969 006e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5970 0070 9A83     		strh	r2, [r3, #28]	@ movhi
3292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5971              		.loc 1 3292 0
 5972 0072 FB68     		ldr	r3, [r7, #12]
 5973 0074 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5974 0076 1A84     		strh	r2, [r3, #32]	@ movhi
3293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5975              		.loc 1 3293 0
 5976 0078 1C37     		adds	r7, r7, #28
 5977 007a BD46     		mov	sp, r7
 5978              		@ sp needed
 5979 007c 5DF8047B 		ldr	r7, [sp], #4
 5980 0080 7047     		bx	lr
 5981              		.cfi_endproc
 5982              	.LFE200:
 5984 0082 00BF     		.section	.text.TI4_Config,"ax",%progbits
 5985              		.align	2
 5986              		.thumb
 5987              		.thumb_func
 5989              	TI4_Config:
 5990              	.LFB201:
3294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5991              		.loc 1 3314 0
 5992              		.cfi_startproc
 5993              		@ args = 0, pretend = 0, frame = 24
 5994              		@ frame_needed = 1, uses_anonymous_args = 0
 5995              		@ link register save eliminated.
 5996 0000 80B4     		push	{r7}
 5997              	.LCFI273:
 5998              		.cfi_def_cfa_offset 4
 5999              		.cfi_offset 7, -4
 6000 0002 87B0     		sub	sp, sp, #28
 6001              	.LCFI274:
 6002              		.cfi_def_cfa_offset 32
 6003 0004 00AF     		add	r7, sp, #0
 6004              	.LCFI275:
 6005              		.cfi_def_cfa_register 7
 6006 0006 F860     		str	r0, [r7, #12]
 6007 0008 7981     		strh	r1, [r7, #10]	@ movhi
 6008 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 6009 000c FB80     		strh	r3, [r7, #6]	@ movhi
3315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 6010              		.loc 1 3315 0
 6011 000e 0023     		movs	r3, #0
 6012 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 6013 0012 0023     		movs	r3, #0
 6014 0014 BB82     		strh	r3, [r7, #20]	@ movhi
 6015 0016 0023     		movs	r3, #0
 6016 0018 7B82     		strh	r3, [r7, #18]	@ movhi
3316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 6017              		.loc 1 3318 0
 6018 001a FB68     		ldr	r3, [r7, #12]
 6019 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 6020 001e 9BB2     		uxth	r3, r3
 6021 0020 23F48053 		bic	r3, r3, #4096
 6022 0024 9AB2     		uxth	r2, r3
 6023 0026 FB68     		ldr	r3, [r7, #12]
 6024 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 6025              		.loc 1 3319 0
 6026 002a FB68     		ldr	r3, [r7, #12]
 6027 002c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 6028 002e FB82     		strh	r3, [r7, #22]	@ movhi
3320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 6029              		.loc 1 3320 0
 6030 0030 FB68     		ldr	r3, [r7, #12]
 6031 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 6032 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 6033              		.loc 1 3321 0
 6034 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6035 0038 1B03     		lsls	r3, r3, #12
 6036 003a 7B82     		strh	r3, [r7, #18]	@ movhi
3322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 6037              		.loc 1 3324 0
 6038 003c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6039 003e 23F44073 		bic	r3, r3, #768
 6040 0042 1B05     		lsls	r3, r3, #20
 6041 0044 1B0D     		lsrs	r3, r3, #20
 6042 0046 FB82     		strh	r3, [r7, #22]	@ movhi
3325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 6043              		.loc 1 3325 0
 6044 0048 3B89     		ldrh	r3, [r7, #8]	@ movhi
 6045 004a 1B02     		lsls	r3, r3, #8
 6046 004c 9AB2     		uxth	r2, r3
 6047 004e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6048 0050 1343     		orrs	r3, r3, r2
 6049 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 6050              		.loc 1 3326 0
 6051 0054 FB88     		ldrh	r3, [r7, #6]	@ movhi
 6052 0056 1B03     		lsls	r3, r3, #12
 6053 0058 9AB2     		uxth	r2, r3
 6054 005a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6055 005c 1343     		orrs	r3, r3, r2
 6056 005e FB82     		strh	r3, [r7, #22]	@ movhi
3327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 6057              		.loc 1 3329 0
 6058 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6059 0062 23F40053 		bic	r3, r3, #8192
 6060 0066 5B04     		lsls	r3, r3, #17
 6061 0068 5B0C     		lsrs	r3, r3, #17
 6062 006a BB82     		strh	r3, [r7, #20]	@ movhi
3330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 6063              		.loc 1 3330 0
 6064 006c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 6065 006e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6066 0070 1343     		orrs	r3, r3, r2
 6067 0072 9BB2     		uxth	r3, r3
 6068 0074 43F48053 		orr	r3, r3, #4096
 6069 0078 BB82     		strh	r3, [r7, #20]	@ movhi
3331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 6070              		.loc 1 3333 0
 6071 007a FB68     		ldr	r3, [r7, #12]
 6072 007c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 6073 007e 9A83     		strh	r2, [r3, #28]	@ movhi
3334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 6074              		.loc 1 3334 0
 6075 0080 FB68     		ldr	r3, [r7, #12]
 6076 0082 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 6077 0084 1A84     		strh	r2, [r3, #32]	@ movhi
3335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 6078              		.loc 1 3335 0
 6079 0086 1C37     		adds	r7, r7, #28
 6080 0088 BD46     		mov	sp, r7
 6081              		@ sp needed
 6082 008a 5DF8047B 		ldr	r7, [sp], #4
 6083 008e 7047     		bx	lr
 6084              		.cfi_endproc
 6085              	.LFE201:
 6087              		.text
 6088              	.Letext0:
 6089              		.file 2 "/home/shihyu/data/STM32F4/gcc-arm-none-eabi-4_8-2013q4/arm-none-eabi/include/stdint.h"
 6090              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 6091              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
 6092              		.file 5 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
     /tmp/cc4hUgm9.s:20     .text.TIM_DeInit:00000000 $t
     /tmp/cc4hUgm9.s:25     .text.TIM_DeInit:00000000 TIM_DeInit
     /tmp/cc4hUgm9.s:260    .text.TIM_DeInit:00000188 $d
     /tmp/cc4hUgm9.s:277    .text.TIM_TimeBaseInit:00000000 $t
     /tmp/cc4hUgm9.s:282    .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
     /tmp/cc4hUgm9.s:414    .text.TIM_TimeBaseInit:000000b8 $d
     /tmp/cc4hUgm9.s:425    .text.TIM_TimeBaseStructInit:00000000 $t
     /tmp/cc4hUgm9.s:430    .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
     /tmp/cc4hUgm9.s:478    .text.TIM_PrescalerConfig:00000000 $t
     /tmp/cc4hUgm9.s:483    .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
     /tmp/cc4hUgm9.s:523    .text.TIM_CounterModeConfig:00000000 $t
     /tmp/cc4hUgm9.s:528    .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
     /tmp/cc4hUgm9.s:578    .text.TIM_SetCounter:00000000 $t
     /tmp/cc4hUgm9.s:583    .text.TIM_SetCounter:00000000 TIM_SetCounter
     /tmp/cc4hUgm9.s:616    .text.TIM_SetAutoreload:00000000 $t
     /tmp/cc4hUgm9.s:621    .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
     /tmp/cc4hUgm9.s:654    .text.TIM_GetCounter:00000000 $t
     /tmp/cc4hUgm9.s:659    .text.TIM_GetCounter:00000000 TIM_GetCounter
     /tmp/cc4hUgm9.s:691    .text.TIM_GetPrescaler:00000000 $t
     /tmp/cc4hUgm9.s:696    .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
     /tmp/cc4hUgm9.s:729    .text.TIM_UpdateDisableConfig:00000000 $t
     /tmp/cc4hUgm9.s:734    .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
     /tmp/cc4hUgm9.s:787    .text.TIM_UpdateRequestConfig:00000000 $t
     /tmp/cc4hUgm9.s:792    .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
     /tmp/cc4hUgm9.s:845    .text.TIM_ARRPreloadConfig:00000000 $t
     /tmp/cc4hUgm9.s:850    .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
     /tmp/cc4hUgm9.s:903    .text.TIM_SelectOnePulseMode:00000000 $t
     /tmp/cc4hUgm9.s:908    .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
     /tmp/cc4hUgm9.s:955    .text.TIM_SetClockDivision:00000000 $t
     /tmp/cc4hUgm9.s:960    .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
     /tmp/cc4hUgm9.s:1007   .text.TIM_Cmd:00000000 $t
     /tmp/cc4hUgm9.s:1012   .text.TIM_Cmd:00000000 TIM_Cmd
     /tmp/cc4hUgm9.s:1065   .text.TIM_OC1Init:00000000 $t
     /tmp/cc4hUgm9.s:1070   .text.TIM_OC1Init:00000000 TIM_OC1Init
     /tmp/cc4hUgm9.s:1224   .text.TIM_OC1Init:000000ec $d
     /tmp/cc4hUgm9.s:1230   .text.TIM_OC2Init:00000000 $t
     /tmp/cc4hUgm9.s:1235   .text.TIM_OC2Init:00000000 TIM_OC2Init
     /tmp/cc4hUgm9.s:1403   .text.TIM_OC2Init:00000108 $d
     /tmp/cc4hUgm9.s:1409   .text.TIM_OC3Init:00000000 $t
     /tmp/cc4hUgm9.s:1414   .text.TIM_OC3Init:00000000 TIM_OC3Init
     /tmp/cc4hUgm9.s:1580   .text.TIM_OC3Init:00000104 $d
     /tmp/cc4hUgm9.s:1586   .text.TIM_OC4Init:00000000 $t
     /tmp/cc4hUgm9.s:1591   .text.TIM_OC4Init:00000000 TIM_OC4Init
     /tmp/cc4hUgm9.s:1723   .text.TIM_OC4Init:000000c4 $d
     /tmp/cc4hUgm9.s:1729   .text.TIM_OCStructInit:00000000 $t
     /tmp/cc4hUgm9.s:1734   .text.TIM_OCStructInit:00000000 TIM_OCStructInit
     /tmp/cc4hUgm9.s:1794   .text.TIM_SelectOCxM:00000000 $t
     /tmp/cc4hUgm9.s:1799   .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
     /tmp/cc4hUgm9.s:1918   .text.TIM_SetCompare1:00000000 $t
     /tmp/cc4hUgm9.s:1923   .text.TIM_SetCompare1:00000000 TIM_SetCompare1
     /tmp/cc4hUgm9.s:1956   .text.TIM_SetCompare2:00000000 $t
     /tmp/cc4hUgm9.s:1961   .text.TIM_SetCompare2:00000000 TIM_SetCompare2
     /tmp/cc4hUgm9.s:1994   .text.TIM_SetCompare3:00000000 $t
     /tmp/cc4hUgm9.s:1999   .text.TIM_SetCompare3:00000000 TIM_SetCompare3
     /tmp/cc4hUgm9.s:2032   .text.TIM_SetCompare4:00000000 $t
     /tmp/cc4hUgm9.s:2037   .text.TIM_SetCompare4:00000000 TIM_SetCompare4
     /tmp/cc4hUgm9.s:2070   .text.TIM_ForcedOC1Config:00000000 $t
     /tmp/cc4hUgm9.s:2075   .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
     /tmp/cc4hUgm9.s:2125   .text.TIM_ForcedOC2Config:00000000 $t
     /tmp/cc4hUgm9.s:2130   .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
     /tmp/cc4hUgm9.s:2182   .text.TIM_ForcedOC3Config:00000000 $t
     /tmp/cc4hUgm9.s:2187   .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
     /tmp/cc4hUgm9.s:2237   .text.TIM_ForcedOC4Config:00000000 $t
     /tmp/cc4hUgm9.s:2242   .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
     /tmp/cc4hUgm9.s:2294   .text.TIM_OC1PreloadConfig:00000000 $t
     /tmp/cc4hUgm9.s:2299   .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
     /tmp/cc4hUgm9.s:2349   .text.TIM_OC2PreloadConfig:00000000 $t
     /tmp/cc4hUgm9.s:2354   .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
     /tmp/cc4hUgm9.s:2406   .text.TIM_OC3PreloadConfig:00000000 $t
     /tmp/cc4hUgm9.s:2411   .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
     /tmp/cc4hUgm9.s:2461   .text.TIM_OC4PreloadConfig:00000000 $t
     /tmp/cc4hUgm9.s:2466   .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
     /tmp/cc4hUgm9.s:2518   .text.TIM_OC1FastConfig:00000000 $t
     /tmp/cc4hUgm9.s:2523   .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
     /tmp/cc4hUgm9.s:2573   .text.TIM_OC2FastConfig:00000000 $t
     /tmp/cc4hUgm9.s:2578   .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
     /tmp/cc4hUgm9.s:2630   .text.TIM_OC3FastConfig:00000000 $t
     /tmp/cc4hUgm9.s:2635   .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
     /tmp/cc4hUgm9.s:2685   .text.TIM_OC4FastConfig:00000000 $t
     /tmp/cc4hUgm9.s:2690   .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
     /tmp/cc4hUgm9.s:2742   .text.TIM_ClearOC1Ref:00000000 $t
     /tmp/cc4hUgm9.s:2747   .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
     /tmp/cc4hUgm9.s:2797   .text.TIM_ClearOC2Ref:00000000 $t
     /tmp/cc4hUgm9.s:2802   .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
     /tmp/cc4hUgm9.s:2854   .text.TIM_ClearOC3Ref:00000000 $t
     /tmp/cc4hUgm9.s:2859   .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
     /tmp/cc4hUgm9.s:2909   .text.TIM_ClearOC4Ref:00000000 $t
     /tmp/cc4hUgm9.s:2914   .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
     /tmp/cc4hUgm9.s:2966   .text.TIM_OC1PolarityConfig:00000000 $t
     /tmp/cc4hUgm9.s:2971   .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
     /tmp/cc4hUgm9.s:3021   .text.TIM_OC1NPolarityConfig:00000000 $t
     /tmp/cc4hUgm9.s:3026   .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
     /tmp/cc4hUgm9.s:3076   .text.TIM_OC2PolarityConfig:00000000 $t
     /tmp/cc4hUgm9.s:3081   .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
     /tmp/cc4hUgm9.s:3133   .text.TIM_OC2NPolarityConfig:00000000 $t
     /tmp/cc4hUgm9.s:3138   .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
     /tmp/cc4hUgm9.s:3190   .text.TIM_OC3PolarityConfig:00000000 $t
     /tmp/cc4hUgm9.s:3195   .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
     /tmp/cc4hUgm9.s:3247   .text.TIM_OC3NPolarityConfig:00000000 $t
     /tmp/cc4hUgm9.s:3252   .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
     /tmp/cc4hUgm9.s:3304   .text.TIM_OC4PolarityConfig:00000000 $t
     /tmp/cc4hUgm9.s:3309   .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
     /tmp/cc4hUgm9.s:3361   .text.TIM_CCxCmd:00000000 $t
     /tmp/cc4hUgm9.s:3366   .text.TIM_CCxCmd:00000000 TIM_CCxCmd
     /tmp/cc4hUgm9.s:3429   .text.TIM_CCxNCmd:00000000 $t
     /tmp/cc4hUgm9.s:3434   .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
     /tmp/cc4hUgm9.s:3497   .text.TIM_ICInit:00000000 $t
     /tmp/cc4hUgm9.s:3502   .text.TIM_ICInit:00000000 TIM_ICInit
     /tmp/cc4hUgm9.s:5704   .text.TI1_Config:00000000 TI1_Config
     /tmp/cc4hUgm9.s:3949   .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
     /tmp/cc4hUgm9.s:5793   .text.TI2_Config:00000000 TI2_Config
     /tmp/cc4hUgm9.s:4001   .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
     /tmp/cc4hUgm9.s:5894   .text.TI3_Config:00000000 TI3_Config
     /tmp/cc4hUgm9.s:4055   .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
     /tmp/cc4hUgm9.s:5989   .text.TI4_Config:00000000 TI4_Config
     /tmp/cc4hUgm9.s:4107   .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
     /tmp/cc4hUgm9.s:3612   .text.TIM_ICStructInit:00000000 $t
     /tmp/cc4hUgm9.s:3617   .text.TIM_ICStructInit:00000000 TIM_ICStructInit
     /tmp/cc4hUgm9.s:3665   .text.TIM_PWMIConfig:00000000 $t
     /tmp/cc4hUgm9.s:3670   .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
     /tmp/cc4hUgm9.s:3796   .text.TIM_GetCapture1:00000000 $t
     /tmp/cc4hUgm9.s:3801   .text.TIM_GetCapture1:00000000 TIM_GetCapture1
     /tmp/cc4hUgm9.s:3833   .text.TIM_GetCapture2:00000000 $t
     /tmp/cc4hUgm9.s:3838   .text.TIM_GetCapture2:00000000 TIM_GetCapture2
     /tmp/cc4hUgm9.s:3870   .text.TIM_GetCapture3:00000000 $t
     /tmp/cc4hUgm9.s:3875   .text.TIM_GetCapture3:00000000 TIM_GetCapture3
     /tmp/cc4hUgm9.s:3907   .text.TIM_GetCapture4:00000000 $t
     /tmp/cc4hUgm9.s:3912   .text.TIM_GetCapture4:00000000 TIM_GetCapture4
     /tmp/cc4hUgm9.s:3944   .text.TIM_SetIC1Prescaler:00000000 $t
     /tmp/cc4hUgm9.s:3996   .text.TIM_SetIC2Prescaler:00000000 $t
     /tmp/cc4hUgm9.s:4050   .text.TIM_SetIC3Prescaler:00000000 $t
     /tmp/cc4hUgm9.s:4102   .text.TIM_SetIC4Prescaler:00000000 $t
     /tmp/cc4hUgm9.s:4156   .text.TIM_BDTRConfig:00000000 $t
     /tmp/cc4hUgm9.s:4161   .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
     /tmp/cc4hUgm9.s:4229   .text.TIM_BDTRStructInit:00000000 $t
     /tmp/cc4hUgm9.s:4234   .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
     /tmp/cc4hUgm9.s:4290   .text.TIM_CtrlPWMOutputs:00000000 $t
     /tmp/cc4hUgm9.s:4295   .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
     /tmp/cc4hUgm9.s:4349   .text.TIM_SelectCOM:00000000 $t
     /tmp/cc4hUgm9.s:4354   .text.TIM_SelectCOM:00000000 TIM_SelectCOM
     /tmp/cc4hUgm9.s:4407   .text.TIM_CCPreloadControl:00000000 $t
     /tmp/cc4hUgm9.s:4412   .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
     /tmp/cc4hUgm9.s:4465   .text.TIM_ITConfig:00000000 $t
     /tmp/cc4hUgm9.s:4470   .text.TIM_ITConfig:00000000 TIM_ITConfig
     /tmp/cc4hUgm9.s:4529   .text.TIM_GenerateEvent:00000000 $t
     /tmp/cc4hUgm9.s:4534   .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
     /tmp/cc4hUgm9.s:4568   .text.TIM_GetFlagStatus:00000000 $t
     /tmp/cc4hUgm9.s:4573   .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
     /tmp/cc4hUgm9.s:4627   .text.TIM_ClearFlag:00000000 $t
     /tmp/cc4hUgm9.s:4632   .text.TIM_ClearFlag:00000000 TIM_ClearFlag
     /tmp/cc4hUgm9.s:4668   .text.TIM_GetITStatus:00000000 $t
     /tmp/cc4hUgm9.s:4673   .text.TIM_GetITStatus:00000000 TIM_GetITStatus
     /tmp/cc4hUgm9.s:4745   .text.TIM_ClearITPendingBit:00000000 $t
     /tmp/cc4hUgm9.s:4750   .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit
     /tmp/cc4hUgm9.s:4786   .text.TIM_DMAConfig:00000000 $t
     /tmp/cc4hUgm9.s:4791   .text.TIM_DMAConfig:00000000 TIM_DMAConfig
     /tmp/cc4hUgm9.s:4830   .text.TIM_DMACmd:00000000 $t
     /tmp/cc4hUgm9.s:4835   .text.TIM_DMACmd:00000000 TIM_DMACmd
     /tmp/cc4hUgm9.s:4894   .text.TIM_SelectCCDMA:00000000 $t
     /tmp/cc4hUgm9.s:4899   .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
     /tmp/cc4hUgm9.s:4952   .text.TIM_InternalClockConfig:00000000 $t
     /tmp/cc4hUgm9.s:4957   .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
     /tmp/cc4hUgm9.s:4993   .text.TIM_ITRxExternalClockConfig:00000000 $t
     /tmp/cc4hUgm9.s:4998   .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
     /tmp/cc4hUgm9.s:5231   .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
     /tmp/cc4hUgm9.s:5040   .text.TIM_TIxExternalClockConfig:00000000 $t
     /tmp/cc4hUgm9.s:5045   .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
     /tmp/cc4hUgm9.s:5109   .text.TIM_ETRClockMode1Config:00000000 $t
     /tmp/cc4hUgm9.s:5114   .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
     /tmp/cc4hUgm9.s:5442   .text.TIM_ETRConfig:00000000 TIM_ETRConfig
     /tmp/cc4hUgm9.s:5177   .text.TIM_ETRClockMode2Config:00000000 $t
     /tmp/cc4hUgm9.s:5182   .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
     /tmp/cc4hUgm9.s:5226   .text.TIM_SelectInputTrigger:00000000 $t
     /tmp/cc4hUgm9.s:5281   .text.TIM_SelectOutputTrigger:00000000 $t
     /tmp/cc4hUgm9.s:5286   .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
     /tmp/cc4hUgm9.s:5333   .text.TIM_SelectSlaveMode:00000000 $t
     /tmp/cc4hUgm9.s:5338   .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
     /tmp/cc4hUgm9.s:5385   .text.TIM_SelectMasterSlaveMode:00000000 $t
     /tmp/cc4hUgm9.s:5390   .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
     /tmp/cc4hUgm9.s:5437   .text.TIM_ETRConfig:00000000 $t
     /tmp/cc4hUgm9.s:5501   .text.TIM_EncoderInterfaceConfig:00000000 $t
     /tmp/cc4hUgm9.s:5506   .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
     /tmp/cc4hUgm9.s:5603   .text.TIM_SelectHallSensor:00000000 $t
     /tmp/cc4hUgm9.s:5608   .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
     /tmp/cc4hUgm9.s:5661   .text.TIM_RemapConfig:00000000 $t
     /tmp/cc4hUgm9.s:5666   .text.TIM_RemapConfig:00000000 TIM_RemapConfig
     /tmp/cc4hUgm9.s:5700   .text.TI1_Config:00000000 $t
     /tmp/cc4hUgm9.s:5789   .text.TI2_Config:00000000 $t
     /tmp/cc4hUgm9.s:5890   .text.TI3_Config:00000000 $t
     /tmp/cc4hUgm9.s:5985   .text.TI4_Config:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
