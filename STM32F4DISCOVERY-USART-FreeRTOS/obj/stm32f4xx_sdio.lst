   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_sdio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SDIO_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	SDIO_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	SDIO_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Initialization and Configuration
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - CE-ATA mode management
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - DMA transfers management
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Interrupts and flags management
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @verbatim
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                 How to use this driver
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          9. When using the DMA mode 
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Argument
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Index
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Response type
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Wait
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Read Operations
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Write Operations
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @endverbatim
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @attention
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */ 
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                  Initialization and Configuration functions
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  28              		.loc 1 260 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  40              		.loc 1 261 0
  41 0004 4FF40060 		mov	r0, #2048
  42 0008 0121     		movs	r1, #1
  43 000a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  44              		.loc 1 262 0
  45 000e 4FF40060 		mov	r0, #2048
  46 0012 0021     		movs	r1, #0
  47 0014 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
  48              		.loc 1 263 0
  49 0018 80BD     		pop	{r7, pc}
  50              		.cfi_endproc
  51              	.LFE110:
  53 001a 00BF     		.section	.text.SDIO_Init,"ax",%progbits
  54              		.align	2
  55              		.global	SDIO_Init
  56              		.thumb
  57              		.thumb_func
  59              	SDIO_Init:
  60              	.LFB111:
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  61              		.loc 1 273 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 16
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66 0000 80B4     		push	{r7}
  67              	.LCFI2:
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 85B0     		sub	sp, sp, #20
  71              	.LCFI3:
  72              		.cfi_def_cfa_offset 24
  73 0004 00AF     		add	r7, sp, #0
  74              	.LCFI4:
  75              		.cfi_def_cfa_register 7
  76 0006 7860     		str	r0, [r7, #4]
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
  77              		.loc 1 274 0
  78 0008 0023     		movs	r3, #0
  79 000a FB60     		str	r3, [r7, #12]
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  80              		.loc 1 285 0
  81 000c 124B     		ldr	r3, .L3
  82 000e 5B68     		ldr	r3, [r3, #4]
  83 0010 FB60     		str	r3, [r7, #12]
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  84              		.loc 1 288 0
  85 0012 FB68     		ldr	r3, [r7, #12]
  86 0014 23F4FD43 		bic	r3, r3, #32384
  87 0018 23F07F03 		bic	r3, r3, #127
  88 001c FB60     		str	r3, [r7, #12]
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  89              		.loc 1 296 0
  90 001e 7B68     		ldr	r3, [r7, #4]
  91 0020 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  92 0022 1A46     		mov	r2, r3
  93 0024 7B68     		ldr	r3, [r7, #4]
  94 0026 9B68     		ldr	r3, [r3, #8]
  95 0028 1A43     		orrs	r2, r2, r3
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  96              		.loc 1 297 0
  97 002a 7B68     		ldr	r3, [r7, #4]
  98 002c 5B68     		ldr	r3, [r3, #4]
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  99              		.loc 1 296 0
 100 002e 1A43     		orrs	r2, r2, r3
 101              		.loc 1 297 0
 102 0030 7B68     		ldr	r3, [r7, #4]
 103 0032 DB68     		ldr	r3, [r3, #12]
 104 0034 1A43     		orrs	r2, r2, r3
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 105              		.loc 1 298 0
 106 0036 7B68     		ldr	r3, [r7, #4]
 107 0038 1B68     		ldr	r3, [r3]
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 108              		.loc 1 297 0
 109 003a 1A43     		orrs	r2, r2, r3
 110              		.loc 1 298 0
 111 003c 7B68     		ldr	r3, [r7, #4]
 112 003e 1B69     		ldr	r3, [r3, #16]
 113 0040 1343     		orrs	r3, r3, r2
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 114              		.loc 1 296 0
 115 0042 FA68     		ldr	r2, [r7, #12]
 116 0044 1343     		orrs	r3, r3, r2
 117 0046 FB60     		str	r3, [r7, #12]
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 118              		.loc 1 301 0
 119 0048 034B     		ldr	r3, .L3
 120 004a FA68     		ldr	r2, [r7, #12]
 121 004c 5A60     		str	r2, [r3, #4]
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 122              		.loc 1 302 0
 123 004e 1437     		adds	r7, r7, #20
 124 0050 BD46     		mov	sp, r7
 125              		@ sp needed
 126 0052 5DF8047B 		ldr	r7, [sp], #4
 127 0056 7047     		bx	lr
 128              	.L4:
 129              		.align	2
 130              	.L3:
 131 0058 002C0140 		.word	1073818624
 132              		.cfi_endproc
 133              	.LFE111:
 135              		.section	.text.SDIO_StructInit,"ax",%progbits
 136              		.align	2
 137              		.global	SDIO_StructInit
 138              		.thumb
 139              		.thumb_func
 141              	SDIO_StructInit:
 142              	.LFB112:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         will be initialized.
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 143              		.loc 1 311 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 8
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148 0000 80B4     		push	{r7}
 149              	.LCFI5:
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 7, -4
 152 0002 83B0     		sub	sp, sp, #12
 153              	.LCFI6:
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              	.LCFI7:
 157              		.cfi_def_cfa_register 7
 158 0006 7860     		str	r0, [r7, #4]
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 159              		.loc 1 313 0
 160 0008 7B68     		ldr	r3, [r7, #4]
 161 000a 0022     		movs	r2, #0
 162 000c 1A75     		strb	r2, [r3, #20]
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 163              		.loc 1 314 0
 164 000e 7B68     		ldr	r3, [r7, #4]
 165 0010 0022     		movs	r2, #0
 166 0012 1A60     		str	r2, [r3]
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 167              		.loc 1 315 0
 168 0014 7B68     		ldr	r3, [r7, #4]
 169 0016 0022     		movs	r2, #0
 170 0018 5A60     		str	r2, [r3, #4]
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 171              		.loc 1 316 0
 172 001a 7B68     		ldr	r3, [r7, #4]
 173 001c 0022     		movs	r2, #0
 174 001e 9A60     		str	r2, [r3, #8]
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 175              		.loc 1 317 0
 176 0020 7B68     		ldr	r3, [r7, #4]
 177 0022 0022     		movs	r2, #0
 178 0024 DA60     		str	r2, [r3, #12]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 179              		.loc 1 318 0
 180 0026 7B68     		ldr	r3, [r7, #4]
 181 0028 0022     		movs	r2, #0
 182 002a 1A61     		str	r2, [r3, #16]
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 183              		.loc 1 319 0
 184 002c 0C37     		adds	r7, r7, #12
 185 002e BD46     		mov	sp, r7
 186              		@ sp needed
 187 0030 5DF8047B 		ldr	r7, [sp], #4
 188 0034 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE112:
 192 0036 00BF     		.section	.text.SDIO_ClockCmd,"ax",%progbits
 193              		.align	2
 194              		.global	SDIO_ClockCmd
 195              		.thumb
 196              		.thumb_func
 198              	SDIO_ClockCmd:
 199              	.LFB113:
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 200              		.loc 1 328 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205 0000 80B4     		push	{r7}
 206              	.LCFI8:
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 7, -4
 209 0002 83B0     		sub	sp, sp, #12
 210              	.LCFI9:
 211              		.cfi_def_cfa_offset 16
 212 0004 00AF     		add	r7, sp, #0
 213              	.LCFI10:
 214              		.cfi_def_cfa_register 7
 215 0006 0346     		mov	r3, r0
 216 0008 FB71     		strb	r3, [r7, #7]
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 217              		.loc 1 332 0
 218 000a 044B     		ldr	r3, .L7
 219 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 220 000e 1A60     		str	r2, [r3]
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 221              		.loc 1 333 0
 222 0010 0C37     		adds	r7, r7, #12
 223 0012 BD46     		mov	sp, r7
 224              		@ sp needed
 225 0014 5DF8047B 		ldr	r7, [sp], #4
 226 0018 7047     		bx	lr
 227              	.L8:
 228 001a 00BF     		.align	2
 229              	.L7:
 230 001c A0802542 		.word	1109754016
 231              		.cfi_endproc
 232              	.LFE113:
 234              		.section	.text.SDIO_SetPowerState,"ax",%progbits
 235              		.align	2
 236              		.global	SDIO_SetPowerState
 237              		.thumb
 238              		.thumb_func
 240              	SDIO_SetPowerState:
 241              	.LFB114:
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 242              		.loc 1 344 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247 0000 80B4     		push	{r7}
 248              	.LCFI11:
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 7, -4
 251 0002 83B0     		sub	sp, sp, #12
 252              	.LCFI12:
 253              		.cfi_def_cfa_offset 16
 254 0004 00AF     		add	r7, sp, #0
 255              	.LCFI13:
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 258              		.loc 1 348 0
 259 0008 034B     		ldr	r3, .L10
 260 000a 7A68     		ldr	r2, [r7, #4]
 261 000c 1A60     		str	r2, [r3]
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 262              		.loc 1 349 0
 263 000e 0C37     		adds	r7, r7, #12
 264 0010 BD46     		mov	sp, r7
 265              		@ sp needed
 266 0012 5DF8047B 		ldr	r7, [sp], #4
 267 0016 7047     		bx	lr
 268              	.L11:
 269              		.align	2
 270              	.L10:
 271 0018 002C0140 		.word	1073818624
 272              		.cfi_endproc
 273              	.LFE114:
 275              		.section	.text.SDIO_GetPowerState,"ax",%progbits
 276              		.align	2
 277              		.global	SDIO_GetPowerState
 278              		.thumb
 279              		.thumb_func
 281              	SDIO_GetPowerState:
 282              	.LFB115:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         following values:
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 283              		.loc 1 361 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0000 80B4     		push	{r7}
 289              	.LCFI14:
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 7, -4
 292 0002 00AF     		add	r7, sp, #0
 293              	.LCFI15:
 294              		.cfi_def_cfa_register 7
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 295              		.loc 1 362 0
 296 0004 044B     		ldr	r3, .L14
 297 0006 1B68     		ldr	r3, [r3]
 298 0008 03F00303 		and	r3, r3, #3
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 299              		.loc 1 363 0
 300 000c 1846     		mov	r0, r3
 301 000e BD46     		mov	sp, r7
 302              		@ sp needed
 303 0010 5DF8047B 		ldr	r7, [sp], #4
 304 0014 7047     		bx	lr
 305              	.L15:
 306 0016 00BF     		.align	2
 307              	.L14:
 308 0018 002C0140 		.word	1073818624
 309              		.cfi_endproc
 310              	.LFE115:
 312              		.section	.text.SDIO_SendCommand,"ax",%progbits
 313              		.align	2
 314              		.global	SDIO_SendCommand
 315              		.thumb
 316              		.thumb_func
 318              	SDIO_SendCommand:
 319              	.LFB116:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Command path state machine (CPSM) management functions
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         command.
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 320              		.loc 1 393 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 16
 323              		@ frame_needed = 1, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325 0000 80B4     		push	{r7}
 326              	.LCFI16:
 327              		.cfi_def_cfa_offset 4
 328              		.cfi_offset 7, -4
 329 0002 85B0     		sub	sp, sp, #20
 330              	.LCFI17:
 331              		.cfi_def_cfa_offset 24
 332 0004 00AF     		add	r7, sp, #0
 333              	.LCFI18:
 334              		.cfi_def_cfa_register 7
 335 0006 7860     		str	r0, [r7, #4]
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 336              		.loc 1 394 0
 337 0008 0023     		movs	r3, #0
 338 000a FB60     		str	r3, [r7, #12]
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 339              		.loc 1 404 0
 340 000c 114B     		ldr	r3, .L17
 341 000e 7A68     		ldr	r2, [r7, #4]
 342 0010 1268     		ldr	r2, [r2]
 343 0012 9A60     		str	r2, [r3, #8]
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 344              		.loc 1 408 0
 345 0014 0F4B     		ldr	r3, .L17
 346 0016 DB68     		ldr	r3, [r3, #12]
 347 0018 FB60     		str	r3, [r7, #12]
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 348              		.loc 1 410 0
 349 001a FB68     		ldr	r3, [r7, #12]
 350 001c 23F4FF63 		bic	r3, r3, #2040
 351 0020 23F00703 		bic	r3, r3, #7
 352 0024 FB60     		str	r3, [r7, #12]
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 353              		.loc 1 415 0
 354 0026 7B68     		ldr	r3, [r7, #4]
 355 0028 5A68     		ldr	r2, [r3, #4]
 356 002a 7B68     		ldr	r3, [r7, #4]
 357 002c 9B68     		ldr	r3, [r3, #8]
 358 002e 1A43     		orrs	r2, r2, r3
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 359              		.loc 1 416 0
 360 0030 7B68     		ldr	r3, [r7, #4]
 361 0032 DB68     		ldr	r3, [r3, #12]
 362 0034 1A43     		orrs	r2, r2, r3
 363 0036 7B68     		ldr	r3, [r7, #4]
 364 0038 1B69     		ldr	r3, [r3, #16]
 365 003a 1343     		orrs	r3, r3, r2
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 366              		.loc 1 415 0
 367 003c FA68     		ldr	r2, [r7, #12]
 368 003e 1343     		orrs	r3, r3, r2
 369 0040 FB60     		str	r3, [r7, #12]
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 370              		.loc 1 419 0
 371 0042 044B     		ldr	r3, .L17
 372 0044 FA68     		ldr	r2, [r7, #12]
 373 0046 DA60     		str	r2, [r3, #12]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 374              		.loc 1 420 0
 375 0048 1437     		adds	r7, r7, #20
 376 004a BD46     		mov	sp, r7
 377              		@ sp needed
 378 004c 5DF8047B 		ldr	r7, [sp], #4
 379 0050 7047     		bx	lr
 380              	.L18:
 381 0052 00BF     		.align	2
 382              	.L17:
 383 0054 002C0140 		.word	1073818624
 384              		.cfi_endproc
 385              	.LFE116:
 387              		.section	.text.SDIO_CmdStructInit,"ax",%progbits
 388              		.align	2
 389              		.global	SDIO_CmdStructInit
 390              		.thumb
 391              		.thumb_func
 393              	SDIO_CmdStructInit:
 394              	.LFB117:
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 395              		.loc 1 429 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 0000 80B4     		push	{r7}
 401              	.LCFI19:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 0002 83B0     		sub	sp, sp, #12
 405              	.LCFI20:
 406              		.cfi_def_cfa_offset 16
 407 0004 00AF     		add	r7, sp, #0
 408              	.LCFI21:
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 411              		.loc 1 431 0
 412 0008 7B68     		ldr	r3, [r7, #4]
 413 000a 0022     		movs	r2, #0
 414 000c 1A60     		str	r2, [r3]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 415              		.loc 1 432 0
 416 000e 7B68     		ldr	r3, [r7, #4]
 417 0010 0022     		movs	r2, #0
 418 0012 5A60     		str	r2, [r3, #4]
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 419              		.loc 1 433 0
 420 0014 7B68     		ldr	r3, [r7, #4]
 421 0016 0022     		movs	r2, #0
 422 0018 9A60     		str	r2, [r3, #8]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 423              		.loc 1 434 0
 424 001a 7B68     		ldr	r3, [r7, #4]
 425 001c 0022     		movs	r2, #0
 426 001e DA60     		str	r2, [r3, #12]
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 427              		.loc 1 435 0
 428 0020 7B68     		ldr	r3, [r7, #4]
 429 0022 0022     		movs	r2, #0
 430 0024 1A61     		str	r2, [r3, #16]
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 431              		.loc 1 436 0
 432 0026 0C37     		adds	r7, r7, #12
 433 0028 BD46     		mov	sp, r7
 434              		@ sp needed
 435 002a 5DF8047B 		ldr	r7, [sp], #4
 436 002e 7047     		bx	lr
 437              		.cfi_endproc
 438              	.LFE117:
 440              		.section	.text.SDIO_GetCommandResponse,"ax",%progbits
 441              		.align	2
 442              		.global	SDIO_GetCommandResponse
 443              		.thumb
 444              		.thumb_func
 446              	SDIO_GetCommandResponse:
 447              	.LFB118:
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 448              		.loc 1 444 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              	.LCFI22:
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 7, -4
 457 0002 00AF     		add	r7, sp, #0
 458              	.LCFI23:
 459              		.cfi_def_cfa_register 7
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 460              		.loc 1 445 0
 461 0004 034B     		ldr	r3, .L22
 462 0006 1B69     		ldr	r3, [r3, #16]
 463 0008 DBB2     		uxtb	r3, r3
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 464              		.loc 1 446 0
 465 000a 1846     		mov	r0, r3
 466 000c BD46     		mov	sp, r7
 467              		@ sp needed
 468 000e 5DF8047B 		ldr	r7, [sp], #4
 469 0012 7047     		bx	lr
 470              	.L23:
 471              		.align	2
 472              	.L22:
 473 0014 002C0140 		.word	1073818624
 474              		.cfi_endproc
 475              	.LFE118:
 477              		.section	.text.SDIO_GetResponse,"ax",%progbits
 478              		.align	2
 479              		.global	SDIO_GetResponse
 480              		.thumb
 481              		.thumb_func
 483              	SDIO_GetResponse:
 484              	.LFB119:
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 485              		.loc 1 459 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 16
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490 0000 80B4     		push	{r7}
 491              	.LCFI24:
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 7, -4
 494 0002 85B0     		sub	sp, sp, #20
 495              	.LCFI25:
 496              		.cfi_def_cfa_offset 24
 497 0004 00AF     		add	r7, sp, #0
 498              	.LCFI26:
 499              		.cfi_def_cfa_register 7
 500 0006 7860     		str	r0, [r7, #4]
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 501              		.loc 1 460 0
 502 0008 0023     		movs	r3, #0
 503 000a FB60     		str	r3, [r7, #12]
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 504              		.loc 1 465 0
 505 000c 7A68     		ldr	r2, [r7, #4]
 506 000e 054B     		ldr	r3, .L26
 507 0010 1344     		add	r3, r3, r2
 508 0012 FB60     		str	r3, [r7, #12]
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 509              		.loc 1 467 0
 510 0014 FB68     		ldr	r3, [r7, #12]
 511 0016 1B68     		ldr	r3, [r3]
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 512              		.loc 1 468 0
 513 0018 1846     		mov	r0, r3
 514 001a 1437     		adds	r7, r7, #20
 515 001c BD46     		mov	sp, r7
 516              		@ sp needed
 517 001e 5DF8047B 		ldr	r7, [sp], #4
 518 0022 7047     		bx	lr
 519              	.L27:
 520              		.align	2
 521              	.L26:
 522 0024 142C0140 		.word	1073818644
 523              		.cfi_endproc
 524              	.LFE119:
 526              		.section	.text.SDIO_DataConfig,"ax",%progbits
 527              		.align	2
 528              		.global	SDIO_DataConfig
 529              		.thumb
 530              		.thumb_func
 532              	SDIO_DataConfig:
 533              	.LFB120:
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Data path state machine (DPSM) management functions
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 534              		.loc 1 497 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 16
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539 0000 80B4     		push	{r7}
 540              	.LCFI27:
 541              		.cfi_def_cfa_offset 4
 542              		.cfi_offset 7, -4
 543 0002 85B0     		sub	sp, sp, #20
 544              	.LCFI28:
 545              		.cfi_def_cfa_offset 24
 546 0004 00AF     		add	r7, sp, #0
 547              	.LCFI29:
 548              		.cfi_def_cfa_register 7
 549 0006 7860     		str	r0, [r7, #4]
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 550              		.loc 1 498 0
 551 0008 0023     		movs	r3, #0
 552 000a FB60     		str	r3, [r7, #12]
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 553              		.loc 1 509 0
 554 000c 124B     		ldr	r3, .L29
 555 000e 7A68     		ldr	r2, [r7, #4]
 556 0010 1268     		ldr	r2, [r2]
 557 0012 5A62     		str	r2, [r3, #36]
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 558              		.loc 1 513 0
 559 0014 104B     		ldr	r3, .L29
 560 0016 7A68     		ldr	r2, [r7, #4]
 561 0018 5268     		ldr	r2, [r2, #4]
 562 001a 9A62     		str	r2, [r3, #40]
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 563              		.loc 1 517 0
 564 001c 0E4B     		ldr	r3, .L29
 565 001e DB6A     		ldr	r3, [r3, #44]
 566 0020 FB60     		str	r3, [r7, #12]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 567              		.loc 1 519 0
 568 0022 FB68     		ldr	r3, [r7, #12]
 569 0024 23F0F703 		bic	r3, r3, #247
 570 0028 FB60     		str	r3, [r7, #12]
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 571              		.loc 1 524 0
 572 002a 7B68     		ldr	r3, [r7, #4]
 573 002c 9A68     		ldr	r2, [r3, #8]
 574 002e 7B68     		ldr	r3, [r7, #4]
 575 0030 DB68     		ldr	r3, [r3, #12]
 576 0032 1A43     		orrs	r2, r2, r3
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 577              		.loc 1 525 0
 578 0034 7B68     		ldr	r3, [r7, #4]
 579 0036 1B69     		ldr	r3, [r3, #16]
 580 0038 1A43     		orrs	r2, r2, r3
 581 003a 7B68     		ldr	r3, [r7, #4]
 582 003c 5B69     		ldr	r3, [r3, #20]
 583 003e 1343     		orrs	r3, r3, r2
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 584              		.loc 1 524 0
 585 0040 FA68     		ldr	r2, [r7, #12]
 586 0042 1343     		orrs	r3, r3, r2
 587 0044 FB60     		str	r3, [r7, #12]
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 588              		.loc 1 528 0
 589 0046 044B     		ldr	r3, .L29
 590 0048 FA68     		ldr	r2, [r7, #12]
 591 004a DA62     		str	r2, [r3, #44]
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 592              		.loc 1 529 0
 593 004c 1437     		adds	r7, r7, #20
 594 004e BD46     		mov	sp, r7
 595              		@ sp needed
 596 0050 5DF8047B 		ldr	r7, [sp], #4
 597 0054 7047     		bx	lr
 598              	.L30:
 599 0056 00BF     		.align	2
 600              	.L29:
 601 0058 002C0140 		.word	1073818624
 602              		.cfi_endproc
 603              	.LFE120:
 605              		.section	.text.SDIO_DataStructInit,"ax",%progbits
 606              		.align	2
 607              		.global	SDIO_DataStructInit
 608              		.thumb
 609              		.thumb_func
 611              	SDIO_DataStructInit:
 612              	.LFB121:
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 613              		.loc 1 538 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 8
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618 0000 80B4     		push	{r7}
 619              	.LCFI30:
 620              		.cfi_def_cfa_offset 4
 621              		.cfi_offset 7, -4
 622 0002 83B0     		sub	sp, sp, #12
 623              	.LCFI31:
 624              		.cfi_def_cfa_offset 16
 625 0004 00AF     		add	r7, sp, #0
 626              	.LCFI32:
 627              		.cfi_def_cfa_register 7
 628 0006 7860     		str	r0, [r7, #4]
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 629              		.loc 1 540 0
 630 0008 7B68     		ldr	r3, [r7, #4]
 631 000a 4FF0FF32 		mov	r2, #-1
 632 000e 1A60     		str	r2, [r3]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 633              		.loc 1 541 0
 634 0010 7B68     		ldr	r3, [r7, #4]
 635 0012 0022     		movs	r2, #0
 636 0014 5A60     		str	r2, [r3, #4]
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 637              		.loc 1 542 0
 638 0016 7B68     		ldr	r3, [r7, #4]
 639 0018 0022     		movs	r2, #0
 640 001a 9A60     		str	r2, [r3, #8]
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 641              		.loc 1 543 0
 642 001c 7B68     		ldr	r3, [r7, #4]
 643 001e 0022     		movs	r2, #0
 644 0020 DA60     		str	r2, [r3, #12]
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 645              		.loc 1 544 0
 646 0022 7B68     		ldr	r3, [r7, #4]
 647 0024 0022     		movs	r2, #0
 648 0026 1A61     		str	r2, [r3, #16]
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 649              		.loc 1 545 0
 650 0028 7B68     		ldr	r3, [r7, #4]
 651 002a 0022     		movs	r2, #0
 652 002c 5A61     		str	r2, [r3, #20]
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 653              		.loc 1 546 0
 654 002e 0C37     		adds	r7, r7, #12
 655 0030 BD46     		mov	sp, r7
 656              		@ sp needed
 657 0032 5DF8047B 		ldr	r7, [sp], #4
 658 0036 7047     		bx	lr
 659              		.cfi_endproc
 660              	.LFE121:
 662              		.section	.text.SDIO_GetDataCounter,"ax",%progbits
 663              		.align	2
 664              		.global	SDIO_GetDataCounter
 665              		.thumb
 666              		.thumb_func
 668              	SDIO_GetDataCounter:
 669              	.LFB122:
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 670              		.loc 1 554 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 675 0000 80B4     		push	{r7}
 676              	.LCFI33:
 677              		.cfi_def_cfa_offset 4
 678              		.cfi_offset 7, -4
 679 0002 00AF     		add	r7, sp, #0
 680              	.LCFI34:
 681              		.cfi_def_cfa_register 7
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 682              		.loc 1 555 0
 683 0004 034B     		ldr	r3, .L34
 684 0006 1B6B     		ldr	r3, [r3, #48]
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 685              		.loc 1 556 0
 686 0008 1846     		mov	r0, r3
 687 000a BD46     		mov	sp, r7
 688              		@ sp needed
 689 000c 5DF8047B 		ldr	r7, [sp], #4
 690 0010 7047     		bx	lr
 691              	.L35:
 692 0012 00BF     		.align	2
 693              	.L34:
 694 0014 002C0140 		.word	1073818624
 695              		.cfi_endproc
 696              	.LFE122:
 698              		.section	.text.SDIO_ReadData,"ax",%progbits
 699              		.align	2
 700              		.global	SDIO_ReadData
 701              		.thumb
 702              		.thumb_func
 704              	SDIO_ReadData:
 705              	.LFB123:
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Data received
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 706              		.loc 1 564 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711 0000 80B4     		push	{r7}
 712              	.LCFI35:
 713              		.cfi_def_cfa_offset 4
 714              		.cfi_offset 7, -4
 715 0002 00AF     		add	r7, sp, #0
 716              	.LCFI36:
 717              		.cfi_def_cfa_register 7
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 718              		.loc 1 565 0
 719 0004 034B     		ldr	r3, .L38
 720 0006 D3F88030 		ldr	r3, [r3, #128]
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 721              		.loc 1 566 0
 722 000a 1846     		mov	r0, r3
 723 000c BD46     		mov	sp, r7
 724              		@ sp needed
 725 000e 5DF8047B 		ldr	r7, [sp], #4
 726 0012 7047     		bx	lr
 727              	.L39:
 728              		.align	2
 729              	.L38:
 730 0014 002C0140 		.word	1073818624
 731              		.cfi_endproc
 732              	.LFE123:
 734              		.section	.text.SDIO_WriteData,"ax",%progbits
 735              		.align	2
 736              		.global	SDIO_WriteData
 737              		.thumb
 738              		.thumb_func
 740              	SDIO_WriteData:
 741              	.LFB124:
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 742              		.loc 1 574 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 8
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747 0000 80B4     		push	{r7}
 748              	.LCFI37:
 749              		.cfi_def_cfa_offset 4
 750              		.cfi_offset 7, -4
 751 0002 83B0     		sub	sp, sp, #12
 752              	.LCFI38:
 753              		.cfi_def_cfa_offset 16
 754 0004 00AF     		add	r7, sp, #0
 755              	.LCFI39:
 756              		.cfi_def_cfa_register 7
 757 0006 7860     		str	r0, [r7, #4]
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 758              		.loc 1 575 0
 759 0008 044B     		ldr	r3, .L41
 760 000a 7A68     		ldr	r2, [r7, #4]
 761 000c C3F88020 		str	r2, [r3, #128]
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 762              		.loc 1 576 0
 763 0010 0C37     		adds	r7, r7, #12
 764 0012 BD46     		mov	sp, r7
 765              		@ sp needed
 766 0014 5DF8047B 		ldr	r7, [sp], #4
 767 0018 7047     		bx	lr
 768              	.L42:
 769 001a 00BF     		.align	2
 770              	.L41:
 771 001c 002C0140 		.word	1073818624
 772              		.cfi_endproc
 773              	.LFE124:
 775              		.section	.text.SDIO_GetFIFOCount,"ax",%progbits
 776              		.align	2
 777              		.global	SDIO_GetFIFOCount
 778              		.thumb
 779              		.thumb_func
 781              	SDIO_GetFIFOCount:
 782              	.LFB125:
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 783              		.loc 1 584 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 1, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 788 0000 80B4     		push	{r7}
 789              	.LCFI40:
 790              		.cfi_def_cfa_offset 4
 791              		.cfi_offset 7, -4
 792 0002 00AF     		add	r7, sp, #0
 793              	.LCFI41:
 794              		.cfi_def_cfa_register 7
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 795              		.loc 1 585 0
 796 0004 034B     		ldr	r3, .L45
 797 0006 9B6C     		ldr	r3, [r3, #72]
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 798              		.loc 1 586 0
 799 0008 1846     		mov	r0, r3
 800 000a BD46     		mov	sp, r7
 801              		@ sp needed
 802 000c 5DF8047B 		ldr	r7, [sp], #4
 803 0010 7047     		bx	lr
 804              	.L46:
 805 0012 00BF     		.align	2
 806              	.L45:
 807 0014 002C0140 		.word	1073818624
 808              		.cfi_endproc
 809              	.LFE125:
 811              		.section	.text.SDIO_StartSDIOReadWait,"ax",%progbits
 812              		.align	2
 813              		.global	SDIO_StartSDIOReadWait
 814              		.thumb
 815              		.thumb_func
 817              	SDIO_StartSDIOReadWait:
 818              	.LFB126:
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               SDIO IO Cards mode management functions
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 819              		.loc 1 613 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 8
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 824 0000 80B4     		push	{r7}
 825              	.LCFI42:
 826              		.cfi_def_cfa_offset 4
 827              		.cfi_offset 7, -4
 828 0002 83B0     		sub	sp, sp, #12
 829              	.LCFI43:
 830              		.cfi_def_cfa_offset 16
 831 0004 00AF     		add	r7, sp, #0
 832              	.LCFI44:
 833              		.cfi_def_cfa_register 7
 834 0006 0346     		mov	r3, r0
 835 0008 FB71     		strb	r3, [r7, #7]
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 836              		.loc 1 617 0
 837 000a 044B     		ldr	r3, .L48
 838 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 839 000e 1A60     		str	r2, [r3]
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 840              		.loc 1 618 0
 841 0010 0C37     		adds	r7, r7, #12
 842 0012 BD46     		mov	sp, r7
 843              		@ sp needed
 844 0014 5DF8047B 		ldr	r7, [sp], #4
 845 0018 7047     		bx	lr
 846              	.L49:
 847 001a 00BF     		.align	2
 848              	.L48:
 849 001c A0852542 		.word	1109755296
 850              		.cfi_endproc
 851              	.LFE126:
 853              		.section	.text.SDIO_StopSDIOReadWait,"ax",%progbits
 854              		.align	2
 855              		.global	SDIO_StopSDIOReadWait
 856              		.thumb
 857              		.thumb_func
 859              	SDIO_StopSDIOReadWait:
 860              	.LFB127:
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 861              		.loc 1 627 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 8
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865              		@ link register save eliminated.
 866 0000 80B4     		push	{r7}
 867              	.LCFI45:
 868              		.cfi_def_cfa_offset 4
 869              		.cfi_offset 7, -4
 870 0002 83B0     		sub	sp, sp, #12
 871              	.LCFI46:
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              	.LCFI47:
 875              		.cfi_def_cfa_register 7
 876 0006 0346     		mov	r3, r0
 877 0008 FB71     		strb	r3, [r7, #7]
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 878              		.loc 1 631 0
 879 000a 044B     		ldr	r3, .L51
 880 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 881 000e 1A60     		str	r2, [r3]
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 882              		.loc 1 632 0
 883 0010 0C37     		adds	r7, r7, #12
 884 0012 BD46     		mov	sp, r7
 885              		@ sp needed
 886 0014 5DF8047B 		ldr	r7, [sp], #4
 887 0018 7047     		bx	lr
 888              	.L52:
 889 001a 00BF     		.align	2
 890              	.L51:
 891 001c A4852542 		.word	1109755300
 892              		.cfi_endproc
 893              	.LFE127:
 895              		.section	.text.SDIO_SetSDIOReadWaitMode,"ax",%progbits
 896              		.align	2
 897              		.global	SDIO_SetSDIOReadWaitMode
 898              		.thumb
 899              		.thumb_func
 901              	SDIO_SetSDIOReadWaitMode:
 902              	.LFB128:
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 903              		.loc 1 643 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 8
 906              		@ frame_needed = 1, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908 0000 80B4     		push	{r7}
 909              	.LCFI48:
 910              		.cfi_def_cfa_offset 4
 911              		.cfi_offset 7, -4
 912 0002 83B0     		sub	sp, sp, #12
 913              	.LCFI49:
 914              		.cfi_def_cfa_offset 16
 915 0004 00AF     		add	r7, sp, #0
 916              	.LCFI50:
 917              		.cfi_def_cfa_register 7
 918 0006 7860     		str	r0, [r7, #4]
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 919              		.loc 1 647 0
 920 0008 034B     		ldr	r3, .L54
 921 000a 7A68     		ldr	r2, [r7, #4]
 922 000c 1A60     		str	r2, [r3]
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 923              		.loc 1 648 0
 924 000e 0C37     		adds	r7, r7, #12
 925 0010 BD46     		mov	sp, r7
 926              		@ sp needed
 927 0012 5DF8047B 		ldr	r7, [sp], #4
 928 0016 7047     		bx	lr
 929              	.L55:
 930              		.align	2
 931              	.L54:
 932 0018 A8852542 		.word	1109755304
 933              		.cfi_endproc
 934              	.LFE128:
 936              		.section	.text.SDIO_SetSDIOOperation,"ax",%progbits
 937              		.align	2
 938              		.global	SDIO_SetSDIOOperation
 939              		.thumb
 940              		.thumb_func
 942              	SDIO_SetSDIOOperation:
 943              	.LFB129:
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 944              		.loc 1 657 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 8
 947              		@ frame_needed = 1, uses_anonymous_args = 0
 948              		@ link register save eliminated.
 949 0000 80B4     		push	{r7}
 950              	.LCFI51:
 951              		.cfi_def_cfa_offset 4
 952              		.cfi_offset 7, -4
 953 0002 83B0     		sub	sp, sp, #12
 954              	.LCFI52:
 955              		.cfi_def_cfa_offset 16
 956 0004 00AF     		add	r7, sp, #0
 957              	.LCFI53:
 958              		.cfi_def_cfa_register 7
 959 0006 0346     		mov	r3, r0
 960 0008 FB71     		strb	r3, [r7, #7]
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 961              		.loc 1 661 0
 962 000a 044B     		ldr	r3, .L57
 963 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 964 000e 1A60     		str	r2, [r3]
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 965              		.loc 1 662 0
 966 0010 0C37     		adds	r7, r7, #12
 967 0012 BD46     		mov	sp, r7
 968              		@ sp needed
 969 0014 5DF8047B 		ldr	r7, [sp], #4
 970 0018 7047     		bx	lr
 971              	.L58:
 972 001a 00BF     		.align	2
 973              	.L57:
 974 001c AC852542 		.word	1109755308
 975              		.cfi_endproc
 976              	.LFE129:
 978              		.section	.text.SDIO_SendSDIOSuspendCmd,"ax",%progbits
 979              		.align	2
 980              		.global	SDIO_SendSDIOSuspendCmd
 981              		.thumb
 982              		.thumb_func
 984              	SDIO_SendSDIOSuspendCmd:
 985              	.LFB130:
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 986              		.loc 1 671 0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 8
 989              		@ frame_needed = 1, uses_anonymous_args = 0
 990              		@ link register save eliminated.
 991 0000 80B4     		push	{r7}
 992              	.LCFI54:
 993              		.cfi_def_cfa_offset 4
 994              		.cfi_offset 7, -4
 995 0002 83B0     		sub	sp, sp, #12
 996              	.LCFI55:
 997              		.cfi_def_cfa_offset 16
 998 0004 00AF     		add	r7, sp, #0
 999              	.LCFI56:
 1000              		.cfi_def_cfa_register 7
 1001 0006 0346     		mov	r3, r0
 1002 0008 FB71     		strb	r3, [r7, #7]
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 1003              		.loc 1 675 0
 1004 000a 044B     		ldr	r3, .L60
 1005 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1006 000e 1A60     		str	r2, [r3]
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1007              		.loc 1 676 0
 1008 0010 0C37     		adds	r7, r7, #12
 1009 0012 BD46     		mov	sp, r7
 1010              		@ sp needed
 1011 0014 5DF8047B 		ldr	r7, [sp], #4
 1012 0018 7047     		bx	lr
 1013              	.L61:
 1014 001a 00BF     		.align	2
 1015              	.L60:
 1016 001c AC812542 		.word	1109754284
 1017              		.cfi_endproc
 1018              	.LFE130:
 1020              		.section	.text.SDIO_CommandCompletionCmd,"ax",%progbits
 1021              		.align	2
 1022              		.global	SDIO_CommandCompletionCmd
 1023              		.thumb
 1024              		.thumb_func
 1026              	SDIO_CommandCompletionCmd:
 1027              	.LFB131:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               CE-ATA mode management functions
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1028              		.loc 1 703 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 8
 1031              		@ frame_needed = 1, uses_anonymous_args = 0
 1032              		@ link register save eliminated.
 1033 0000 80B4     		push	{r7}
 1034              	.LCFI57:
 1035              		.cfi_def_cfa_offset 4
 1036              		.cfi_offset 7, -4
 1037 0002 83B0     		sub	sp, sp, #12
 1038              	.LCFI58:
 1039              		.cfi_def_cfa_offset 16
 1040 0004 00AF     		add	r7, sp, #0
 1041              	.LCFI59:
 1042              		.cfi_def_cfa_register 7
 1043 0006 0346     		mov	r3, r0
 1044 0008 FB71     		strb	r3, [r7, #7]
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 1045              		.loc 1 707 0
 1046 000a 044B     		ldr	r3, .L63
 1047 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1048 000e 1A60     		str	r2, [r3]
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1049              		.loc 1 708 0
 1050 0010 0C37     		adds	r7, r7, #12
 1051 0012 BD46     		mov	sp, r7
 1052              		@ sp needed
 1053 0014 5DF8047B 		ldr	r7, [sp], #4
 1054 0018 7047     		bx	lr
 1055              	.L64:
 1056 001a 00BF     		.align	2
 1057              	.L63:
 1058 001c B0812542 		.word	1109754288
 1059              		.cfi_endproc
 1060              	.LFE131:
 1062              		.section	.text.SDIO_CEATAITCmd,"ax",%progbits
 1063              		.align	2
 1064              		.global	SDIO_CEATAITCmd
 1065              		.thumb
 1066              		.thumb_func
 1068              	SDIO_CEATAITCmd:
 1069              	.LFB132:
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1070              		.loc 1 717 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 8
 1073              		@ frame_needed = 1, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 1075 0000 80B4     		push	{r7}
 1076              	.LCFI60:
 1077              		.cfi_def_cfa_offset 4
 1078              		.cfi_offset 7, -4
 1079 0002 83B0     		sub	sp, sp, #12
 1080              	.LCFI61:
 1081              		.cfi_def_cfa_offset 16
 1082 0004 00AF     		add	r7, sp, #0
 1083              	.LCFI62:
 1084              		.cfi_def_cfa_register 7
 1085 0006 0346     		mov	r3, r0
 1086 0008 FB71     		strb	r3, [r7, #7]
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 1087              		.loc 1 721 0
 1088 000a 074B     		ldr	r3, .L66
 1089 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1090 000e 02F00102 		and	r2, r2, #1
 1091 0012 002A     		cmp	r2, #0
 1092 0014 14BF     		ite	ne
 1093 0016 0022     		movne	r2, #0
 1094 0018 0122     		moveq	r2, #1
 1095 001a D2B2     		uxtb	r2, r2
 1096 001c 1A60     		str	r2, [r3]
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1097              		.loc 1 722 0
 1098 001e 0C37     		adds	r7, r7, #12
 1099 0020 BD46     		mov	sp, r7
 1100              		@ sp needed
 1101 0022 5DF8047B 		ldr	r7, [sp], #4
 1102 0026 7047     		bx	lr
 1103              	.L67:
 1104              		.align	2
 1105              	.L66:
 1106 0028 B4812542 		.word	1109754292
 1107              		.cfi_endproc
 1108              	.LFE132:
 1110              		.section	.text.SDIO_SendCEATACmd,"ax",%progbits
 1111              		.align	2
 1112              		.global	SDIO_SendCEATACmd
 1113              		.thumb
 1114              		.thumb_func
 1116              	SDIO_SendCEATACmd:
 1117              	.LFB133:
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1118              		.loc 1 731 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 8
 1121              		@ frame_needed = 1, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123 0000 80B4     		push	{r7}
 1124              	.LCFI63:
 1125              		.cfi_def_cfa_offset 4
 1126              		.cfi_offset 7, -4
 1127 0002 83B0     		sub	sp, sp, #12
 1128              	.LCFI64:
 1129              		.cfi_def_cfa_offset 16
 1130 0004 00AF     		add	r7, sp, #0
 1131              	.LCFI65:
 1132              		.cfi_def_cfa_register 7
 1133 0006 0346     		mov	r3, r0
 1134 0008 FB71     		strb	r3, [r7, #7]
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 1135              		.loc 1 735 0
 1136 000a 044B     		ldr	r3, .L69
 1137 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1138 000e 1A60     		str	r2, [r3]
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1139              		.loc 1 736 0
 1140 0010 0C37     		adds	r7, r7, #12
 1141 0012 BD46     		mov	sp, r7
 1142              		@ sp needed
 1143 0014 5DF8047B 		ldr	r7, [sp], #4
 1144 0018 7047     		bx	lr
 1145              	.L70:
 1146 001a 00BF     		.align	2
 1147              	.L69:
 1148 001c B8812542 		.word	1109754296
 1149              		.cfi_endproc
 1150              	.LFE133:
 1152              		.section	.text.SDIO_DMACmd,"ax",%progbits
 1153              		.align	2
 1154              		.global	SDIO_DMACmd
 1155              		.thumb
 1156              		.thumb_func
 1158              	SDIO_DMACmd:
 1159              	.LFB134:
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               DMA transfers management functions
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1160              		.loc 1 763 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 8
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164              		@ link register save eliminated.
 1165 0000 80B4     		push	{r7}
 1166              	.LCFI66:
 1167              		.cfi_def_cfa_offset 4
 1168              		.cfi_offset 7, -4
 1169 0002 83B0     		sub	sp, sp, #12
 1170              	.LCFI67:
 1171              		.cfi_def_cfa_offset 16
 1172 0004 00AF     		add	r7, sp, #0
 1173              	.LCFI68:
 1174              		.cfi_def_cfa_register 7
 1175 0006 0346     		mov	r3, r0
 1176 0008 FB71     		strb	r3, [r7, #7]
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 1177              		.loc 1 767 0
 1178 000a 044B     		ldr	r3, .L72
 1179 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1180 000e 1A60     		str	r2, [r3]
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1181              		.loc 1 768 0
 1182 0010 0C37     		adds	r7, r7, #12
 1183 0012 BD46     		mov	sp, r7
 1184              		@ sp needed
 1185 0014 5DF8047B 		ldr	r7, [sp], #4
 1186 0018 7047     		bx	lr
 1187              	.L73:
 1188 001a 00BF     		.align	2
 1189              	.L72:
 1190 001c 8C852542 		.word	1109755276
 1191              		.cfi_endproc
 1192              	.LFE134:
 1194              		.section	.text.SDIO_ITConfig,"ax",%progbits
 1195              		.align	2
 1196              		.global	SDIO_ITConfig
 1197              		.thumb
 1198              		.thumb_func
 1200              	SDIO_ITConfig:
 1201              	.LFB135:
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                        Interrupts and flags management functions
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None 
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1202              		.loc 1 821 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 8
 1205              		@ frame_needed = 1, uses_anonymous_args = 0
 1206              		@ link register save eliminated.
 1207 0000 80B4     		push	{r7}
 1208              	.LCFI69:
 1209              		.cfi_def_cfa_offset 4
 1210              		.cfi_offset 7, -4
 1211 0002 83B0     		sub	sp, sp, #12
 1212              	.LCFI70:
 1213              		.cfi_def_cfa_offset 16
 1214 0004 00AF     		add	r7, sp, #0
 1215              	.LCFI71:
 1216              		.cfi_def_cfa_register 7
 1217 0006 7860     		str	r0, [r7, #4]
 1218 0008 0B46     		mov	r3, r1
 1219 000a FB70     		strb	r3, [r7, #3]
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 1220              		.loc 1 826 0
 1221 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1222 000e 002B     		cmp	r3, #0
 1223 0010 06D0     		beq	.L75
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 1224              		.loc 1 829 0
 1225 0012 094B     		ldr	r3, .L77
 1226 0014 084A     		ldr	r2, .L77
 1227 0016 D16B     		ldr	r1, [r2, #60]
 1228 0018 7A68     		ldr	r2, [r7, #4]
 1229 001a 0A43     		orrs	r2, r2, r1
 1230 001c DA63     		str	r2, [r3, #60]
 1231 001e 06E0     		b	.L74
 1232              	.L75:
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 1233              		.loc 1 834 0
 1234 0020 054B     		ldr	r3, .L77
 1235 0022 054A     		ldr	r2, .L77
 1236 0024 D16B     		ldr	r1, [r2, #60]
 1237 0026 7A68     		ldr	r2, [r7, #4]
 1238 0028 D243     		mvns	r2, r2
 1239 002a 0A40     		ands	r2, r2, r1
 1240 002c DA63     		str	r2, [r3, #60]
 1241              	.L74:
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   } 
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1242              		.loc 1 836 0
 1243 002e 0C37     		adds	r7, r7, #12
 1244 0030 BD46     		mov	sp, r7
 1245              		@ sp needed
 1246 0032 5DF8047B 		ldr	r7, [sp], #4
 1247 0036 7047     		bx	lr
 1248              	.L78:
 1249              		.align	2
 1250              	.L77:
 1251 0038 002C0140 		.word	1073818624
 1252              		.cfi_endproc
 1253              	.LFE135:
 1255              		.section	.text.SDIO_GetFlagStatus,"ax",%progbits
 1256              		.align	2
 1257              		.global	SDIO_GetFlagStatus
 1258              		.thumb
 1259              		.thumb_func
 1261              	SDIO_GetFlagStatus:
 1262              	.LFB136:
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1263              		.loc 1 869 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 16
 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267              		@ link register save eliminated.
 1268 0000 80B4     		push	{r7}
 1269              	.LCFI72:
 1270              		.cfi_def_cfa_offset 4
 1271              		.cfi_offset 7, -4
 1272 0002 85B0     		sub	sp, sp, #20
 1273              	.LCFI73:
 1274              		.cfi_def_cfa_offset 24
 1275 0004 00AF     		add	r7, sp, #0
 1276              	.LCFI74:
 1277              		.cfi_def_cfa_register 7
 1278 0006 7860     		str	r0, [r7, #4]
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 1279              		.loc 1 870 0
 1280 0008 0023     		movs	r3, #0
 1281 000a FB73     		strb	r3, [r7, #15]
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 1282              		.loc 1 875 0
 1283 000c 084B     		ldr	r3, .L83
 1284 000e 5A6B     		ldr	r2, [r3, #52]
 1285 0010 7B68     		ldr	r3, [r7, #4]
 1286 0012 1340     		ands	r3, r3, r2
 1287 0014 002B     		cmp	r3, #0
 1288 0016 02D0     		beq	.L80
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1289              		.loc 1 877 0
 1290 0018 0123     		movs	r3, #1
 1291 001a FB73     		strb	r3, [r7, #15]
 1292 001c 01E0     		b	.L81
 1293              	.L80:
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1294              		.loc 1 881 0
 1295 001e 0023     		movs	r3, #0
 1296 0020 FB73     		strb	r3, [r7, #15]
 1297              	.L81:
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1298              		.loc 1 883 0
 1299 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1300              		.loc 1 884 0
 1301 0024 1846     		mov	r0, r3
 1302 0026 1437     		adds	r7, r7, #20
 1303 0028 BD46     		mov	sp, r7
 1304              		@ sp needed
 1305 002a 5DF8047B 		ldr	r7, [sp], #4
 1306 002e 7047     		bx	lr
 1307              	.L84:
 1308              		.align	2
 1309              	.L83:
 1310 0030 002C0140 		.word	1073818624
 1311              		.cfi_endproc
 1312              	.LFE136:
 1314              		.section	.text.SDIO_ClearFlag,"ax",%progbits
 1315              		.align	2
 1316              		.global	SDIO_ClearFlag
 1317              		.thumb
 1318              		.thumb_func
 1320              	SDIO_ClearFlag:
 1321              	.LFB137:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1322              		.loc 1 906 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 8
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326              		@ link register save eliminated.
 1327 0000 80B4     		push	{r7}
 1328              	.LCFI75:
 1329              		.cfi_def_cfa_offset 4
 1330              		.cfi_offset 7, -4
 1331 0002 83B0     		sub	sp, sp, #12
 1332              	.LCFI76:
 1333              		.cfi_def_cfa_offset 16
 1334 0004 00AF     		add	r7, sp, #0
 1335              	.LCFI77:
 1336              		.cfi_def_cfa_register 7
 1337 0006 7860     		str	r0, [r7, #4]
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 1338              		.loc 1 910 0
 1339 0008 034B     		ldr	r3, .L86
 1340 000a 7A68     		ldr	r2, [r7, #4]
 1341 000c 9A63     		str	r2, [r3, #56]
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1342              		.loc 1 911 0
 1343 000e 0C37     		adds	r7, r7, #12
 1344 0010 BD46     		mov	sp, r7
 1345              		@ sp needed
 1346 0012 5DF8047B 		ldr	r7, [sp], #4
 1347 0016 7047     		bx	lr
 1348              	.L87:
 1349              		.align	2
 1350              	.L86:
 1351 0018 002C0140 		.word	1073818624
 1352              		.cfi_endproc
 1353              	.LFE137:
 1355              		.section	.text.SDIO_GetITStatus,"ax",%progbits
 1356              		.align	2
 1357              		.global	SDIO_GetITStatus
 1358              		.thumb
 1359              		.thumb_func
 1361              	SDIO_GetITStatus:
 1362              	.LFB138:
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1363              		.loc 1 945 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 16
 1366              		@ frame_needed = 1, uses_anonymous_args = 0
 1367              		@ link register save eliminated.
 1368 0000 80B4     		push	{r7}
 1369              	.LCFI78:
 1370              		.cfi_def_cfa_offset 4
 1371              		.cfi_offset 7, -4
 1372 0002 85B0     		sub	sp, sp, #20
 1373              	.LCFI79:
 1374              		.cfi_def_cfa_offset 24
 1375 0004 00AF     		add	r7, sp, #0
 1376              	.LCFI80:
 1377              		.cfi_def_cfa_register 7
 1378 0006 7860     		str	r0, [r7, #4]
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 1379              		.loc 1 946 0
 1380 0008 0023     		movs	r3, #0
 1381 000a FB73     		strb	r3, [r7, #15]
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 1382              		.loc 1 950 0
 1383 000c 084B     		ldr	r3, .L92
 1384 000e 5A6B     		ldr	r2, [r3, #52]
 1385 0010 7B68     		ldr	r3, [r7, #4]
 1386 0012 1340     		ands	r3, r3, r2
 1387 0014 002B     		cmp	r3, #0
 1388 0016 02D0     		beq	.L89
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1389              		.loc 1 952 0
 1390 0018 0123     		movs	r3, #1
 1391 001a FB73     		strb	r3, [r7, #15]
 1392 001c 01E0     		b	.L90
 1393              	.L89:
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1394              		.loc 1 956 0
 1395 001e 0023     		movs	r3, #0
 1396 0020 FB73     		strb	r3, [r7, #15]
 1397              	.L90:
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1398              		.loc 1 958 0
 1399 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1400              		.loc 1 959 0
 1401 0024 1846     		mov	r0, r3
 1402 0026 1437     		adds	r7, r7, #20
 1403 0028 BD46     		mov	sp, r7
 1404              		@ sp needed
 1405 002a 5DF8047B 		ldr	r7, [sp], #4
 1406 002e 7047     		bx	lr
 1407              	.L93:
 1408              		.align	2
 1409              	.L92:
 1410 0030 002C0140 		.word	1073818624
 1411              		.cfi_endproc
 1412              	.LFE138:
 1414              		.section	.text.SDIO_ClearITPendingBit,"ax",%progbits
 1415              		.align	2
 1416              		.global	SDIO_ClearITPendingBit
 1417              		.thumb
 1418              		.thumb_func
 1420              	SDIO_ClearITPendingBit:
 1421              	.LFB139:
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1422              		.loc 1 981 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 8
 1425              		@ frame_needed = 1, uses_anonymous_args = 0
 1426              		@ link register save eliminated.
 1427 0000 80B4     		push	{r7}
 1428              	.LCFI81:
 1429              		.cfi_def_cfa_offset 4
 1430              		.cfi_offset 7, -4
 1431 0002 83B0     		sub	sp, sp, #12
 1432              	.LCFI82:
 1433              		.cfi_def_cfa_offset 16
 1434 0004 00AF     		add	r7, sp, #0
 1435              	.LCFI83:
 1436              		.cfi_def_cfa_register 7
 1437 0006 7860     		str	r0, [r7, #4]
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 1438              		.loc 1 985 0
 1439 0008 034B     		ldr	r3, .L95
 1440 000a 7A68     		ldr	r2, [r7, #4]
 1441 000c 9A63     		str	r2, [r3, #56]
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1442              		.loc 1 986 0
 1443 000e 0C37     		adds	r7, r7, #12
 1444 0010 BD46     		mov	sp, r7
 1445              		@ sp needed
 1446 0012 5DF8047B 		ldr	r7, [sp], #4
 1447 0016 7047     		bx	lr
 1448              	.L96:
 1449              		.align	2
 1450              	.L95:
 1451 0018 002C0140 		.word	1073818624
 1452              		.cfi_endproc
 1453              	.LFE139:
 1455              		.text
 1456              	.Letext0:
 1457              		.file 2 "/home/shihyu/data/STM32F4/gcc-arm-none-eabi-4_8-2013q4/arm-none-eabi/include/stdint.h"
 1458              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 1459              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
 1460              		.file 5 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_sdio.c
     /tmp/cc19uzcX.s:20     .text.SDIO_DeInit:00000000 $t
     /tmp/cc19uzcX.s:25     .text.SDIO_DeInit:00000000 SDIO_DeInit
     /tmp/cc19uzcX.s:54     .text.SDIO_Init:00000000 $t
     /tmp/cc19uzcX.s:59     .text.SDIO_Init:00000000 SDIO_Init
     /tmp/cc19uzcX.s:131    .text.SDIO_Init:00000058 $d
     /tmp/cc19uzcX.s:136    .text.SDIO_StructInit:00000000 $t
     /tmp/cc19uzcX.s:141    .text.SDIO_StructInit:00000000 SDIO_StructInit
     /tmp/cc19uzcX.s:193    .text.SDIO_ClockCmd:00000000 $t
     /tmp/cc19uzcX.s:198    .text.SDIO_ClockCmd:00000000 SDIO_ClockCmd
     /tmp/cc19uzcX.s:230    .text.SDIO_ClockCmd:0000001c $d
     /tmp/cc19uzcX.s:235    .text.SDIO_SetPowerState:00000000 $t
     /tmp/cc19uzcX.s:240    .text.SDIO_SetPowerState:00000000 SDIO_SetPowerState
     /tmp/cc19uzcX.s:271    .text.SDIO_SetPowerState:00000018 $d
     /tmp/cc19uzcX.s:276    .text.SDIO_GetPowerState:00000000 $t
     /tmp/cc19uzcX.s:281    .text.SDIO_GetPowerState:00000000 SDIO_GetPowerState
     /tmp/cc19uzcX.s:308    .text.SDIO_GetPowerState:00000018 $d
     /tmp/cc19uzcX.s:313    .text.SDIO_SendCommand:00000000 $t
     /tmp/cc19uzcX.s:318    .text.SDIO_SendCommand:00000000 SDIO_SendCommand
     /tmp/cc19uzcX.s:383    .text.SDIO_SendCommand:00000054 $d
     /tmp/cc19uzcX.s:388    .text.SDIO_CmdStructInit:00000000 $t
     /tmp/cc19uzcX.s:393    .text.SDIO_CmdStructInit:00000000 SDIO_CmdStructInit
     /tmp/cc19uzcX.s:441    .text.SDIO_GetCommandResponse:00000000 $t
     /tmp/cc19uzcX.s:446    .text.SDIO_GetCommandResponse:00000000 SDIO_GetCommandResponse
     /tmp/cc19uzcX.s:473    .text.SDIO_GetCommandResponse:00000014 $d
     /tmp/cc19uzcX.s:478    .text.SDIO_GetResponse:00000000 $t
     /tmp/cc19uzcX.s:483    .text.SDIO_GetResponse:00000000 SDIO_GetResponse
     /tmp/cc19uzcX.s:522    .text.SDIO_GetResponse:00000024 $d
     /tmp/cc19uzcX.s:527    .text.SDIO_DataConfig:00000000 $t
     /tmp/cc19uzcX.s:532    .text.SDIO_DataConfig:00000000 SDIO_DataConfig
     /tmp/cc19uzcX.s:601    .text.SDIO_DataConfig:00000058 $d
     /tmp/cc19uzcX.s:606    .text.SDIO_DataStructInit:00000000 $t
     /tmp/cc19uzcX.s:611    .text.SDIO_DataStructInit:00000000 SDIO_DataStructInit
     /tmp/cc19uzcX.s:663    .text.SDIO_GetDataCounter:00000000 $t
     /tmp/cc19uzcX.s:668    .text.SDIO_GetDataCounter:00000000 SDIO_GetDataCounter
     /tmp/cc19uzcX.s:694    .text.SDIO_GetDataCounter:00000014 $d
     /tmp/cc19uzcX.s:699    .text.SDIO_ReadData:00000000 $t
     /tmp/cc19uzcX.s:704    .text.SDIO_ReadData:00000000 SDIO_ReadData
     /tmp/cc19uzcX.s:730    .text.SDIO_ReadData:00000014 $d
     /tmp/cc19uzcX.s:735    .text.SDIO_WriteData:00000000 $t
     /tmp/cc19uzcX.s:740    .text.SDIO_WriteData:00000000 SDIO_WriteData
     /tmp/cc19uzcX.s:771    .text.SDIO_WriteData:0000001c $d
     /tmp/cc19uzcX.s:776    .text.SDIO_GetFIFOCount:00000000 $t
     /tmp/cc19uzcX.s:781    .text.SDIO_GetFIFOCount:00000000 SDIO_GetFIFOCount
     /tmp/cc19uzcX.s:807    .text.SDIO_GetFIFOCount:00000014 $d
     /tmp/cc19uzcX.s:812    .text.SDIO_StartSDIOReadWait:00000000 $t
     /tmp/cc19uzcX.s:817    .text.SDIO_StartSDIOReadWait:00000000 SDIO_StartSDIOReadWait
     /tmp/cc19uzcX.s:849    .text.SDIO_StartSDIOReadWait:0000001c $d
     /tmp/cc19uzcX.s:854    .text.SDIO_StopSDIOReadWait:00000000 $t
     /tmp/cc19uzcX.s:859    .text.SDIO_StopSDIOReadWait:00000000 SDIO_StopSDIOReadWait
     /tmp/cc19uzcX.s:891    .text.SDIO_StopSDIOReadWait:0000001c $d
     /tmp/cc19uzcX.s:896    .text.SDIO_SetSDIOReadWaitMode:00000000 $t
     /tmp/cc19uzcX.s:901    .text.SDIO_SetSDIOReadWaitMode:00000000 SDIO_SetSDIOReadWaitMode
     /tmp/cc19uzcX.s:932    .text.SDIO_SetSDIOReadWaitMode:00000018 $d
     /tmp/cc19uzcX.s:937    .text.SDIO_SetSDIOOperation:00000000 $t
     /tmp/cc19uzcX.s:942    .text.SDIO_SetSDIOOperation:00000000 SDIO_SetSDIOOperation
     /tmp/cc19uzcX.s:974    .text.SDIO_SetSDIOOperation:0000001c $d
     /tmp/cc19uzcX.s:979    .text.SDIO_SendSDIOSuspendCmd:00000000 $t
     /tmp/cc19uzcX.s:984    .text.SDIO_SendSDIOSuspendCmd:00000000 SDIO_SendSDIOSuspendCmd
     /tmp/cc19uzcX.s:1016   .text.SDIO_SendSDIOSuspendCmd:0000001c $d
     /tmp/cc19uzcX.s:1021   .text.SDIO_CommandCompletionCmd:00000000 $t
     /tmp/cc19uzcX.s:1026   .text.SDIO_CommandCompletionCmd:00000000 SDIO_CommandCompletionCmd
     /tmp/cc19uzcX.s:1058   .text.SDIO_CommandCompletionCmd:0000001c $d
     /tmp/cc19uzcX.s:1063   .text.SDIO_CEATAITCmd:00000000 $t
     /tmp/cc19uzcX.s:1068   .text.SDIO_CEATAITCmd:00000000 SDIO_CEATAITCmd
     /tmp/cc19uzcX.s:1106   .text.SDIO_CEATAITCmd:00000028 $d
     /tmp/cc19uzcX.s:1111   .text.SDIO_SendCEATACmd:00000000 $t
     /tmp/cc19uzcX.s:1116   .text.SDIO_SendCEATACmd:00000000 SDIO_SendCEATACmd
     /tmp/cc19uzcX.s:1148   .text.SDIO_SendCEATACmd:0000001c $d
     /tmp/cc19uzcX.s:1153   .text.SDIO_DMACmd:00000000 $t
     /tmp/cc19uzcX.s:1158   .text.SDIO_DMACmd:00000000 SDIO_DMACmd
     /tmp/cc19uzcX.s:1190   .text.SDIO_DMACmd:0000001c $d
     /tmp/cc19uzcX.s:1195   .text.SDIO_ITConfig:00000000 $t
     /tmp/cc19uzcX.s:1200   .text.SDIO_ITConfig:00000000 SDIO_ITConfig
     /tmp/cc19uzcX.s:1251   .text.SDIO_ITConfig:00000038 $d
     /tmp/cc19uzcX.s:1256   .text.SDIO_GetFlagStatus:00000000 $t
     /tmp/cc19uzcX.s:1261   .text.SDIO_GetFlagStatus:00000000 SDIO_GetFlagStatus
     /tmp/cc19uzcX.s:1310   .text.SDIO_GetFlagStatus:00000030 $d
     /tmp/cc19uzcX.s:1315   .text.SDIO_ClearFlag:00000000 $t
     /tmp/cc19uzcX.s:1320   .text.SDIO_ClearFlag:00000000 SDIO_ClearFlag
     /tmp/cc19uzcX.s:1351   .text.SDIO_ClearFlag:00000018 $d
     /tmp/cc19uzcX.s:1356   .text.SDIO_GetITStatus:00000000 $t
     /tmp/cc19uzcX.s:1361   .text.SDIO_GetITStatus:00000000 SDIO_GetITStatus
     /tmp/cc19uzcX.s:1410   .text.SDIO_GetITStatus:00000030 $d
     /tmp/cc19uzcX.s:1415   .text.SDIO_ClearITPendingBit:00000000 $t
     /tmp/cc19uzcX.s:1420   .text.SDIO_ClearITPendingBit:00000000 SDIO_ClearITPendingBit
     /tmp/cc19uzcX.s:1451   .text.SDIO_ClearITPendingBit:00000018 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
