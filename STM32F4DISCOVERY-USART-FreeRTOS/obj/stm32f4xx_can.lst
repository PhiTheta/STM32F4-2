   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	CAN_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  28              		.loc 1 163 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
  44              		.loc 1 167 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 0D4B     		ldr	r3, .L4
  47 000c 9A42     		cmp	r2, r3
  48 000e 0AD1     		bne	.L2
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
  49              		.loc 1 170 0
  50 0010 4FF00070 		mov	r0, #33554432
  51 0014 0121     		movs	r1, #1
  52 0016 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  53              		.loc 1 172 0
  54 001a 4FF00070 		mov	r0, #33554432
  55 001e 0021     		movs	r1, #0
  56 0020 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  57 0024 09E0     		b	.L1
  58              	.L2:
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
  59              		.loc 1 177 0
  60 0026 4FF08060 		mov	r0, #67108864
  61 002a 0121     		movs	r1, #1
  62 002c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  63              		.loc 1 179 0
  64 0030 4FF08060 		mov	r0, #67108864
  65 0034 0021     		movs	r1, #0
  66 0036 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  67              	.L1:
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  68              		.loc 1 181 0
  69 003a 0837     		adds	r7, r7, #8
  70 003c BD46     		mov	sp, r7
  71              		@ sp needed
  72 003e 80BD     		pop	{r7, pc}
  73              	.L5:
  74              		.align	2
  75              	.L4:
  76 0040 00640040 		.word	1073767424
  77              		.cfi_endproc
  78              	.LFE110:
  80              		.section	.text.CAN_Init,"ax",%progbits
  81              		.align	2
  82              		.global	CAN_Init
  83              		.thumb
  84              		.thumb_func
  86              	CAN_Init:
  87              	.LFB111:
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  88              		.loc 1 193 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 16
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93 0000 80B4     		push	{r7}
  94              	.LCFI3:
  95              		.cfi_def_cfa_offset 4
  96              		.cfi_offset 7, -4
  97 0002 85B0     		sub	sp, sp, #20
  98              	.LCFI4:
  99              		.cfi_def_cfa_offset 24
 100 0004 00AF     		add	r7, sp, #0
 101              	.LCFI5:
 102              		.cfi_def_cfa_register 7
 103 0006 7860     		str	r0, [r7, #4]
 104 0008 3960     		str	r1, [r7]
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 105              		.loc 1 194 0
 106 000a 0023     		movs	r3, #0
 107 000c FB73     		strb	r3, [r7, #15]
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 108              		.loc 1 195 0
 109 000e 0023     		movs	r3, #0
 110 0010 BB60     		str	r3, [r7, #8]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 111              		.loc 1 211 0
 112 0012 7B68     		ldr	r3, [r7, #4]
 113 0014 1B68     		ldr	r3, [r3]
 114 0016 23F00202 		bic	r2, r3, #2
 115 001a 7B68     		ldr	r3, [r7, #4]
 116 001c 1A60     		str	r2, [r3]
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 117              		.loc 1 214 0
 118 001e 7B68     		ldr	r3, [r7, #4]
 119 0020 1B68     		ldr	r3, [r3]
 120 0022 43F00102 		orr	r2, r3, #1
 121 0026 7B68     		ldr	r3, [r7, #4]
 122 0028 1A60     		str	r2, [r3]
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 123              		.loc 1 217 0
 124 002a 02E0     		b	.L7
 125              	.L9:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 126              		.loc 1 219 0
 127 002c BB68     		ldr	r3, [r7, #8]
 128 002e 0133     		adds	r3, r3, #1
 129 0030 BB60     		str	r3, [r7, #8]
 130              	.L7:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 131              		.loc 1 217 0 discriminator 1
 132 0032 7B68     		ldr	r3, [r7, #4]
 133 0034 5B68     		ldr	r3, [r3, #4]
 134 0036 03F00103 		and	r3, r3, #1
 135 003a 002B     		cmp	r3, #0
 136 003c 04D1     		bne	.L8
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 137              		.loc 1 217 0 is_stmt 0 discriminator 2
 138 003e BA68     		ldr	r2, [r7, #8]
 139 0040 4FF6FF73 		movw	r3, #65535
 140 0044 9A42     		cmp	r2, r3
 141 0046 F1D1     		bne	.L9
 142              	.L8:
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 143              		.loc 1 223 0 is_stmt 1
 144 0048 7B68     		ldr	r3, [r7, #4]
 145 004a 5B68     		ldr	r3, [r3, #4]
 146 004c 03F00103 		and	r3, r3, #1
 147 0050 002B     		cmp	r3, #0
 148 0052 02D1     		bne	.L10
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 149              		.loc 1 225 0
 150 0054 0023     		movs	r3, #0
 151 0056 FB73     		strb	r3, [r7, #15]
 152 0058 9CE0     		b	.L11
 153              	.L10:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 154              		.loc 1 230 0
 155 005a 3B68     		ldr	r3, [r7]
 156 005c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 157 005e 012B     		cmp	r3, #1
 158 0060 06D1     		bne	.L12
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 159              		.loc 1 232 0
 160 0062 7B68     		ldr	r3, [r7, #4]
 161 0064 1B68     		ldr	r3, [r3]
 162 0066 43F08002 		orr	r2, r3, #128
 163 006a 7B68     		ldr	r3, [r7, #4]
 164 006c 1A60     		str	r2, [r3]
 165 006e 05E0     		b	.L13
 166              	.L12:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 167              		.loc 1 236 0
 168 0070 7B68     		ldr	r3, [r7, #4]
 169 0072 1B68     		ldr	r3, [r3]
 170 0074 23F08002 		bic	r2, r3, #128
 171 0078 7B68     		ldr	r3, [r7, #4]
 172 007a 1A60     		str	r2, [r3]
 173              	.L13:
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 174              		.loc 1 240 0
 175 007c 3B68     		ldr	r3, [r7]
 176 007e DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 177 0080 012B     		cmp	r3, #1
 178 0082 06D1     		bne	.L14
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 179              		.loc 1 242 0
 180 0084 7B68     		ldr	r3, [r7, #4]
 181 0086 1B68     		ldr	r3, [r3]
 182 0088 43F04002 		orr	r2, r3, #64
 183 008c 7B68     		ldr	r3, [r7, #4]
 184 008e 1A60     		str	r2, [r3]
 185 0090 05E0     		b	.L15
 186              	.L14:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 187              		.loc 1 246 0
 188 0092 7B68     		ldr	r3, [r7, #4]
 189 0094 1B68     		ldr	r3, [r3]
 190 0096 23F04002 		bic	r2, r3, #64
 191 009a 7B68     		ldr	r3, [r7, #4]
 192 009c 1A60     		str	r2, [r3]
 193              	.L15:
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 194              		.loc 1 250 0
 195 009e 3B68     		ldr	r3, [r7]
 196 00a0 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 197 00a2 012B     		cmp	r3, #1
 198 00a4 06D1     		bne	.L16
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 199              		.loc 1 252 0
 200 00a6 7B68     		ldr	r3, [r7, #4]
 201 00a8 1B68     		ldr	r3, [r3]
 202 00aa 43F02002 		orr	r2, r3, #32
 203 00ae 7B68     		ldr	r3, [r7, #4]
 204 00b0 1A60     		str	r2, [r3]
 205 00b2 05E0     		b	.L17
 206              	.L16:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 207              		.loc 1 256 0
 208 00b4 7B68     		ldr	r3, [r7, #4]
 209 00b6 1B68     		ldr	r3, [r3]
 210 00b8 23F02002 		bic	r2, r3, #32
 211 00bc 7B68     		ldr	r3, [r7, #4]
 212 00be 1A60     		str	r2, [r3]
 213              	.L17:
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 214              		.loc 1 260 0
 215 00c0 3B68     		ldr	r3, [r7]
 216 00c2 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 217 00c4 012B     		cmp	r3, #1
 218 00c6 06D1     		bne	.L18
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 219              		.loc 1 262 0
 220 00c8 7B68     		ldr	r3, [r7, #4]
 221 00ca 1B68     		ldr	r3, [r3]
 222 00cc 43F01002 		orr	r2, r3, #16
 223 00d0 7B68     		ldr	r3, [r7, #4]
 224 00d2 1A60     		str	r2, [r3]
 225 00d4 05E0     		b	.L19
 226              	.L18:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 227              		.loc 1 266 0
 228 00d6 7B68     		ldr	r3, [r7, #4]
 229 00d8 1B68     		ldr	r3, [r3]
 230 00da 23F01002 		bic	r2, r3, #16
 231 00de 7B68     		ldr	r3, [r7, #4]
 232 00e0 1A60     		str	r2, [r3]
 233              	.L19:
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 234              		.loc 1 270 0
 235 00e2 3B68     		ldr	r3, [r7]
 236 00e4 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 237 00e6 012B     		cmp	r3, #1
 238 00e8 06D1     		bne	.L20
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 239              		.loc 1 272 0
 240 00ea 7B68     		ldr	r3, [r7, #4]
 241 00ec 1B68     		ldr	r3, [r3]
 242 00ee 43F00802 		orr	r2, r3, #8
 243 00f2 7B68     		ldr	r3, [r7, #4]
 244 00f4 1A60     		str	r2, [r3]
 245 00f6 05E0     		b	.L21
 246              	.L20:
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 247              		.loc 1 276 0
 248 00f8 7B68     		ldr	r3, [r7, #4]
 249 00fa 1B68     		ldr	r3, [r3]
 250 00fc 23F00802 		bic	r2, r3, #8
 251 0100 7B68     		ldr	r3, [r7, #4]
 252 0102 1A60     		str	r2, [r3]
 253              	.L21:
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 254              		.loc 1 280 0
 255 0104 3B68     		ldr	r3, [r7]
 256 0106 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 257 0108 012B     		cmp	r3, #1
 258 010a 06D1     		bne	.L22
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 259              		.loc 1 282 0
 260 010c 7B68     		ldr	r3, [r7, #4]
 261 010e 1B68     		ldr	r3, [r3]
 262 0110 43F00402 		orr	r2, r3, #4
 263 0114 7B68     		ldr	r3, [r7, #4]
 264 0116 1A60     		str	r2, [r3]
 265 0118 05E0     		b	.L23
 266              	.L22:
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 267              		.loc 1 286 0
 268 011a 7B68     		ldr	r3, [r7, #4]
 269 011c 1B68     		ldr	r3, [r3]
 270 011e 23F00402 		bic	r2, r3, #4
 271 0122 7B68     		ldr	r3, [r7, #4]
 272 0124 1A60     		str	r2, [r3]
 273              	.L23:
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 274              		.loc 1 290 0
 275 0126 3B68     		ldr	r3, [r7]
 276 0128 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 277 012a 9A07     		lsls	r2, r3, #30
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 278              		.loc 1 291 0
 279 012c 3B68     		ldr	r3, [r7]
 280 012e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 281 0130 1B06     		lsls	r3, r3, #24
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 282              		.loc 1 290 0
 283 0132 1A43     		orrs	r2, r2, r3
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 284              		.loc 1 292 0
 285 0134 3B68     		ldr	r3, [r7]
 286 0136 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 287 0138 1B04     		lsls	r3, r3, #16
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 288              		.loc 1 291 0
 289 013a 1A43     		orrs	r2, r2, r3
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 290              		.loc 1 293 0
 291 013c 3B68     		ldr	r3, [r7]
 292 013e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 293 0140 1B05     		lsls	r3, r3, #20
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 294              		.loc 1 292 0
 295 0142 1A43     		orrs	r2, r2, r3
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 296              		.loc 1 294 0
 297 0144 3B68     		ldr	r3, [r7]
 298 0146 1B88     		ldrh	r3, [r3]
 299 0148 013B     		subs	r3, r3, #1
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 300              		.loc 1 293 0
 301 014a 1A43     		orrs	r2, r2, r3
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 302              		.loc 1 290 0
 303 014c 7B68     		ldr	r3, [r7, #4]
 304 014e DA61     		str	r2, [r3, #28]
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 305              		.loc 1 297 0
 306 0150 7B68     		ldr	r3, [r7, #4]
 307 0152 1B68     		ldr	r3, [r3]
 308 0154 23F00102 		bic	r2, r3, #1
 309 0158 7B68     		ldr	r3, [r7, #4]
 310 015a 1A60     		str	r2, [r3]
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 311              		.loc 1 300 0
 312 015c 0023     		movs	r3, #0
 313 015e BB60     		str	r3, [r7, #8]
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 314              		.loc 1 302 0
 315 0160 02E0     		b	.L24
 316              	.L26:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 317              		.loc 1 304 0
 318 0162 BB68     		ldr	r3, [r7, #8]
 319 0164 0133     		adds	r3, r3, #1
 320 0166 BB60     		str	r3, [r7, #8]
 321              	.L24:
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 322              		.loc 1 302 0 discriminator 1
 323 0168 7B68     		ldr	r3, [r7, #4]
 324 016a 5B68     		ldr	r3, [r3, #4]
 325 016c 03F00103 		and	r3, r3, #1
 326 0170 002B     		cmp	r3, #0
 327 0172 04D0     		beq	.L25
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 328              		.loc 1 302 0 is_stmt 0 discriminator 2
 329 0174 BA68     		ldr	r2, [r7, #8]
 330 0176 4FF6FF73 		movw	r3, #65535
 331 017a 9A42     		cmp	r2, r3
 332 017c F1D1     		bne	.L26
 333              	.L25:
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 334              		.loc 1 308 0 is_stmt 1
 335 017e 7B68     		ldr	r3, [r7, #4]
 336 0180 5B68     		ldr	r3, [r3, #4]
 337 0182 03F00103 		and	r3, r3, #1
 338 0186 002B     		cmp	r3, #0
 339 0188 02D0     		beq	.L27
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 340              		.loc 1 310 0
 341 018a 0023     		movs	r3, #0
 342 018c FB73     		strb	r3, [r7, #15]
 343 018e 01E0     		b	.L11
 344              	.L27:
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 345              		.loc 1 314 0
 346 0190 0123     		movs	r3, #1
 347 0192 FB73     		strb	r3, [r7, #15]
 348              	.L11:
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 349              		.loc 1 319 0
 350 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 351              		.loc 1 320 0
 352 0196 1846     		mov	r0, r3
 353 0198 1437     		adds	r7, r7, #20
 354 019a BD46     		mov	sp, r7
 355              		@ sp needed
 356 019c 5DF8047B 		ldr	r7, [sp], #4
 357 01a0 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE111:
 361 01a2 00BF     		.section	.text.CAN_FilterInit,"ax",%progbits
 362              		.align	2
 363              		.global	CAN_FilterInit
 364              		.thumb
 365              		.thumb_func
 367              	CAN_FilterInit:
 368              	.LFB112:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 369              		.loc 1 330 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 16
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 0000 80B4     		push	{r7}
 375              	.LCFI6:
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0002 85B0     		sub	sp, sp, #20
 379              	.LCFI7:
 380              		.cfi_def_cfa_offset 24
 381 0004 00AF     		add	r7, sp, #0
 382              	.LCFI8:
 383              		.cfi_def_cfa_register 7
 384 0006 7860     		str	r0, [r7, #4]
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 385              		.loc 1 331 0
 386 0008 0023     		movs	r3, #0
 387 000a FB60     		str	r3, [r7, #12]
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 388              		.loc 1 339 0
 389 000c 7B68     		ldr	r3, [r7, #4]
 390 000e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 391 0010 0122     		movs	r2, #1
 392 0012 02FA03F3 		lsl	r3, r2, r3
 393 0016 FB60     		str	r3, [r7, #12]
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 394              		.loc 1 342 0
 395 0018 514B     		ldr	r3, .L37
 396 001a 514A     		ldr	r2, .L37
 397 001c D2F80022 		ldr	r2, [r2, #512]
 398 0020 42F00102 		orr	r2, r2, #1
 399 0024 C3F80022 		str	r2, [r3, #512]
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 400              		.loc 1 345 0
 401 0028 4D4B     		ldr	r3, .L37
 402 002a 4D4A     		ldr	r2, .L37
 403 002c D2F81C12 		ldr	r1, [r2, #540]
 404 0030 FA68     		ldr	r2, [r7, #12]
 405 0032 D243     		mvns	r2, r2
 406 0034 0A40     		ands	r2, r2, r1
 407 0036 C3F81C22 		str	r2, [r3, #540]
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 408              		.loc 1 348 0
 409 003a 7B68     		ldr	r3, [r7, #4]
 410 003c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 411 003e 002B     		cmp	r3, #0
 412 0040 21D1     		bne	.L30
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 413              		.loc 1 351 0
 414 0042 474B     		ldr	r3, .L37
 415 0044 464A     		ldr	r2, .L37
 416 0046 D2F80C12 		ldr	r1, [r2, #524]
 417 004a FA68     		ldr	r2, [r7, #12]
 418 004c D243     		mvns	r2, r2
 419 004e 0A40     		ands	r2, r2, r1
 420 0050 C3F80C22 		str	r2, [r3, #524]
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 421              		.loc 1 355 0
 422 0054 424B     		ldr	r3, .L37
 423 0056 7A68     		ldr	r2, [r7, #4]
 424 0058 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 425              		.loc 1 356 0
 426 005a 7968     		ldr	r1, [r7, #4]
 427 005c C988     		ldrh	r1, [r1, #6]
 428 005e 0804     		lsls	r0, r1, #16
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 429              		.loc 1 357 0
 430 0060 7968     		ldr	r1, [r7, #4]
 431 0062 4988     		ldrh	r1, [r1, #2]
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 432              		.loc 1 356 0
 433 0064 0143     		orrs	r1, r1, r0
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 434              		.loc 1 355 0
 435 0066 4832     		adds	r2, r2, #72
 436 0068 43F83210 		str	r1, [r3, r2, lsl #3]
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 437              		.loc 1 361 0
 438 006c 3C49     		ldr	r1, .L37
 439 006e 7B68     		ldr	r3, [r7, #4]
 440 0070 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 441              		.loc 1 362 0
 442 0072 7A68     		ldr	r2, [r7, #4]
 443 0074 9288     		ldrh	r2, [r2, #4]
 444 0076 1004     		lsls	r0, r2, #16
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 445              		.loc 1 363 0
 446 0078 7A68     		ldr	r2, [r7, #4]
 447 007a 1288     		ldrh	r2, [r2]
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 448              		.loc 1 362 0
 449 007c 0243     		orrs	r2, r2, r0
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 450              		.loc 1 361 0
 451 007e 4833     		adds	r3, r3, #72
 452 0080 DB00     		lsls	r3, r3, #3
 453 0082 0B44     		add	r3, r3, r1
 454 0084 5A60     		str	r2, [r3, #4]
 455              	.L30:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 456              		.loc 1 366 0
 457 0086 7B68     		ldr	r3, [r7, #4]
 458 0088 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 459 008a 012B     		cmp	r3, #1
 460 008c 20D1     		bne	.L31
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 461              		.loc 1 369 0
 462 008e 344B     		ldr	r3, .L37
 463 0090 334A     		ldr	r2, .L37
 464 0092 D2F80C12 		ldr	r1, [r2, #524]
 465 0096 FA68     		ldr	r2, [r7, #12]
 466 0098 0A43     		orrs	r2, r2, r1
 467 009a C3F80C22 		str	r2, [r3, #524]
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 468              		.loc 1 371 0
 469 009e 304B     		ldr	r3, .L37
 470 00a0 7A68     		ldr	r2, [r7, #4]
 471 00a2 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 472              		.loc 1 372 0
 473 00a4 7968     		ldr	r1, [r7, #4]
 474 00a6 0988     		ldrh	r1, [r1]
 475 00a8 0804     		lsls	r0, r1, #16
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 476              		.loc 1 373 0
 477 00aa 7968     		ldr	r1, [r7, #4]
 478 00ac 4988     		ldrh	r1, [r1, #2]
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 479              		.loc 1 372 0
 480 00ae 0143     		orrs	r1, r1, r0
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 481              		.loc 1 371 0
 482 00b0 4832     		adds	r2, r2, #72
 483 00b2 43F83210 		str	r1, [r3, r2, lsl #3]
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 484              		.loc 1 375 0
 485 00b6 2A49     		ldr	r1, .L37
 486 00b8 7B68     		ldr	r3, [r7, #4]
 487 00ba 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 488              		.loc 1 376 0
 489 00bc 7A68     		ldr	r2, [r7, #4]
 490 00be 9288     		ldrh	r2, [r2, #4]
 491 00c0 1004     		lsls	r0, r2, #16
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 492              		.loc 1 377 0
 493 00c2 7A68     		ldr	r2, [r7, #4]
 494 00c4 D288     		ldrh	r2, [r2, #6]
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 495              		.loc 1 376 0
 496 00c6 0243     		orrs	r2, r2, r0
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 497              		.loc 1 375 0
 498 00c8 4833     		adds	r3, r3, #72
 499 00ca DB00     		lsls	r3, r3, #3
 500 00cc 0B44     		add	r3, r3, r1
 501 00ce 5A60     		str	r2, [r3, #4]
 502              	.L31:
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 503              		.loc 1 381 0
 504 00d0 7B68     		ldr	r3, [r7, #4]
 505 00d2 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 506 00d4 002B     		cmp	r3, #0
 507 00d6 09D1     		bne	.L32
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 508              		.loc 1 384 0
 509 00d8 214B     		ldr	r3, .L37
 510 00da 214A     		ldr	r2, .L37
 511 00dc D2F80412 		ldr	r1, [r2, #516]
 512 00e0 FA68     		ldr	r2, [r7, #12]
 513 00e2 D243     		mvns	r2, r2
 514 00e4 0A40     		ands	r2, r2, r1
 515 00e6 C3F80422 		str	r2, [r3, #516]
 516 00ea 07E0     		b	.L33
 517              	.L32:
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 518              		.loc 1 389 0
 519 00ec 1C4B     		ldr	r3, .L37
 520 00ee 1C4A     		ldr	r2, .L37
 521 00f0 D2F80412 		ldr	r1, [r2, #516]
 522 00f4 FA68     		ldr	r2, [r7, #12]
 523 00f6 0A43     		orrs	r2, r2, r1
 524 00f8 C3F80422 		str	r2, [r3, #516]
 525              	.L33:
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 526              		.loc 1 393 0
 527 00fc 7B68     		ldr	r3, [r7, #4]
 528 00fe 1B89     		ldrh	r3, [r3, #8]
 529 0100 002B     		cmp	r3, #0
 530 0102 08D1     		bne	.L34
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 531              		.loc 1 396 0
 532 0104 164B     		ldr	r3, .L37
 533 0106 164A     		ldr	r2, .L37
 534 0108 D2F81412 		ldr	r1, [r2, #532]
 535 010c FA68     		ldr	r2, [r7, #12]
 536 010e D243     		mvns	r2, r2
 537 0110 0A40     		ands	r2, r2, r1
 538 0112 C3F81422 		str	r2, [r3, #532]
 539              	.L34:
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 540              		.loc 1 399 0
 541 0116 7B68     		ldr	r3, [r7, #4]
 542 0118 1B89     		ldrh	r3, [r3, #8]
 543 011a 012B     		cmp	r3, #1
 544 011c 07D1     		bne	.L35
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 545              		.loc 1 402 0
 546 011e 104B     		ldr	r3, .L37
 547 0120 0F4A     		ldr	r2, .L37
 548 0122 D2F81412 		ldr	r1, [r2, #532]
 549 0126 FA68     		ldr	r2, [r7, #12]
 550 0128 0A43     		orrs	r2, r2, r1
 551 012a C3F81422 		str	r2, [r3, #532]
 552              	.L35:
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 553              		.loc 1 406 0
 554 012e 7B68     		ldr	r3, [r7, #4]
 555 0130 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 556 0132 012B     		cmp	r3, #1
 557 0134 07D1     		bne	.L36
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 558              		.loc 1 408 0
 559 0136 0A4B     		ldr	r3, .L37
 560 0138 094A     		ldr	r2, .L37
 561 013a D2F81C12 		ldr	r1, [r2, #540]
 562 013e FA68     		ldr	r2, [r7, #12]
 563 0140 0A43     		orrs	r2, r2, r1
 564 0142 C3F81C22 		str	r2, [r3, #540]
 565              	.L36:
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 566              		.loc 1 412 0
 567 0146 064B     		ldr	r3, .L37
 568 0148 054A     		ldr	r2, .L37
 569 014a D2F80022 		ldr	r2, [r2, #512]
 570 014e 22F00102 		bic	r2, r2, #1
 571 0152 C3F80022 		str	r2, [r3, #512]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 572              		.loc 1 413 0
 573 0156 1437     		adds	r7, r7, #20
 574 0158 BD46     		mov	sp, r7
 575              		@ sp needed
 576 015a 5DF8047B 		ldr	r7, [sp], #4
 577 015e 7047     		bx	lr
 578              	.L38:
 579              		.align	2
 580              	.L37:
 581 0160 00640040 		.word	1073767424
 582              		.cfi_endproc
 583              	.LFE112:
 585              		.section	.text.CAN_StructInit,"ax",%progbits
 586              		.align	2
 587              		.global	CAN_StructInit
 588              		.thumb
 589              		.thumb_func
 591              	CAN_StructInit:
 592              	.LFB113:
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 593              		.loc 1 421 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 8
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 598 0000 80B4     		push	{r7}
 599              	.LCFI9:
 600              		.cfi_def_cfa_offset 4
 601              		.cfi_offset 7, -4
 602 0002 83B0     		sub	sp, sp, #12
 603              	.LCFI10:
 604              		.cfi_def_cfa_offset 16
 605 0004 00AF     		add	r7, sp, #0
 606              	.LCFI11:
 607              		.cfi_def_cfa_register 7
 608 0006 7860     		str	r0, [r7, #4]
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 609              		.loc 1 425 0
 610 0008 7B68     		ldr	r3, [r7, #4]
 611 000a 0022     		movs	r2, #0
 612 000c 9A71     		strb	r2, [r3, #6]
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 613              		.loc 1 428 0
 614 000e 7B68     		ldr	r3, [r7, #4]
 615 0010 0022     		movs	r2, #0
 616 0012 DA71     		strb	r2, [r3, #7]
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 617              		.loc 1 431 0
 618 0014 7B68     		ldr	r3, [r7, #4]
 619 0016 0022     		movs	r2, #0
 620 0018 1A72     		strb	r2, [r3, #8]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 621              		.loc 1 434 0
 622 001a 7B68     		ldr	r3, [r7, #4]
 623 001c 0022     		movs	r2, #0
 624 001e 5A72     		strb	r2, [r3, #9]
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 625              		.loc 1 437 0
 626 0020 7B68     		ldr	r3, [r7, #4]
 627 0022 0022     		movs	r2, #0
 628 0024 9A72     		strb	r2, [r3, #10]
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 629              		.loc 1 440 0
 630 0026 7B68     		ldr	r3, [r7, #4]
 631 0028 0022     		movs	r2, #0
 632 002a DA72     		strb	r2, [r3, #11]
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 633              		.loc 1 443 0
 634 002c 7B68     		ldr	r3, [r7, #4]
 635 002e 0022     		movs	r2, #0
 636 0030 9A70     		strb	r2, [r3, #2]
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 637              		.loc 1 446 0
 638 0032 7B68     		ldr	r3, [r7, #4]
 639 0034 0022     		movs	r2, #0
 640 0036 DA70     		strb	r2, [r3, #3]
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 641              		.loc 1 449 0
 642 0038 7B68     		ldr	r3, [r7, #4]
 643 003a 0322     		movs	r2, #3
 644 003c 1A71     		strb	r2, [r3, #4]
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 645              		.loc 1 452 0
 646 003e 7B68     		ldr	r3, [r7, #4]
 647 0040 0222     		movs	r2, #2
 648 0042 5A71     		strb	r2, [r3, #5]
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 649              		.loc 1 455 0
 650 0044 7B68     		ldr	r3, [r7, #4]
 651 0046 0122     		movs	r2, #1
 652 0048 1A80     		strh	r2, [r3]	@ movhi
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 653              		.loc 1 456 0
 654 004a 0C37     		adds	r7, r7, #12
 655 004c BD46     		mov	sp, r7
 656              		@ sp needed
 657 004e 5DF8047B 		ldr	r7, [sp], #4
 658 0052 7047     		bx	lr
 659              		.cfi_endproc
 660              	.LFE113:
 662              		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 663              		.align	2
 664              		.global	CAN_SlaveStartBank
 665              		.thumb
 666              		.thumb_func
 668              	CAN_SlaveStartBank:
 669              	.LFB114:
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 670              		.loc 1 464 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 8
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 675 0000 80B4     		push	{r7}
 676              	.LCFI12:
 677              		.cfi_def_cfa_offset 4
 678              		.cfi_offset 7, -4
 679 0002 83B0     		sub	sp, sp, #12
 680              	.LCFI13:
 681              		.cfi_def_cfa_offset 16
 682 0004 00AF     		add	r7, sp, #0
 683              	.LCFI14:
 684              		.cfi_def_cfa_register 7
 685 0006 0346     		mov	r3, r0
 686 0008 FB71     		strb	r3, [r7, #7]
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 687              		.loc 1 469 0
 688 000a 144B     		ldr	r3, .L41
 689 000c 134A     		ldr	r2, .L41
 690 000e D2F80022 		ldr	r2, [r2, #512]
 691 0012 42F00102 		orr	r2, r2, #1
 692 0016 C3F80022 		str	r2, [r3, #512]
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 693              		.loc 1 472 0
 694 001a 104A     		ldr	r2, .L41
 695 001c 0F4B     		ldr	r3, .L41
 696 001e D3F80032 		ldr	r3, [r3, #512]
 697 0022 23F47C53 		bic	r3, r3, #16128
 698 0026 23F00E03 		bic	r3, r3, #14
 699 002a C2F80032 		str	r3, [r2, #512]
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 700              		.loc 1 473 0
 701 002e 0B4B     		ldr	r3, .L41
 702 0030 0A4A     		ldr	r2, .L41
 703 0032 D2F80012 		ldr	r1, [r2, #512]
 704 0036 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 705 0038 1202     		lsls	r2, r2, #8
 706 003a 0A43     		orrs	r2, r2, r1
 707 003c C3F80022 		str	r2, [r3, #512]
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 708              		.loc 1 476 0
 709 0040 064B     		ldr	r3, .L41
 710 0042 064A     		ldr	r2, .L41
 711 0044 D2F80022 		ldr	r2, [r2, #512]
 712 0048 22F00102 		bic	r2, r2, #1
 713 004c C3F80022 		str	r2, [r3, #512]
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 714              		.loc 1 477 0
 715 0050 0C37     		adds	r7, r7, #12
 716 0052 BD46     		mov	sp, r7
 717              		@ sp needed
 718 0054 5DF8047B 		ldr	r7, [sp], #4
 719 0058 7047     		bx	lr
 720              	.L42:
 721 005a 00BF     		.align	2
 722              	.L41:
 723 005c 00640040 		.word	1073767424
 724              		.cfi_endproc
 725              	.LFE114:
 727              		.section	.text.CAN_DBGFreeze,"ax",%progbits
 728              		.align	2
 729              		.global	CAN_DBGFreeze
 730              		.thumb
 731              		.thumb_func
 733              	CAN_DBGFreeze:
 734              	.LFB115:
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 735              		.loc 1 489 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 8
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739              		@ link register save eliminated.
 740 0000 80B4     		push	{r7}
 741              	.LCFI15:
 742              		.cfi_def_cfa_offset 4
 743              		.cfi_offset 7, -4
 744 0002 83B0     		sub	sp, sp, #12
 745              	.LCFI16:
 746              		.cfi_def_cfa_offset 16
 747 0004 00AF     		add	r7, sp, #0
 748              	.LCFI17:
 749              		.cfi_def_cfa_register 7
 750 0006 7860     		str	r0, [r7, #4]
 751 0008 0B46     		mov	r3, r1
 752 000a FB70     		strb	r3, [r7, #3]
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 753              		.loc 1 494 0
 754 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 755 000e 002B     		cmp	r3, #0
 756 0010 06D0     		beq	.L44
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 757              		.loc 1 497 0
 758 0012 7B68     		ldr	r3, [r7, #4]
 759 0014 1B68     		ldr	r3, [r3]
 760 0016 43F48032 		orr	r2, r3, #65536
 761 001a 7B68     		ldr	r3, [r7, #4]
 762 001c 1A60     		str	r2, [r3]
 763 001e 05E0     		b	.L43
 764              	.L44:
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 765              		.loc 1 502 0
 766 0020 7B68     		ldr	r3, [r7, #4]
 767 0022 1B68     		ldr	r3, [r3]
 768 0024 23F48032 		bic	r2, r3, #65536
 769 0028 7B68     		ldr	r3, [r7, #4]
 770 002a 1A60     		str	r2, [r3]
 771              	.L43:
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 772              		.loc 1 504 0
 773 002c 0C37     		adds	r7, r7, #12
 774 002e BD46     		mov	sp, r7
 775              		@ sp needed
 776 0030 5DF8047B 		ldr	r7, [sp], #4
 777 0034 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE115:
 781 0036 00BF     		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 782              		.align	2
 783              		.global	CAN_TTComModeCmd
 784              		.thumb
 785              		.thumb_func
 787              	CAN_TTComModeCmd:
 788              	.LFB116:
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 789              		.loc 1 519 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 8
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794 0000 80B4     		push	{r7}
 795              	.LCFI18:
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 7, -4
 798 0002 83B0     		sub	sp, sp, #12
 799              	.LCFI19:
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              	.LCFI20:
 803              		.cfi_def_cfa_register 7
 804 0006 7860     		str	r0, [r7, #4]
 805 0008 0B46     		mov	r3, r1
 806 000a FB70     		strb	r3, [r7, #3]
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 807              		.loc 1 523 0
 808 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 809 000e 002B     		cmp	r3, #0
 810 0010 1ED0     		beq	.L47
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 811              		.loc 1 526 0
 812 0012 7B68     		ldr	r3, [r7, #4]
 813 0014 1B68     		ldr	r3, [r3]
 814 0016 43F08002 		orr	r2, r3, #128
 815 001a 7B68     		ldr	r3, [r7, #4]
 816 001c 1A60     		str	r2, [r3]
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 817              		.loc 1 529 0
 818 001e 7B68     		ldr	r3, [r7, #4]
 819 0020 D3F88431 		ldr	r3, [r3, #388]
 820 0024 43F48072 		orr	r2, r3, #256
 821 0028 7B68     		ldr	r3, [r7, #4]
 822 002a C3F88421 		str	r2, [r3, #388]
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 823              		.loc 1 530 0
 824 002e 7B68     		ldr	r3, [r7, #4]
 825 0030 D3F89431 		ldr	r3, [r3, #404]
 826 0034 43F48072 		orr	r2, r3, #256
 827 0038 7B68     		ldr	r3, [r7, #4]
 828 003a C3F89421 		str	r2, [r3, #404]
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 829              		.loc 1 531 0
 830 003e 7B68     		ldr	r3, [r7, #4]
 831 0040 D3F8A431 		ldr	r3, [r3, #420]
 832 0044 43F48072 		orr	r2, r3, #256
 833 0048 7B68     		ldr	r3, [r7, #4]
 834 004a C3F8A421 		str	r2, [r3, #420]
 835 004e 1DE0     		b	.L46
 836              	.L47:
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 837              		.loc 1 536 0
 838 0050 7B68     		ldr	r3, [r7, #4]
 839 0052 1B68     		ldr	r3, [r3]
 840 0054 23F08002 		bic	r2, r3, #128
 841 0058 7B68     		ldr	r3, [r7, #4]
 842 005a 1A60     		str	r2, [r3]
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 843              		.loc 1 539 0
 844 005c 7B68     		ldr	r3, [r7, #4]
 845 005e D3F88431 		ldr	r3, [r3, #388]
 846 0062 23F48072 		bic	r2, r3, #256
 847 0066 7B68     		ldr	r3, [r7, #4]
 848 0068 C3F88421 		str	r2, [r3, #388]
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 849              		.loc 1 540 0
 850 006c 7B68     		ldr	r3, [r7, #4]
 851 006e D3F89431 		ldr	r3, [r3, #404]
 852 0072 23F48072 		bic	r2, r3, #256
 853 0076 7B68     		ldr	r3, [r7, #4]
 854 0078 C3F89421 		str	r2, [r3, #404]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 855              		.loc 1 541 0
 856 007c 7B68     		ldr	r3, [r7, #4]
 857 007e D3F8A431 		ldr	r3, [r3, #420]
 858 0082 23F48072 		bic	r2, r3, #256
 859 0086 7B68     		ldr	r3, [r7, #4]
 860 0088 C3F8A421 		str	r2, [r3, #420]
 861              	.L46:
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 862              		.loc 1 543 0
 863 008c 0C37     		adds	r7, r7, #12
 864 008e BD46     		mov	sp, r7
 865              		@ sp needed
 866 0090 5DF8047B 		ldr	r7, [sp], #4
 867 0094 7047     		bx	lr
 868              		.cfi_endproc
 869              	.LFE116:
 871 0096 00BF     		.section	.text.CAN_Transmit,"ax",%progbits
 872              		.align	2
 873              		.global	CAN_Transmit
 874              		.thumb
 875              		.thumb_func
 877              	CAN_Transmit:
 878              	.LFB117:
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 879              		.loc 1 573 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 16
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 884 0000 80B4     		push	{r7}
 885              	.LCFI21:
 886              		.cfi_def_cfa_offset 4
 887              		.cfi_offset 7, -4
 888 0002 85B0     		sub	sp, sp, #20
 889              	.LCFI22:
 890              		.cfi_def_cfa_offset 24
 891 0004 00AF     		add	r7, sp, #0
 892              	.LCFI23:
 893              		.cfi_def_cfa_register 7
 894 0006 7860     		str	r0, [r7, #4]
 895 0008 3960     		str	r1, [r7]
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 896              		.loc 1 574 0
 897 000a 0023     		movs	r3, #0
 898 000c FB73     		strb	r3, [r7, #15]
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 899              		.loc 1 582 0
 900 000e 7B68     		ldr	r3, [r7, #4]
 901 0010 9B68     		ldr	r3, [r3, #8]
 902 0012 03F08063 		and	r3, r3, #67108864
 903 0016 002B     		cmp	r3, #0
 904 0018 02D0     		beq	.L50
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 905              		.loc 1 584 0
 906 001a 0023     		movs	r3, #0
 907 001c FB73     		strb	r3, [r7, #15]
 908 001e 13E0     		b	.L51
 909              	.L50:
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 910              		.loc 1 586 0
 911 0020 7B68     		ldr	r3, [r7, #4]
 912 0022 9B68     		ldr	r3, [r3, #8]
 913 0024 03F00063 		and	r3, r3, #134217728
 914 0028 002B     		cmp	r3, #0
 915 002a 02D0     		beq	.L52
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 916              		.loc 1 588 0
 917 002c 0123     		movs	r3, #1
 918 002e FB73     		strb	r3, [r7, #15]
 919 0030 0AE0     		b	.L51
 920              	.L52:
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 921              		.loc 1 590 0
 922 0032 7B68     		ldr	r3, [r7, #4]
 923 0034 9B68     		ldr	r3, [r3, #8]
 924 0036 03F08053 		and	r3, r3, #268435456
 925 003a 002B     		cmp	r3, #0
 926 003c 02D0     		beq	.L53
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 927              		.loc 1 592 0
 928 003e 0223     		movs	r3, #2
 929 0040 FB73     		strb	r3, [r7, #15]
 930 0042 01E0     		b	.L51
 931              	.L53:
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 932              		.loc 1 596 0
 933 0044 0423     		movs	r3, #4
 934 0046 FB73     		strb	r3, [r7, #15]
 935              	.L51:
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 936              		.loc 1 599 0
 937 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 938 004a 042B     		cmp	r3, #4
 939 004c 00F09880 		beq	.L54
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 940              		.loc 1 602 0
 941 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 942 0052 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 943 0054 7968     		ldr	r1, [r7, #4]
 944 0056 1832     		adds	r2, r2, #24
 945 0058 1201     		lsls	r2, r2, #4
 946 005a 0A44     		add	r2, r2, r1
 947 005c 1268     		ldr	r2, [r2]
 948 005e 02F00102 		and	r2, r2, #1
 949 0062 7968     		ldr	r1, [r7, #4]
 950 0064 1833     		adds	r3, r3, #24
 951 0066 1B01     		lsls	r3, r3, #4
 952 0068 0B44     		add	r3, r3, r1
 953 006a 1A60     		str	r2, [r3]
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 954              		.loc 1 603 0
 955 006c 3B68     		ldr	r3, [r7]
 956 006e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 957 0070 002B     		cmp	r3, #0
 958 0072 13D1     		bne	.L55
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 959              		.loc 1 606 0
 960 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 961 0076 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 962 0078 7968     		ldr	r1, [r7, #4]
 963 007a 1832     		adds	r2, r2, #24
 964 007c 1201     		lsls	r2, r2, #4
 965 007e 0A44     		add	r2, r2, r1
 966 0080 1168     		ldr	r1, [r2]
 967 0082 3A68     		ldr	r2, [r7]
 968 0084 1268     		ldr	r2, [r2]
 969 0086 5005     		lsls	r0, r2, #21
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 970              		.loc 1 607 0
 971 0088 3A68     		ldr	r2, [r7]
 972 008a 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 973              		.loc 1 606 0
 974 008c 0243     		orrs	r2, r2, r0
 975 008e 0A43     		orrs	r2, r2, r1
 976 0090 7968     		ldr	r1, [r7, #4]
 977 0092 1833     		adds	r3, r3, #24
 978 0094 1B01     		lsls	r3, r3, #4
 979 0096 0B44     		add	r3, r3, r1
 980 0098 1A60     		str	r2, [r3]
 981 009a 15E0     		b	.L56
 982              	.L55:
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 983              		.loc 1 612 0
 984 009c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 985 009e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 986 00a0 7968     		ldr	r1, [r7, #4]
 987 00a2 1832     		adds	r2, r2, #24
 988 00a4 1201     		lsls	r2, r2, #4
 989 00a6 0A44     		add	r2, r2, r1
 990 00a8 1168     		ldr	r1, [r2]
 991 00aa 3A68     		ldr	r2, [r7]
 992 00ac 5268     		ldr	r2, [r2, #4]
 993 00ae D000     		lsls	r0, r2, #3
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 994              		.loc 1 613 0
 995 00b0 3A68     		ldr	r2, [r7]
 996 00b2 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 997              		.loc 1 612 0
 998 00b4 1043     		orrs	r0, r0, r2
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 999              		.loc 1 614 0
 1000 00b6 3A68     		ldr	r2, [r7]
 1001 00b8 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1002              		.loc 1 613 0
 1003 00ba 0243     		orrs	r2, r2, r0
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1004              		.loc 1 612 0
 1005 00bc 0A43     		orrs	r2, r2, r1
 1006 00be 7968     		ldr	r1, [r7, #4]
 1007 00c0 1833     		adds	r3, r3, #24
 1008 00c2 1B01     		lsls	r3, r3, #4
 1009 00c4 0B44     		add	r3, r3, r1
 1010 00c6 1A60     		str	r2, [r3]
 1011              	.L56:
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 1012              		.loc 1 618 0
 1013 00c8 3B68     		ldr	r3, [r7]
 1014 00ca 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1015 00cc 03F00F03 		and	r3, r3, #15
 1016 00d0 DAB2     		uxtb	r2, r3
 1017 00d2 3B68     		ldr	r3, [r7]
 1018 00d4 9A72     		strb	r2, [r3, #10]
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 1019              		.loc 1 619 0
 1020 00d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1021 00d8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1022 00da 7968     		ldr	r1, [r7, #4]
 1023 00dc 1832     		adds	r2, r2, #24
 1024 00de 1201     		lsls	r2, r2, #4
 1025 00e0 0A44     		add	r2, r2, r1
 1026 00e2 5268     		ldr	r2, [r2, #4]
 1027 00e4 22F00F02 		bic	r2, r2, #15
 1028 00e8 7968     		ldr	r1, [r7, #4]
 1029 00ea 1833     		adds	r3, r3, #24
 1030 00ec 1B01     		lsls	r3, r3, #4
 1031 00ee 0B44     		add	r3, r3, r1
 1032 00f0 5A60     		str	r2, [r3, #4]
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 1033              		.loc 1 620 0
 1034 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1035 00f4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1036 00f6 7968     		ldr	r1, [r7, #4]
 1037 00f8 1832     		adds	r2, r2, #24
 1038 00fa 1201     		lsls	r2, r2, #4
 1039 00fc 0A44     		add	r2, r2, r1
 1040 00fe 5168     		ldr	r1, [r2, #4]
 1041 0100 3A68     		ldr	r2, [r7]
 1042 0102 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 1043 0104 0A43     		orrs	r2, r2, r1
 1044 0106 7968     		ldr	r1, [r7, #4]
 1045 0108 1833     		adds	r3, r3, #24
 1046 010a 1B01     		lsls	r3, r3, #4
 1047 010c 0B44     		add	r3, r3, r1
 1048 010e 5A60     		str	r2, [r3, #4]
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1049              		.loc 1 623 0
 1050 0110 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1051 0112 3A68     		ldr	r2, [r7]
 1052 0114 927B     		ldrb	r2, [r2, #14]	@ zero_extendqisi2
 1053 0116 1106     		lsls	r1, r2, #24
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1054              		.loc 1 624 0
 1055 0118 3A68     		ldr	r2, [r7]
 1056 011a 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 1057 011c 1204     		lsls	r2, r2, #16
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1058              		.loc 1 623 0
 1059 011e 1143     		orrs	r1, r1, r2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1060              		.loc 1 625 0
 1061 0120 3A68     		ldr	r2, [r7]
 1062 0122 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 1063 0124 1202     		lsls	r2, r2, #8
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1064              		.loc 1 624 0
 1065 0126 1143     		orrs	r1, r1, r2
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 1066              		.loc 1 626 0
 1067 0128 3A68     		ldr	r2, [r7]
 1068 012a D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1069              		.loc 1 625 0
 1070 012c 0A43     		orrs	r2, r2, r1
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1071              		.loc 1 623 0
 1072 012e 7968     		ldr	r1, [r7, #4]
 1073 0130 1B01     		lsls	r3, r3, #4
 1074 0132 0B44     		add	r3, r3, r1
 1075 0134 03F5C473 		add	r3, r3, #392
 1076 0138 1A60     		str	r2, [r3]
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1077              		.loc 1 627 0
 1078 013a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1079 013c 3A68     		ldr	r2, [r7]
 1080 013e 927C     		ldrb	r2, [r2, #18]	@ zero_extendqisi2
 1081 0140 1106     		lsls	r1, r2, #24
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1082              		.loc 1 628 0
 1083 0142 3A68     		ldr	r2, [r7]
 1084 0144 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 1085 0146 1204     		lsls	r2, r2, #16
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1086              		.loc 1 627 0
 1087 0148 1143     		orrs	r1, r1, r2
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1088              		.loc 1 629 0
 1089 014a 3A68     		ldr	r2, [r7]
 1090 014c 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 1091 014e 1202     		lsls	r2, r2, #8
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1092              		.loc 1 628 0
 1093 0150 1143     		orrs	r1, r1, r2
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 1094              		.loc 1 630 0
 1095 0152 3A68     		ldr	r2, [r7]
 1096 0154 D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1097              		.loc 1 629 0
 1098 0156 0A43     		orrs	r2, r2, r1
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1099              		.loc 1 627 0
 1100 0158 7968     		ldr	r1, [r7, #4]
 1101 015a 1B01     		lsls	r3, r3, #4
 1102 015c 0B44     		add	r3, r3, r1
 1103 015e 03F5C473 		add	r3, r3, #392
 1104 0162 5A60     		str	r2, [r3, #4]
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 1105              		.loc 1 632 0
 1106 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1107 0166 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1108 0168 7968     		ldr	r1, [r7, #4]
 1109 016a 1832     		adds	r2, r2, #24
 1110 016c 1201     		lsls	r2, r2, #4
 1111 016e 0A44     		add	r2, r2, r1
 1112 0170 1268     		ldr	r2, [r2]
 1113 0172 42F00102 		orr	r2, r2, #1
 1114 0176 7968     		ldr	r1, [r7, #4]
 1115 0178 1833     		adds	r3, r3, #24
 1116 017a 1B01     		lsls	r3, r3, #4
 1117 017c 0B44     		add	r3, r3, r1
 1118 017e 1A60     		str	r2, [r3]
 1119              	.L54:
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 1120              		.loc 1 634 0
 1121 0180 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1122              		.loc 1 635 0
 1123 0182 1846     		mov	r0, r3
 1124 0184 1437     		adds	r7, r7, #20
 1125 0186 BD46     		mov	sp, r7
 1126              		@ sp needed
 1127 0188 5DF8047B 		ldr	r7, [sp], #4
 1128 018c 7047     		bx	lr
 1129              		.cfi_endproc
 1130              	.LFE117:
 1132 018e 00BF     		.section	.text.CAN_TransmitStatus,"ax",%progbits
 1133              		.align	2
 1134              		.global	CAN_TransmitStatus
 1135              		.thumb
 1136              		.thumb_func
 1138              	CAN_TransmitStatus:
 1139              	.LFB118:
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1140              		.loc 1 645 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 16
 1143              		@ frame_needed = 1, uses_anonymous_args = 0
 1144              		@ link register save eliminated.
 1145 0000 80B4     		push	{r7}
 1146              	.LCFI24:
 1147              		.cfi_def_cfa_offset 4
 1148              		.cfi_offset 7, -4
 1149 0002 85B0     		sub	sp, sp, #20
 1150              	.LCFI25:
 1151              		.cfi_def_cfa_offset 24
 1152 0004 00AF     		add	r7, sp, #0
 1153              	.LCFI26:
 1154              		.cfi_def_cfa_register 7
 1155 0006 7860     		str	r0, [r7, #4]
 1156 0008 0B46     		mov	r3, r1
 1157 000a FB70     		strb	r3, [r7, #3]
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 1158              		.loc 1 646 0
 1159 000c 0023     		movs	r3, #0
 1160 000e FB60     		str	r3, [r7, #12]
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 1161              		.loc 1 652 0
 1162 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1163 0012 012B     		cmp	r3, #1
 1164 0014 09D0     		beq	.L60
 1165 0016 022B     		cmp	r3, #2
 1166 0018 0DD0     		beq	.L61
 1167 001a 002B     		cmp	r3, #0
 1168 001c 11D1     		bne	.L75
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 1169              		.loc 1 655 0
 1170 001e 7B68     		ldr	r3, [r7, #4]
 1171 0020 9A68     		ldr	r2, [r3, #8]
 1172 0022 264B     		ldr	r3, .L76
 1173 0024 1340     		ands	r3, r3, r2
 1174 0026 FB60     		str	r3, [r7, #12]
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1175              		.loc 1 656 0
 1176 0028 0EE0     		b	.L63
 1177              	.L60:
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 1178              		.loc 1 658 0
 1179 002a 7B68     		ldr	r3, [r7, #4]
 1180 002c 9A68     		ldr	r2, [r3, #8]
 1181 002e 244B     		ldr	r3, .L76+4
 1182 0030 1340     		ands	r3, r3, r2
 1183 0032 FB60     		str	r3, [r7, #12]
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1184              		.loc 1 659 0
 1185 0034 08E0     		b	.L63
 1186              	.L61:
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 1187              		.loc 1 661 0
 1188 0036 7B68     		ldr	r3, [r7, #4]
 1189 0038 9A68     		ldr	r2, [r3, #8]
 1190 003a 224B     		ldr	r3, .L76+8
 1191 003c 1340     		ands	r3, r3, r2
 1192 003e FB60     		str	r3, [r7, #12]
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1193              		.loc 1 662 0
 1194 0040 02E0     		b	.L63
 1195              	.L75:
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 1196              		.loc 1 664 0
 1197 0042 0023     		movs	r3, #0
 1198 0044 FB60     		str	r3, [r7, #12]
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1199              		.loc 1 665 0
 1200 0046 00BF     		nop
 1201              	.L63:
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 1202              		.loc 1 667 0
 1203 0048 FB68     		ldr	r3, [r7, #12]
 1204 004a 1F4A     		ldr	r2, .L76+12
 1205 004c 9342     		cmp	r3, r2
 1206 004e 1BD0     		beq	.L65
 1207 0050 1D4A     		ldr	r2, .L76+12
 1208 0052 9342     		cmp	r3, r2
 1209 0054 08D8     		bhi	.L66
 1210 0056 1D4A     		ldr	r2, .L76+16
 1211 0058 9342     		cmp	r3, r2
 1212 005a 12D0     		beq	.L67
 1213 005c 174A     		ldr	r2, .L76
 1214 005e 9342     		cmp	r3, r2
 1215 0060 18D0     		beq	.L68
 1216 0062 002B     		cmp	r3, #0
 1217 0064 0AD0     		beq	.L69
 1218 0066 1EE0     		b	.L64
 1219              	.L66:
 1220 0068 194A     		ldr	r2, .L76+20
 1221 006a 9342     		cmp	r3, r2
 1222 006c 0FD0     		beq	.L70
 1223 006e 154A     		ldr	r2, .L76+8
 1224 0070 9342     		cmp	r3, r2
 1225 0072 15D0     		beq	.L71
 1226 0074 124A     		ldr	r2, .L76+4
 1227 0076 9342     		cmp	r3, r2
 1228 0078 0FD0     		beq	.L72
 1229 007a 14E0     		b	.L64
 1230              	.L69:
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 1231              		.loc 1 670 0
 1232 007c 0223     		movs	r3, #2
 1233 007e FB60     		str	r3, [r7, #12]
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1234              		.loc 1 671 0
 1235 0080 14E0     		b	.L73
 1236              	.L67:
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 1237              		.loc 1 673 0
 1238 0082 0023     		movs	r3, #0
 1239 0084 FB60     		str	r3, [r7, #12]
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1240              		.loc 1 674 0
 1241 0086 11E0     		b	.L73
 1242              	.L65:
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 1243              		.loc 1 675 0
 1244 0088 0023     		movs	r3, #0
 1245 008a FB60     		str	r3, [r7, #12]
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1246              		.loc 1 676 0
 1247 008c 0EE0     		b	.L73
 1248              	.L70:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 1249              		.loc 1 677 0
 1250 008e 0023     		movs	r3, #0
 1251 0090 FB60     		str	r3, [r7, #12]
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1252              		.loc 1 678 0
 1253 0092 0BE0     		b	.L73
 1254              	.L68:
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 1255              		.loc 1 680 0
 1256 0094 0123     		movs	r3, #1
 1257 0096 FB60     		str	r3, [r7, #12]
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1258              		.loc 1 681 0
 1259 0098 08E0     		b	.L73
 1260              	.L72:
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 1261              		.loc 1 682 0
 1262 009a 0123     		movs	r3, #1
 1263 009c FB60     		str	r3, [r7, #12]
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1264              		.loc 1 683 0
 1265 009e 05E0     		b	.L73
 1266              	.L71:
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 1267              		.loc 1 684 0
 1268 00a0 0123     		movs	r3, #1
 1269 00a2 FB60     		str	r3, [r7, #12]
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1270              		.loc 1 685 0
 1271 00a4 02E0     		b	.L73
 1272              	.L64:
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 1273              		.loc 1 686 0
 1274 00a6 0023     		movs	r3, #0
 1275 00a8 FB60     		str	r3, [r7, #12]
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1276              		.loc 1 687 0
 1277 00aa 00BF     		nop
 1278              	.L73:
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 1279              		.loc 1 689 0
 1280 00ac FB68     		ldr	r3, [r7, #12]
 1281 00ae DBB2     		uxtb	r3, r3
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1282              		.loc 1 690 0
 1283 00b0 1846     		mov	r0, r3
 1284 00b2 1437     		adds	r7, r7, #20
 1285 00b4 BD46     		mov	sp, r7
 1286              		@ sp needed
 1287 00b6 5DF8047B 		ldr	r7, [sp], #4
 1288 00ba 7047     		bx	lr
 1289              	.L77:
 1290              		.align	2
 1291              	.L76:
 1292 00bc 03000004 		.word	67108867
 1293 00c0 00030008 		.word	134218496
 1294 00c4 00000310 		.word	268632064
 1295 00c8 00010008 		.word	134217984
 1296 00cc 01000004 		.word	67108865
 1297 00d0 00000110 		.word	268500992
 1298              		.cfi_endproc
 1299              	.LFE118:
 1301              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 1302              		.align	2
 1303              		.global	CAN_CancelTransmit
 1304              		.thumb
 1305              		.thumb_func
 1307              	CAN_CancelTransmit:
 1308              	.LFB119:
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1309              		.loc 1 699 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 8
 1312              		@ frame_needed = 1, uses_anonymous_args = 0
 1313              		@ link register save eliminated.
 1314 0000 80B4     		push	{r7}
 1315              	.LCFI27:
 1316              		.cfi_def_cfa_offset 4
 1317              		.cfi_offset 7, -4
 1318 0002 83B0     		sub	sp, sp, #12
 1319              	.LCFI28:
 1320              		.cfi_def_cfa_offset 16
 1321 0004 00AF     		add	r7, sp, #0
 1322              	.LCFI29:
 1323              		.cfi_def_cfa_register 7
 1324 0006 7860     		str	r0, [r7, #4]
 1325 0008 0B46     		mov	r3, r1
 1326 000a FB70     		strb	r3, [r7, #3]
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 1327              		.loc 1 704 0
 1328 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1329 000e 012B     		cmp	r3, #1
 1330 0010 0BD0     		beq	.L80
 1331 0012 022B     		cmp	r3, #2
 1332 0014 10D0     		beq	.L81
 1333 0016 002B     		cmp	r3, #0
 1334 0018 00D0     		beq	.L82
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1335              		.loc 1 713 0
 1336 001a 14E0     		b	.L78
 1337              	.L82:
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 1338              		.loc 1 706 0
 1339 001c 7B68     		ldr	r3, [r7, #4]
 1340 001e 9B68     		ldr	r3, [r3, #8]
 1341 0020 43F08002 		orr	r2, r3, #128
 1342 0024 7B68     		ldr	r3, [r7, #4]
 1343 0026 9A60     		str	r2, [r3, #8]
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1344              		.loc 1 707 0
 1345 0028 0DE0     		b	.L78
 1346              	.L80:
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 1347              		.loc 1 708 0
 1348 002a 7B68     		ldr	r3, [r7, #4]
 1349 002c 9B68     		ldr	r3, [r3, #8]
 1350 002e 43F40042 		orr	r2, r3, #32768
 1351 0032 7B68     		ldr	r3, [r7, #4]
 1352 0034 9A60     		str	r2, [r3, #8]
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1353              		.loc 1 709 0
 1354 0036 06E0     		b	.L78
 1355              	.L81:
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 1356              		.loc 1 710 0
 1357 0038 7B68     		ldr	r3, [r7, #4]
 1358 003a 9B68     		ldr	r3, [r3, #8]
 1359 003c 43F40002 		orr	r2, r3, #8388608
 1360 0040 7B68     		ldr	r3, [r7, #4]
 1361 0042 9A60     		str	r2, [r3, #8]
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1362              		.loc 1 711 0
 1363 0044 00BF     		nop
 1364              	.L78:
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1365              		.loc 1 715 0
 1366 0046 0C37     		adds	r7, r7, #12
 1367 0048 BD46     		mov	sp, r7
 1368              		@ sp needed
 1369 004a 5DF8047B 		ldr	r7, [sp], #4
 1370 004e 7047     		bx	lr
 1371              		.cfi_endproc
 1372              	.LFE119:
 1374              		.section	.text.CAN_Receive,"ax",%progbits
 1375              		.align	2
 1376              		.global	CAN_Receive
 1377              		.thumb
 1378              		.thumb_func
 1380              	CAN_Receive:
 1381              	.LFB120:
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1382              		.loc 1 746 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 16
 1385              		@ frame_needed = 1, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387 0000 80B4     		push	{r7}
 1388              	.LCFI30:
 1389              		.cfi_def_cfa_offset 4
 1390              		.cfi_offset 7, -4
 1391 0002 85B0     		sub	sp, sp, #20
 1392              	.LCFI31:
 1393              		.cfi_def_cfa_offset 24
 1394 0004 00AF     		add	r7, sp, #0
 1395              	.LCFI32:
 1396              		.cfi_def_cfa_register 7
 1397 0006 F860     		str	r0, [r7, #12]
 1398 0008 0B46     		mov	r3, r1
 1399 000a 7A60     		str	r2, [r7, #4]
 1400 000c FB72     		strb	r3, [r7, #11]
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1401              		.loc 1 751 0
 1402 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1403 0010 FA68     		ldr	r2, [r7, #12]
 1404 0012 1B33     		adds	r3, r3, #27
 1405 0014 1B01     		lsls	r3, r3, #4
 1406 0016 1344     		add	r3, r3, r2
 1407 0018 1B68     		ldr	r3, [r3]
 1408 001a DBB2     		uxtb	r3, r3
 1409 001c 03F00403 		and	r3, r3, #4
 1410 0020 DAB2     		uxtb	r2, r3
 1411 0022 7B68     		ldr	r3, [r7, #4]
 1412 0024 1A72     		strb	r2, [r3, #8]
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1413              		.loc 1 752 0
 1414 0026 7B68     		ldr	r3, [r7, #4]
 1415 0028 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1416 002a 002B     		cmp	r3, #0
 1417 002c 09D1     		bne	.L85
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 1418              		.loc 1 754 0
 1419 002e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1420 0030 FA68     		ldr	r2, [r7, #12]
 1421 0032 1B33     		adds	r3, r3, #27
 1422 0034 1B01     		lsls	r3, r3, #4
 1423 0036 1344     		add	r3, r3, r2
 1424 0038 1B68     		ldr	r3, [r3]
 1425 003a 5A0D     		lsrs	r2, r3, #21
 1426 003c 7B68     		ldr	r3, [r7, #4]
 1427 003e 1A60     		str	r2, [r3]
 1428 0040 08E0     		b	.L86
 1429              	.L85:
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 1430              		.loc 1 758 0
 1431 0042 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1432 0044 FA68     		ldr	r2, [r7, #12]
 1433 0046 1B33     		adds	r3, r3, #27
 1434 0048 1B01     		lsls	r3, r3, #4
 1435 004a 1344     		add	r3, r3, r2
 1436 004c 1B68     		ldr	r3, [r3]
 1437 004e DA08     		lsrs	r2, r3, #3
 1438 0050 7B68     		ldr	r3, [r7, #4]
 1439 0052 5A60     		str	r2, [r3, #4]
 1440              	.L86:
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1441              		.loc 1 761 0
 1442 0054 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1443 0056 FA68     		ldr	r2, [r7, #12]
 1444 0058 1B33     		adds	r3, r3, #27
 1445 005a 1B01     		lsls	r3, r3, #4
 1446 005c 1344     		add	r3, r3, r2
 1447 005e 1B68     		ldr	r3, [r3]
 1448 0060 DBB2     		uxtb	r3, r3
 1449 0062 03F00203 		and	r3, r3, #2
 1450 0066 DAB2     		uxtb	r2, r3
 1451 0068 7B68     		ldr	r3, [r7, #4]
 1452 006a 5A72     		strb	r2, [r3, #9]
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 1453              		.loc 1 763 0
 1454 006c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1455 006e FA68     		ldr	r2, [r7, #12]
 1456 0070 1B33     		adds	r3, r3, #27
 1457 0072 1B01     		lsls	r3, r3, #4
 1458 0074 1344     		add	r3, r3, r2
 1459 0076 5B68     		ldr	r3, [r3, #4]
 1460 0078 DBB2     		uxtb	r3, r3
 1461 007a 03F00F03 		and	r3, r3, #15
 1462 007e DAB2     		uxtb	r2, r3
 1463 0080 7B68     		ldr	r3, [r7, #4]
 1464 0082 9A72     		strb	r2, [r3, #10]
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 1465              		.loc 1 765 0
 1466 0084 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1467 0086 FA68     		ldr	r2, [r7, #12]
 1468 0088 1B33     		adds	r3, r3, #27
 1469 008a 1B01     		lsls	r3, r3, #4
 1470 008c 1344     		add	r3, r3, r2
 1471 008e 5B68     		ldr	r3, [r3, #4]
 1472 0090 1B0A     		lsrs	r3, r3, #8
 1473 0092 DAB2     		uxtb	r2, r3
 1474 0094 7B68     		ldr	r3, [r7, #4]
 1475 0096 DA74     		strb	r2, [r3, #19]
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 1476              		.loc 1 767 0
 1477 0098 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1478 009a FA68     		ldr	r2, [r7, #12]
 1479 009c 1B01     		lsls	r3, r3, #4
 1480 009e 1344     		add	r3, r3, r2
 1481 00a0 03F5DC73 		add	r3, r3, #440
 1482 00a4 1B68     		ldr	r3, [r3]
 1483 00a6 DAB2     		uxtb	r2, r3
 1484 00a8 7B68     		ldr	r3, [r7, #4]
 1485 00aa DA72     		strb	r2, [r3, #11]
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1486              		.loc 1 768 0
 1487 00ac FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1488 00ae FA68     		ldr	r2, [r7, #12]
 1489 00b0 1B01     		lsls	r3, r3, #4
 1490 00b2 1344     		add	r3, r3, r2
 1491 00b4 03F5DC73 		add	r3, r3, #440
 1492 00b8 1B68     		ldr	r3, [r3]
 1493 00ba 1B0A     		lsrs	r3, r3, #8
 1494 00bc DAB2     		uxtb	r2, r3
 1495 00be 7B68     		ldr	r3, [r7, #4]
 1496 00c0 1A73     		strb	r2, [r3, #12]
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1497              		.loc 1 769 0
 1498 00c2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1499 00c4 FA68     		ldr	r2, [r7, #12]
 1500 00c6 1B01     		lsls	r3, r3, #4
 1501 00c8 1344     		add	r3, r3, r2
 1502 00ca 03F5DC73 		add	r3, r3, #440
 1503 00ce 1B68     		ldr	r3, [r3]
 1504 00d0 1B0C     		lsrs	r3, r3, #16
 1505 00d2 DAB2     		uxtb	r2, r3
 1506 00d4 7B68     		ldr	r3, [r7, #4]
 1507 00d6 5A73     		strb	r2, [r3, #13]
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1508              		.loc 1 770 0
 1509 00d8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1510 00da FA68     		ldr	r2, [r7, #12]
 1511 00dc 1B01     		lsls	r3, r3, #4
 1512 00de 1344     		add	r3, r3, r2
 1513 00e0 03F5DC73 		add	r3, r3, #440
 1514 00e4 1B68     		ldr	r3, [r3]
 1515 00e6 1B0E     		lsrs	r3, r3, #24
 1516 00e8 DAB2     		uxtb	r2, r3
 1517 00ea 7B68     		ldr	r3, [r7, #4]
 1518 00ec 9A73     		strb	r2, [r3, #14]
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1519              		.loc 1 771 0
 1520 00ee FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1521 00f0 FA68     		ldr	r2, [r7, #12]
 1522 00f2 1B01     		lsls	r3, r3, #4
 1523 00f4 1344     		add	r3, r3, r2
 1524 00f6 03F5DC73 		add	r3, r3, #440
 1525 00fa 5B68     		ldr	r3, [r3, #4]
 1526 00fc DAB2     		uxtb	r2, r3
 1527 00fe 7B68     		ldr	r3, [r7, #4]
 1528 0100 DA73     		strb	r2, [r3, #15]
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1529              		.loc 1 772 0
 1530 0102 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1531 0104 FA68     		ldr	r2, [r7, #12]
 1532 0106 1B01     		lsls	r3, r3, #4
 1533 0108 1344     		add	r3, r3, r2
 1534 010a 03F5DC73 		add	r3, r3, #440
 1535 010e 5B68     		ldr	r3, [r3, #4]
 1536 0110 1B0A     		lsrs	r3, r3, #8
 1537 0112 DAB2     		uxtb	r2, r3
 1538 0114 7B68     		ldr	r3, [r7, #4]
 1539 0116 1A74     		strb	r2, [r3, #16]
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1540              		.loc 1 773 0
 1541 0118 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1542 011a FA68     		ldr	r2, [r7, #12]
 1543 011c 1B01     		lsls	r3, r3, #4
 1544 011e 1344     		add	r3, r3, r2
 1545 0120 03F5DC73 		add	r3, r3, #440
 1546 0124 5B68     		ldr	r3, [r3, #4]
 1547 0126 1B0C     		lsrs	r3, r3, #16
 1548 0128 DAB2     		uxtb	r2, r3
 1549 012a 7B68     		ldr	r3, [r7, #4]
 1550 012c 5A74     		strb	r2, [r3, #17]
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1551              		.loc 1 774 0
 1552 012e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1553 0130 FA68     		ldr	r2, [r7, #12]
 1554 0132 1B01     		lsls	r3, r3, #4
 1555 0134 1344     		add	r3, r3, r2
 1556 0136 03F5DC73 		add	r3, r3, #440
 1557 013a 5B68     		ldr	r3, [r3, #4]
 1558 013c 1B0E     		lsrs	r3, r3, #24
 1559 013e DAB2     		uxtb	r2, r3
 1560 0140 7B68     		ldr	r3, [r7, #4]
 1561 0142 9A74     		strb	r2, [r3, #18]
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1562              		.loc 1 777 0
 1563 0144 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1564 0146 002B     		cmp	r3, #0
 1565 0148 06D1     		bne	.L87
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1566              		.loc 1 779 0
 1567 014a FB68     		ldr	r3, [r7, #12]
 1568 014c DB68     		ldr	r3, [r3, #12]
 1569 014e 43F02002 		orr	r2, r3, #32
 1570 0152 FB68     		ldr	r3, [r7, #12]
 1571 0154 DA60     		str	r2, [r3, #12]
 1572 0156 05E0     		b	.L84
 1573              	.L87:
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1574              		.loc 1 784 0
 1575 0158 FB68     		ldr	r3, [r7, #12]
 1576 015a 1B69     		ldr	r3, [r3, #16]
 1577 015c 43F02002 		orr	r2, r3, #32
 1578 0160 FB68     		ldr	r3, [r7, #12]
 1579 0162 1A61     		str	r2, [r3, #16]
 1580              	.L84:
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1581              		.loc 1 786 0
 1582 0164 1437     		adds	r7, r7, #20
 1583 0166 BD46     		mov	sp, r7
 1584              		@ sp needed
 1585 0168 5DF8047B 		ldr	r7, [sp], #4
 1586 016c 7047     		bx	lr
 1587              		.cfi_endproc
 1588              	.LFE120:
 1590 016e 00BF     		.section	.text.CAN_FIFORelease,"ax",%progbits
 1591              		.align	2
 1592              		.global	CAN_FIFORelease
 1593              		.thumb
 1594              		.thumb_func
 1596              	CAN_FIFORelease:
 1597              	.LFB121:
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1598              		.loc 1 795 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 8
 1601              		@ frame_needed = 1, uses_anonymous_args = 0
 1602              		@ link register save eliminated.
 1603 0000 80B4     		push	{r7}
 1604              	.LCFI33:
 1605              		.cfi_def_cfa_offset 4
 1606              		.cfi_offset 7, -4
 1607 0002 83B0     		sub	sp, sp, #12
 1608              	.LCFI34:
 1609              		.cfi_def_cfa_offset 16
 1610 0004 00AF     		add	r7, sp, #0
 1611              	.LCFI35:
 1612              		.cfi_def_cfa_register 7
 1613 0006 7860     		str	r0, [r7, #4]
 1614 0008 0B46     		mov	r3, r1
 1615 000a FB70     		strb	r3, [r7, #3]
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1616              		.loc 1 800 0
 1617 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1618 000e 002B     		cmp	r3, #0
 1619 0010 06D1     		bne	.L90
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1620              		.loc 1 802 0
 1621 0012 7B68     		ldr	r3, [r7, #4]
 1622 0014 DB68     		ldr	r3, [r3, #12]
 1623 0016 43F02002 		orr	r2, r3, #32
 1624 001a 7B68     		ldr	r3, [r7, #4]
 1625 001c DA60     		str	r2, [r3, #12]
 1626 001e 05E0     		b	.L89
 1627              	.L90:
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1628              		.loc 1 807 0
 1629 0020 7B68     		ldr	r3, [r7, #4]
 1630 0022 1B69     		ldr	r3, [r3, #16]
 1631 0024 43F02002 		orr	r2, r3, #32
 1632 0028 7B68     		ldr	r3, [r7, #4]
 1633 002a 1A61     		str	r2, [r3, #16]
 1634              	.L89:
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1635              		.loc 1 809 0
 1636 002c 0C37     		adds	r7, r7, #12
 1637 002e BD46     		mov	sp, r7
 1638              		@ sp needed
 1639 0030 5DF8047B 		ldr	r7, [sp], #4
 1640 0034 7047     		bx	lr
 1641              		.cfi_endproc
 1642              	.LFE121:
 1644 0036 00BF     		.section	.text.CAN_MessagePending,"ax",%progbits
 1645              		.align	2
 1646              		.global	CAN_MessagePending
 1647              		.thumb
 1648              		.thumb_func
 1650              	CAN_MessagePending:
 1651              	.LFB122:
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1652              		.loc 1 818 0
 1653              		.cfi_startproc
 1654              		@ args = 0, pretend = 0, frame = 16
 1655              		@ frame_needed = 1, uses_anonymous_args = 0
 1656              		@ link register save eliminated.
 1657 0000 80B4     		push	{r7}
 1658              	.LCFI36:
 1659              		.cfi_def_cfa_offset 4
 1660              		.cfi_offset 7, -4
 1661 0002 85B0     		sub	sp, sp, #20
 1662              	.LCFI37:
 1663              		.cfi_def_cfa_offset 24
 1664 0004 00AF     		add	r7, sp, #0
 1665              	.LCFI38:
 1666              		.cfi_def_cfa_register 7
 1667 0006 7860     		str	r0, [r7, #4]
 1668 0008 0B46     		mov	r3, r1
 1669 000a FB70     		strb	r3, [r7, #3]
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 1670              		.loc 1 819 0
 1671 000c 0023     		movs	r3, #0
 1672 000e FB73     		strb	r3, [r7, #15]
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1673              		.loc 1 823 0
 1674 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1675 0012 002B     		cmp	r3, #0
 1676 0014 06D1     		bne	.L93
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 1677              		.loc 1 825 0
 1678 0016 7B68     		ldr	r3, [r7, #4]
 1679 0018 DB68     		ldr	r3, [r3, #12]
 1680 001a DBB2     		uxtb	r3, r3
 1681 001c 03F00303 		and	r3, r3, #3
 1682 0020 FB73     		strb	r3, [r7, #15]
 1683 0022 0BE0     		b	.L94
 1684              	.L93:
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 1685              		.loc 1 827 0
 1686 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1687 0026 012B     		cmp	r3, #1
 1688 0028 06D1     		bne	.L95
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 1689              		.loc 1 829 0
 1690 002a 7B68     		ldr	r3, [r7, #4]
 1691 002c 1B69     		ldr	r3, [r3, #16]
 1692 002e DBB2     		uxtb	r3, r3
 1693 0030 03F00303 		and	r3, r3, #3
 1694 0034 FB73     		strb	r3, [r7, #15]
 1695 0036 01E0     		b	.L94
 1696              	.L95:
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 1697              		.loc 1 833 0
 1698 0038 0023     		movs	r3, #0
 1699 003a FB73     		strb	r3, [r7, #15]
 1700              	.L94:
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 1701              		.loc 1 835 0
 1702 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1703              		.loc 1 836 0
 1704 003e 1846     		mov	r0, r3
 1705 0040 1437     		adds	r7, r7, #20
 1706 0042 BD46     		mov	sp, r7
 1707              		@ sp needed
 1708 0044 5DF8047B 		ldr	r7, [sp], #4
 1709 0048 7047     		bx	lr
 1710              		.cfi_endproc
 1711              	.LFE122:
 1713 004a 00BF     		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1714              		.align	2
 1715              		.global	CAN_OperatingModeRequest
 1716              		.thumb
 1717              		.thumb_func
 1719              	CAN_OperatingModeRequest:
 1720              	.LFB123:
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1721              		.loc 1 868 0
 1722              		.cfi_startproc
 1723              		@ args = 0, pretend = 0, frame = 16
 1724              		@ frame_needed = 1, uses_anonymous_args = 0
 1725              		@ link register save eliminated.
 1726 0000 80B4     		push	{r7}
 1727              	.LCFI39:
 1728              		.cfi_def_cfa_offset 4
 1729              		.cfi_offset 7, -4
 1730 0002 85B0     		sub	sp, sp, #20
 1731              	.LCFI40:
 1732              		.cfi_def_cfa_offset 24
 1733 0004 00AF     		add	r7, sp, #0
 1734              	.LCFI41:
 1735              		.cfi_def_cfa_register 7
 1736 0006 7860     		str	r0, [r7, #4]
 1737 0008 0B46     		mov	r3, r1
 1738 000a FB70     		strb	r3, [r7, #3]
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 1739              		.loc 1 869 0
 1740 000c 0023     		movs	r3, #0
 1741 000e FB73     		strb	r3, [r7, #15]
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 1742              		.loc 1 872 0
 1743 0010 4FF6FF73 		movw	r3, #65535
 1744 0014 BB60     		str	r3, [r7, #8]
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 1745              		.loc 1 878 0
 1746 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1747 0018 002B     		cmp	r3, #0
 1748 001a 20D1     		bne	.L98
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 1749              		.loc 1 881 0
 1750 001c 7B68     		ldr	r3, [r7, #4]
 1751 001e 1B68     		ldr	r3, [r3]
 1752 0020 23F00303 		bic	r3, r3, #3
 1753 0024 43F00102 		orr	r2, r3, #1
 1754 0028 7B68     		ldr	r3, [r7, #4]
 1755 002a 1A60     		str	r2, [r3]
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1756              		.loc 1 884 0
 1757 002c 02E0     		b	.L99
 1758              	.L101:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1759              		.loc 1 886 0
 1760 002e BB68     		ldr	r3, [r7, #8]
 1761 0030 013B     		subs	r3, r3, #1
 1762 0032 BB60     		str	r3, [r7, #8]
 1763              	.L99:
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1764              		.loc 1 884 0 discriminator 1
 1765 0034 7B68     		ldr	r3, [r7, #4]
 1766 0036 5B68     		ldr	r3, [r3, #4]
 1767 0038 03F00303 		and	r3, r3, #3
 1768 003c 012B     		cmp	r3, #1
 1769 003e 02D0     		beq	.L100
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1770              		.loc 1 884 0 is_stmt 0 discriminator 2
 1771 0040 BB68     		ldr	r3, [r7, #8]
 1772 0042 002B     		cmp	r3, #0
 1773 0044 F3D1     		bne	.L101
 1774              	.L100:
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 1775              		.loc 1 888 0 is_stmt 1
 1776 0046 7B68     		ldr	r3, [r7, #4]
 1777 0048 5B68     		ldr	r3, [r3, #4]
 1778 004a 03F00303 		and	r3, r3, #3
 1779 004e 012B     		cmp	r3, #1
 1780 0050 02D0     		beq	.L102
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1781              		.loc 1 890 0
 1782 0052 0023     		movs	r3, #0
 1783 0054 FB73     		strb	r3, [r7, #15]
 1784 0056 4AE0     		b	.L104
 1785              	.L102:
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1786              		.loc 1 894 0
 1787 0058 0123     		movs	r3, #1
 1788 005a FB73     		strb	r3, [r7, #15]
 1789 005c 47E0     		b	.L104
 1790              	.L98:
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 1791              		.loc 1 897 0
 1792 005e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1793 0060 012B     		cmp	r3, #1
 1794 0062 1ED1     		bne	.L105
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 1795              		.loc 1 900 0
 1796 0064 7B68     		ldr	r3, [r7, #4]
 1797 0066 1B68     		ldr	r3, [r3]
 1798 0068 23F00302 		bic	r2, r3, #3
 1799 006c 7B68     		ldr	r3, [r7, #4]
 1800 006e 1A60     		str	r2, [r3]
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1801              		.loc 1 903 0
 1802 0070 02E0     		b	.L106
 1803              	.L108:
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1804              		.loc 1 905 0
 1805 0072 BB68     		ldr	r3, [r7, #8]
 1806 0074 013B     		subs	r3, r3, #1
 1807 0076 BB60     		str	r3, [r7, #8]
 1808              	.L106:
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1809              		.loc 1 903 0 discriminator 1
 1810 0078 7B68     		ldr	r3, [r7, #4]
 1811 007a 5B68     		ldr	r3, [r3, #4]
 1812 007c 03F00303 		and	r3, r3, #3
 1813 0080 002B     		cmp	r3, #0
 1814 0082 02D0     		beq	.L107
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1815              		.loc 1 903 0 is_stmt 0 discriminator 2
 1816 0084 BB68     		ldr	r3, [r7, #8]
 1817 0086 002B     		cmp	r3, #0
 1818 0088 F3D1     		bne	.L108
 1819              	.L107:
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 1820              		.loc 1 907 0 is_stmt 1
 1821 008a 7B68     		ldr	r3, [r7, #4]
 1822 008c 5B68     		ldr	r3, [r3, #4]
 1823 008e 03F00303 		and	r3, r3, #3
 1824 0092 002B     		cmp	r3, #0
 1825 0094 02D0     		beq	.L109
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1826              		.loc 1 909 0
 1827 0096 0023     		movs	r3, #0
 1828 0098 FB73     		strb	r3, [r7, #15]
 1829 009a 28E0     		b	.L104
 1830              	.L109:
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1831              		.loc 1 913 0
 1832 009c 0123     		movs	r3, #1
 1833 009e FB73     		strb	r3, [r7, #15]
 1834 00a0 25E0     		b	.L104
 1835              	.L105:
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 1836              		.loc 1 916 0
 1837 00a2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1838 00a4 022B     		cmp	r3, #2
 1839 00a6 20D1     		bne	.L111
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1840              		.loc 1 919 0
 1841 00a8 7B68     		ldr	r3, [r7, #4]
 1842 00aa 1B68     		ldr	r3, [r3]
 1843 00ac 23F00303 		bic	r3, r3, #3
 1844 00b0 43F00202 		orr	r2, r3, #2
 1845 00b4 7B68     		ldr	r3, [r7, #4]
 1846 00b6 1A60     		str	r2, [r3]
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1847              		.loc 1 922 0
 1848 00b8 02E0     		b	.L112
 1849              	.L114:
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1850              		.loc 1 924 0
 1851 00ba BB68     		ldr	r3, [r7, #8]
 1852 00bc 013B     		subs	r3, r3, #1
 1853 00be BB60     		str	r3, [r7, #8]
 1854              	.L112:
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1855              		.loc 1 922 0 discriminator 1
 1856 00c0 7B68     		ldr	r3, [r7, #4]
 1857 00c2 5B68     		ldr	r3, [r3, #4]
 1858 00c4 03F00303 		and	r3, r3, #3
 1859 00c8 022B     		cmp	r3, #2
 1860 00ca 02D0     		beq	.L113
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1861              		.loc 1 922 0 is_stmt 0 discriminator 2
 1862 00cc BB68     		ldr	r3, [r7, #8]
 1863 00ce 002B     		cmp	r3, #0
 1864 00d0 F3D1     		bne	.L114
 1865              	.L113:
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 1866              		.loc 1 926 0 is_stmt 1
 1867 00d2 7B68     		ldr	r3, [r7, #4]
 1868 00d4 5B68     		ldr	r3, [r3, #4]
 1869 00d6 03F00303 		and	r3, r3, #3
 1870 00da 022B     		cmp	r3, #2
 1871 00dc 02D0     		beq	.L115
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1872              		.loc 1 928 0
 1873 00de 0023     		movs	r3, #0
 1874 00e0 FB73     		strb	r3, [r7, #15]
 1875 00e2 04E0     		b	.L104
 1876              	.L115:
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1877              		.loc 1 932 0
 1878 00e4 0123     		movs	r3, #1
 1879 00e6 FB73     		strb	r3, [r7, #15]
 1880 00e8 01E0     		b	.L104
 1881              	.L111:
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 1882              		.loc 1 937 0
 1883 00ea 0023     		movs	r3, #0
 1884 00ec FB73     		strb	r3, [r7, #15]
 1885              	.L104:
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 1886              		.loc 1 940 0
 1887 00ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1888              		.loc 1 941 0
 1889 00f0 1846     		mov	r0, r3
 1890 00f2 1437     		adds	r7, r7, #20
 1891 00f4 BD46     		mov	sp, r7
 1892              		@ sp needed
 1893 00f6 5DF8047B 		ldr	r7, [sp], #4
 1894 00fa 7047     		bx	lr
 1895              		.cfi_endproc
 1896              	.LFE123:
 1898              		.section	.text.CAN_Sleep,"ax",%progbits
 1899              		.align	2
 1900              		.global	CAN_Sleep
 1901              		.thumb
 1902              		.thumb_func
 1904              	CAN_Sleep:
 1905              	.LFB124:
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1906              		.loc 1 949 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 16
 1909              		@ frame_needed = 1, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911 0000 80B4     		push	{r7}
 1912              	.LCFI42:
 1913              		.cfi_def_cfa_offset 4
 1914              		.cfi_offset 7, -4
 1915 0002 85B0     		sub	sp, sp, #20
 1916              	.LCFI43:
 1917              		.cfi_def_cfa_offset 24
 1918 0004 00AF     		add	r7, sp, #0
 1919              	.LCFI44:
 1920              		.cfi_def_cfa_register 7
 1921 0006 7860     		str	r0, [r7, #4]
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 1922              		.loc 1 950 0
 1923 0008 0023     		movs	r3, #0
 1924 000a FB73     		strb	r3, [r7, #15]
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1925              		.loc 1 956 0
 1926 000c 7B68     		ldr	r3, [r7, #4]
 1927 000e 1B68     		ldr	r3, [r3]
 1928 0010 23F00303 		bic	r3, r3, #3
 1929 0014 43F00202 		orr	r2, r3, #2
 1930 0018 7B68     		ldr	r3, [r7, #4]
 1931 001a 1A60     		str	r2, [r3]
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 1932              		.loc 1 959 0
 1933 001c 7B68     		ldr	r3, [r7, #4]
 1934 001e 5B68     		ldr	r3, [r3, #4]
 1935 0020 03F00303 		and	r3, r3, #3
 1936 0024 022B     		cmp	r3, #2
 1937 0026 01D1     		bne	.L119
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 1938              		.loc 1 962 0
 1939 0028 0123     		movs	r3, #1
 1940 002a FB73     		strb	r3, [r7, #15]
 1941              	.L119:
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 1942              		.loc 1 965 0
 1943 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1944              		.loc 1 966 0
 1945 002e 1846     		mov	r0, r3
 1946 0030 1437     		adds	r7, r7, #20
 1947 0032 BD46     		mov	sp, r7
 1948              		@ sp needed
 1949 0034 5DF8047B 		ldr	r7, [sp], #4
 1950 0038 7047     		bx	lr
 1951              		.cfi_endproc
 1952              	.LFE124:
 1954 003a 00BF     		.section	.text.CAN_WakeUp,"ax",%progbits
 1955              		.align	2
 1956              		.global	CAN_WakeUp
 1957              		.thumb
 1958              		.thumb_func
 1960              	CAN_WakeUp:
 1961              	.LFB125:
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1962              		.loc 1 974 0
 1963              		.cfi_startproc
 1964              		@ args = 0, pretend = 0, frame = 16
 1965              		@ frame_needed = 1, uses_anonymous_args = 0
 1966              		@ link register save eliminated.
 1967 0000 80B4     		push	{r7}
 1968              	.LCFI45:
 1969              		.cfi_def_cfa_offset 4
 1970              		.cfi_offset 7, -4
 1971 0002 85B0     		sub	sp, sp, #20
 1972              	.LCFI46:
 1973              		.cfi_def_cfa_offset 24
 1974 0004 00AF     		add	r7, sp, #0
 1975              	.LCFI47:
 1976              		.cfi_def_cfa_register 7
 1977 0006 7860     		str	r0, [r7, #4]
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 1978              		.loc 1 975 0
 1979 0008 4FF6FF73 		movw	r3, #65535
 1980 000c FB60     		str	r3, [r7, #12]
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 1981              		.loc 1 976 0
 1982 000e 0023     		movs	r3, #0
 1983 0010 FB72     		strb	r3, [r7, #11]
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 1984              		.loc 1 982 0
 1985 0012 7B68     		ldr	r3, [r7, #4]
 1986 0014 1B68     		ldr	r3, [r3]
 1987 0016 23F00202 		bic	r2, r3, #2
 1988 001a 7B68     		ldr	r3, [r7, #4]
 1989 001c 1A60     		str	r2, [r3]
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 1990              		.loc 1 985 0
 1991 001e 02E0     		b	.L122
 1992              	.L124:
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 1993              		.loc 1 987 0
 1994 0020 FB68     		ldr	r3, [r7, #12]
 1995 0022 013B     		subs	r3, r3, #1
 1996 0024 FB60     		str	r3, [r7, #12]
 1997              	.L122:
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 1998              		.loc 1 985 0 discriminator 1
 1999 0026 7B68     		ldr	r3, [r7, #4]
 2000 0028 5B68     		ldr	r3, [r3, #4]
 2001 002a 03F00203 		and	r3, r3, #2
 2002 002e 002B     		cmp	r3, #0
 2003 0030 02D0     		beq	.L123
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2004              		.loc 1 985 0 is_stmt 0 discriminator 2
 2005 0032 FB68     		ldr	r3, [r7, #12]
 2006 0034 002B     		cmp	r3, #0
 2007 0036 F3D1     		bne	.L124
 2008              	.L123:
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 2009              		.loc 1 989 0 is_stmt 1
 2010 0038 7B68     		ldr	r3, [r7, #4]
 2011 003a 5B68     		ldr	r3, [r3, #4]
 2012 003c 03F00203 		and	r3, r3, #2
 2013 0040 002B     		cmp	r3, #0
 2014 0042 01D1     		bne	.L125
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 2015              		.loc 1 992 0
 2016 0044 0123     		movs	r3, #1
 2017 0046 FB72     		strb	r3, [r7, #11]
 2018              	.L125:
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 2019              		.loc 1 995 0
 2020 0048 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2021              		.loc 1 996 0
 2022 004a 1846     		mov	r0, r3
 2023 004c 1437     		adds	r7, r7, #20
 2024 004e BD46     		mov	sp, r7
 2025              		@ sp needed
 2026 0050 5DF8047B 		ldr	r7, [sp], #4
 2027 0054 7047     		bx	lr
 2028              		.cfi_endproc
 2029              	.LFE125:
 2031 0056 00BF     		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 2032              		.align	2
 2033              		.global	CAN_GetLastErrorCode
 2034              		.thumb
 2035              		.thumb_func
 2037              	CAN_GetLastErrorCode:
 2038              	.LFB126:
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2039              		.loc 1 1036 0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 16
 2042              		@ frame_needed = 1, uses_anonymous_args = 0
 2043              		@ link register save eliminated.
 2044 0000 80B4     		push	{r7}
 2045              	.LCFI48:
 2046              		.cfi_def_cfa_offset 4
 2047              		.cfi_offset 7, -4
 2048 0002 85B0     		sub	sp, sp, #20
 2049              	.LCFI49:
 2050              		.cfi_def_cfa_offset 24
 2051 0004 00AF     		add	r7, sp, #0
 2052              	.LCFI50:
 2053              		.cfi_def_cfa_register 7
 2054 0006 7860     		str	r0, [r7, #4]
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
 2055              		.loc 1 1037 0
 2056 0008 0023     		movs	r3, #0
 2057 000a FB73     		strb	r3, [r7, #15]
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 2058              		.loc 1 1043 0
 2059 000c 7B68     		ldr	r3, [r7, #4]
 2060 000e 9B69     		ldr	r3, [r3, #24]
 2061 0010 DBB2     		uxtb	r3, r3
 2062 0012 03F07003 		and	r3, r3, #112
 2063 0016 FB73     		strb	r3, [r7, #15]
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
 2064              		.loc 1 1046 0
 2065 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2066              		.loc 1 1047 0
 2067 001a 1846     		mov	r0, r3
 2068 001c 1437     		adds	r7, r7, #20
 2069 001e BD46     		mov	sp, r7
 2070              		@ sp needed
 2071 0020 5DF8047B 		ldr	r7, [sp], #4
 2072 0024 7047     		bx	lr
 2073              		.cfi_endproc
 2074              	.LFE126:
 2076 0026 00BF     		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 2077              		.align	2
 2078              		.global	CAN_GetReceiveErrorCounter
 2079              		.thumb
 2080              		.thumb_func
 2082              	CAN_GetReceiveErrorCounter:
 2083              	.LFB127:
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2084              		.loc 1 1061 0
 2085              		.cfi_startproc
 2086              		@ args = 0, pretend = 0, frame = 16
 2087              		@ frame_needed = 1, uses_anonymous_args = 0
 2088              		@ link register save eliminated.
 2089 0000 80B4     		push	{r7}
 2090              	.LCFI51:
 2091              		.cfi_def_cfa_offset 4
 2092              		.cfi_offset 7, -4
 2093 0002 85B0     		sub	sp, sp, #20
 2094              	.LCFI52:
 2095              		.cfi_def_cfa_offset 24
 2096 0004 00AF     		add	r7, sp, #0
 2097              	.LCFI53:
 2098              		.cfi_def_cfa_register 7
 2099 0006 7860     		str	r0, [r7, #4]
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2100              		.loc 1 1062 0
 2101 0008 0023     		movs	r3, #0
 2102 000a FB73     		strb	r3, [r7, #15]
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 2103              		.loc 1 1068 0
 2104 000c 7B68     		ldr	r3, [r7, #4]
 2105 000e 9B69     		ldr	r3, [r3, #24]
 2106 0010 1B0E     		lsrs	r3, r3, #24
 2107 0012 FB73     		strb	r3, [r7, #15]
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2108              		.loc 1 1071 0
 2109 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2110              		.loc 1 1072 0
 2111 0016 1846     		mov	r0, r3
 2112 0018 1437     		adds	r7, r7, #20
 2113 001a BD46     		mov	sp, r7
 2114              		@ sp needed
 2115 001c 5DF8047B 		ldr	r7, [sp], #4
 2116 0020 7047     		bx	lr
 2117              		.cfi_endproc
 2118              	.LFE127:
 2120 0022 00BF     		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 2121              		.align	2
 2122              		.global	CAN_GetLSBTransmitErrorCounter
 2123              		.thumb
 2124              		.thumb_func
 2126              	CAN_GetLSBTransmitErrorCounter:
 2127              	.LFB128:
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2128              		.loc 1 1081 0
 2129              		.cfi_startproc
 2130              		@ args = 0, pretend = 0, frame = 16
 2131              		@ frame_needed = 1, uses_anonymous_args = 0
 2132              		@ link register save eliminated.
 2133 0000 80B4     		push	{r7}
 2134              	.LCFI54:
 2135              		.cfi_def_cfa_offset 4
 2136              		.cfi_offset 7, -4
 2137 0002 85B0     		sub	sp, sp, #20
 2138              	.LCFI55:
 2139              		.cfi_def_cfa_offset 24
 2140 0004 00AF     		add	r7, sp, #0
 2141              	.LCFI56:
 2142              		.cfi_def_cfa_register 7
 2143 0006 7860     		str	r0, [r7, #4]
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2144              		.loc 1 1082 0
 2145 0008 0023     		movs	r3, #0
 2146 000a FB73     		strb	r3, [r7, #15]
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 2147              		.loc 1 1088 0
 2148 000c 7B68     		ldr	r3, [r7, #4]
 2149 000e 9B69     		ldr	r3, [r3, #24]
 2150 0010 03F47F03 		and	r3, r3, #16711680
 2151 0014 1B0C     		lsrs	r3, r3, #16
 2152 0016 FB73     		strb	r3, [r7, #15]
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2153              		.loc 1 1091 0
 2154 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2155              		.loc 1 1092 0
 2156 001a 1846     		mov	r0, r3
 2157 001c 1437     		adds	r7, r7, #20
 2158 001e BD46     		mov	sp, r7
 2159              		@ sp needed
 2160 0020 5DF8047B 		ldr	r7, [sp], #4
 2161 0024 7047     		bx	lr
 2162              		.cfi_endproc
 2163              	.LFE128:
 2165 0026 00BF     		.section	.text.CAN_ITConfig,"ax",%progbits
 2166              		.align	2
 2167              		.global	CAN_ITConfig
 2168              		.thumb
 2169              		.thumb_func
 2171              	CAN_ITConfig:
 2172              	.LFB129:
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2173              		.loc 1 1288 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 16
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177              		@ link register save eliminated.
 2178 0000 80B4     		push	{r7}
 2179              	.LCFI57:
 2180              		.cfi_def_cfa_offset 4
 2181              		.cfi_offset 7, -4
 2182 0002 85B0     		sub	sp, sp, #20
 2183              	.LCFI58:
 2184              		.cfi_def_cfa_offset 24
 2185 0004 00AF     		add	r7, sp, #0
 2186              	.LCFI59:
 2187              		.cfi_def_cfa_register 7
 2188 0006 F860     		str	r0, [r7, #12]
 2189 0008 B960     		str	r1, [r7, #8]
 2190 000a 1346     		mov	r3, r2
 2191 000c FB71     		strb	r3, [r7, #7]
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 2192              		.loc 1 1294 0
 2193 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2194 0010 002B     		cmp	r3, #0
 2195 0012 06D0     		beq	.L134
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 2196              		.loc 1 1297 0
 2197 0014 FB68     		ldr	r3, [r7, #12]
 2198 0016 5A69     		ldr	r2, [r3, #20]
 2199 0018 BB68     		ldr	r3, [r7, #8]
 2200 001a 1A43     		orrs	r2, r2, r3
 2201 001c FB68     		ldr	r3, [r7, #12]
 2202 001e 5A61     		str	r2, [r3, #20]
 2203 0020 06E0     		b	.L133
 2204              	.L134:
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 2205              		.loc 1 1302 0
 2206 0022 FB68     		ldr	r3, [r7, #12]
 2207 0024 5A69     		ldr	r2, [r3, #20]
 2208 0026 BB68     		ldr	r3, [r7, #8]
 2209 0028 DB43     		mvns	r3, r3
 2210 002a 1A40     		ands	r2, r2, r3
 2211 002c FB68     		ldr	r3, [r7, #12]
 2212 002e 5A61     		str	r2, [r3, #20]
 2213              	.L133:
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2214              		.loc 1 1304 0
 2215 0030 1437     		adds	r7, r7, #20
 2216 0032 BD46     		mov	sp, r7
 2217              		@ sp needed
 2218 0034 5DF8047B 		ldr	r7, [sp], #4
 2219 0038 7047     		bx	lr
 2220              		.cfi_endproc
 2221              	.LFE129:
 2223 003a 00BF     		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 2224              		.align	2
 2225              		.global	CAN_GetFlagStatus
 2226              		.thumb
 2227              		.thumb_func
 2229              	CAN_GetFlagStatus:
 2230              	.LFB130:
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2231              		.loc 1 1328 0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 16
 2234              		@ frame_needed = 1, uses_anonymous_args = 0
 2235              		@ link register save eliminated.
 2236 0000 80B4     		push	{r7}
 2237              	.LCFI60:
 2238              		.cfi_def_cfa_offset 4
 2239              		.cfi_offset 7, -4
 2240 0002 85B0     		sub	sp, sp, #20
 2241              	.LCFI61:
 2242              		.cfi_def_cfa_offset 24
 2243 0004 00AF     		add	r7, sp, #0
 2244              	.LCFI62:
 2245              		.cfi_def_cfa_register 7
 2246 0006 7860     		str	r0, [r7, #4]
 2247 0008 3960     		str	r1, [r7]
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 2248              		.loc 1 1329 0
 2249 000a 0023     		movs	r3, #0
 2250 000c FB73     		strb	r3, [r7, #15]
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 2251              		.loc 1 1336 0
 2252 000e 3B68     		ldr	r3, [r7]
 2253 0010 03F47003 		and	r3, r3, #15728640
 2254 0014 002B     		cmp	r3, #0
 2255 0016 0DD0     		beq	.L137
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2256              		.loc 1 1339 0
 2257 0018 7B68     		ldr	r3, [r7, #4]
 2258 001a 9A69     		ldr	r2, [r3, #24]
 2259 001c 3B68     		ldr	r3, [r7]
 2260 001e 1340     		ands	r3, r3, r2
 2261 0020 C3F31303 		ubfx	r3, r3, #0, #20
 2262 0024 002B     		cmp	r3, #0
 2263 0026 02D0     		beq	.L138
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2264              		.loc 1 1342 0
 2265 0028 0123     		movs	r3, #1
 2266 002a FB73     		strb	r3, [r7, #15]
 2267 002c 48E0     		b	.L140
 2268              	.L138:
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2269              		.loc 1 1347 0
 2270 002e 0023     		movs	r3, #0
 2271 0030 FB73     		strb	r3, [r7, #15]
 2272 0032 45E0     		b	.L140
 2273              	.L137:
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 2274              		.loc 1 1350 0
 2275 0034 3B68     		ldr	r3, [r7]
 2276 0036 03F08073 		and	r3, r3, #16777216
 2277 003a 002B     		cmp	r3, #0
 2278 003c 0DD0     		beq	.L141
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2279              		.loc 1 1353 0
 2280 003e 7B68     		ldr	r3, [r7, #4]
 2281 0040 5A68     		ldr	r2, [r3, #4]
 2282 0042 3B68     		ldr	r3, [r7]
 2283 0044 1340     		ands	r3, r3, r2
 2284 0046 C3F31303 		ubfx	r3, r3, #0, #20
 2285 004a 002B     		cmp	r3, #0
 2286 004c 02D0     		beq	.L142
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2287              		.loc 1 1356 0
 2288 004e 0123     		movs	r3, #1
 2289 0050 FB73     		strb	r3, [r7, #15]
 2290 0052 35E0     		b	.L140
 2291              	.L142:
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2292              		.loc 1 1361 0
 2293 0054 0023     		movs	r3, #0
 2294 0056 FB73     		strb	r3, [r7, #15]
 2295 0058 32E0     		b	.L140
 2296              	.L141:
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 2297              		.loc 1 1364 0
 2298 005a 3B68     		ldr	r3, [r7]
 2299 005c 03F00063 		and	r3, r3, #134217728
 2300 0060 002B     		cmp	r3, #0
 2301 0062 0DD0     		beq	.L144
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2302              		.loc 1 1367 0
 2303 0064 7B68     		ldr	r3, [r7, #4]
 2304 0066 9A68     		ldr	r2, [r3, #8]
 2305 0068 3B68     		ldr	r3, [r7]
 2306 006a 1340     		ands	r3, r3, r2
 2307 006c C3F31303 		ubfx	r3, r3, #0, #20
 2308 0070 002B     		cmp	r3, #0
 2309 0072 02D0     		beq	.L145
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2310              		.loc 1 1370 0
 2311 0074 0123     		movs	r3, #1
 2312 0076 FB73     		strb	r3, [r7, #15]
 2313 0078 22E0     		b	.L140
 2314              	.L145:
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2315              		.loc 1 1375 0
 2316 007a 0023     		movs	r3, #0
 2317 007c FB73     		strb	r3, [r7, #15]
 2318 007e 1FE0     		b	.L140
 2319              	.L144:
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 2320              		.loc 1 1378 0
 2321 0080 3B68     		ldr	r3, [r7]
 2322 0082 03F00073 		and	r3, r3, #33554432
 2323 0086 002B     		cmp	r3, #0
 2324 0088 0DD0     		beq	.L147
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2325              		.loc 1 1381 0
 2326 008a 7B68     		ldr	r3, [r7, #4]
 2327 008c DA68     		ldr	r2, [r3, #12]
 2328 008e 3B68     		ldr	r3, [r7]
 2329 0090 1340     		ands	r3, r3, r2
 2330 0092 C3F31303 		ubfx	r3, r3, #0, #20
 2331 0096 002B     		cmp	r3, #0
 2332 0098 02D0     		beq	.L148
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2333              		.loc 1 1384 0
 2334 009a 0123     		movs	r3, #1
 2335 009c FB73     		strb	r3, [r7, #15]
 2336 009e 0FE0     		b	.L140
 2337              	.L148:
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2338              		.loc 1 1389 0
 2339 00a0 0023     		movs	r3, #0
 2340 00a2 FB73     		strb	r3, [r7, #15]
 2341 00a4 0CE0     		b	.L140
 2342              	.L147:
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2343              		.loc 1 1395 0
 2344 00a6 7B68     		ldr	r3, [r7, #4]
 2345 00a8 1A69     		ldr	r2, [r3, #16]
 2346 00aa 3B68     		ldr	r3, [r7]
 2347 00ac 1340     		ands	r3, r3, r2
 2348 00ae C3F31303 		ubfx	r3, r3, #0, #20
 2349 00b2 002B     		cmp	r3, #0
 2350 00b4 02D0     		beq	.L150
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2351              		.loc 1 1398 0
 2352 00b6 0123     		movs	r3, #1
 2353 00b8 FB73     		strb	r3, [r7, #15]
 2354 00ba 01E0     		b	.L140
 2355              	.L150:
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2356              		.loc 1 1403 0
 2357 00bc 0023     		movs	r3, #0
 2358 00be FB73     		strb	r3, [r7, #15]
 2359              	.L140:
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
 2360              		.loc 1 1407 0
 2361 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2362              		.loc 1 1408 0
 2363 00c2 1846     		mov	r0, r3
 2364 00c4 1437     		adds	r7, r7, #20
 2365 00c6 BD46     		mov	sp, r7
 2366              		@ sp needed
 2367 00c8 5DF8047B 		ldr	r7, [sp], #4
 2368 00cc 7047     		bx	lr
 2369              		.cfi_endproc
 2370              	.LFE130:
 2372 00ce 00BF     		.section	.text.CAN_ClearFlag,"ax",%progbits
 2373              		.align	2
 2374              		.global	CAN_ClearFlag
 2375              		.thumb
 2376              		.thumb_func
 2378              	CAN_ClearFlag:
 2379              	.LFB131:
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2380              		.loc 1 1428 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 16
 2383              		@ frame_needed = 1, uses_anonymous_args = 0
 2384              		@ link register save eliminated.
 2385 0000 80B4     		push	{r7}
 2386              	.LCFI63:
 2387              		.cfi_def_cfa_offset 4
 2388              		.cfi_offset 7, -4
 2389 0002 85B0     		sub	sp, sp, #20
 2390              	.LCFI64:
 2391              		.cfi_def_cfa_offset 24
 2392 0004 00AF     		add	r7, sp, #0
 2393              	.LCFI65:
 2394              		.cfi_def_cfa_register 7
 2395 0006 7860     		str	r0, [r7, #4]
 2396 0008 3960     		str	r1, [r7]
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 2397              		.loc 1 1429 0
 2398 000a 0023     		movs	r3, #0
 2399 000c FB60     		str	r3, [r7, #12]
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 2400              		.loc 1 1434 0
 2401 000e 3A68     		ldr	r2, [r7]
 2402 0010 164B     		ldr	r3, .L158
 2403 0012 9A42     		cmp	r2, r3
 2404 0014 03D1     		bne	.L153
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 2405              		.loc 1 1437 0
 2406 0016 7B68     		ldr	r3, [r7, #4]
 2407 0018 0022     		movs	r2, #0
 2408 001a 9A61     		str	r2, [r3, #24]
 2409 001c 21E0     		b	.L152
 2410              	.L153:
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 2411              		.loc 1 1441 0
 2412 001e 3B68     		ldr	r3, [r7]
 2413 0020 C3F31303 		ubfx	r3, r3, #0, #20
 2414 0024 FB60     		str	r3, [r7, #12]
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 2415              		.loc 1 1443 0
 2416 0026 3B68     		ldr	r3, [r7]
 2417 0028 03F00073 		and	r3, r3, #33554432
 2418 002c 002B     		cmp	r3, #0
 2419 002e 03D0     		beq	.L155
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 2420              		.loc 1 1446 0
 2421 0030 7B68     		ldr	r3, [r7, #4]
 2422 0032 FA68     		ldr	r2, [r7, #12]
 2423 0034 DA60     		str	r2, [r3, #12]
 2424 0036 14E0     		b	.L152
 2425              	.L155:
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 2426              		.loc 1 1448 0
 2427 0038 3B68     		ldr	r3, [r7]
 2428 003a 03F08063 		and	r3, r3, #67108864
 2429 003e 002B     		cmp	r3, #0
 2430 0040 03D0     		beq	.L156
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 2431              		.loc 1 1451 0
 2432 0042 7B68     		ldr	r3, [r7, #4]
 2433 0044 FA68     		ldr	r2, [r7, #12]
 2434 0046 1A61     		str	r2, [r3, #16]
 2435 0048 0BE0     		b	.L152
 2436              	.L156:
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 2437              		.loc 1 1453 0
 2438 004a 3B68     		ldr	r3, [r7]
 2439 004c 03F00063 		and	r3, r3, #134217728
 2440 0050 002B     		cmp	r3, #0
 2441 0052 03D0     		beq	.L157
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 2442              		.loc 1 1456 0
 2443 0054 7B68     		ldr	r3, [r7, #4]
 2444 0056 FA68     		ldr	r2, [r7, #12]
 2445 0058 9A60     		str	r2, [r3, #8]
 2446 005a 02E0     		b	.L152
 2447              	.L157:
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 2448              		.loc 1 1461 0
 2449 005c 7B68     		ldr	r3, [r7, #4]
 2450 005e FA68     		ldr	r2, [r7, #12]
 2451 0060 5A60     		str	r2, [r3, #4]
 2452              	.L152:
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2453              		.loc 1 1464 0
 2454 0062 1437     		adds	r7, r7, #20
 2455 0064 BD46     		mov	sp, r7
 2456              		@ sp needed
 2457 0066 5DF8047B 		ldr	r7, [sp], #4
 2458 006a 7047     		bx	lr
 2459              	.L159:
 2460              		.align	2
 2461              	.L158:
 2462 006c 7000F030 		.word	821035120
 2463              		.cfi_endproc
 2464              	.LFE131:
 2466              		.section	.text.CAN_GetITStatus,"ax",%progbits
 2467              		.align	2
 2468              		.global	CAN_GetITStatus
 2469              		.thumb
 2470              		.thumb_func
 2472              	CAN_GetITStatus:
 2473              	.LFB132:
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2474              		.loc 1 1488 0
 2475              		.cfi_startproc
 2476              		@ args = 0, pretend = 0, frame = 16
 2477              		@ frame_needed = 1, uses_anonymous_args = 0
 2478 0000 80B5     		push	{r7, lr}
 2479              	.LCFI66:
 2480              		.cfi_def_cfa_offset 8
 2481              		.cfi_offset 7, -8
 2482              		.cfi_offset 14, -4
 2483 0002 84B0     		sub	sp, sp, #16
 2484              	.LCFI67:
 2485              		.cfi_def_cfa_offset 24
 2486 0004 00AF     		add	r7, sp, #0
 2487              	.LCFI68:
 2488              		.cfi_def_cfa_register 7
 2489 0006 7860     		str	r0, [r7, #4]
 2490 0008 3960     		str	r1, [r7]
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 2491              		.loc 1 1489 0
 2492 000a 0023     		movs	r3, #0
 2493 000c FB73     		strb	r3, [r7, #15]
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 2494              		.loc 1 1495 0
 2495 000e 7B68     		ldr	r3, [r7, #4]
 2496 0010 5A69     		ldr	r2, [r3, #20]
 2497 0012 3B68     		ldr	r3, [r7]
 2498 0014 1340     		ands	r3, r3, r2
 2499 0016 002B     		cmp	r3, #0
 2500 0018 00F0B280 		beq	.L161
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 2501              		.loc 1 1498 0
 2502 001c 3B68     		ldr	r3, [r7]
 2503 001e 402B     		cmp	r3, #64
 2504 0020 62D0     		beq	.L163
 2505 0022 402B     		cmp	r3, #64
 2506 0024 0FD8     		bhi	.L164
 2507 0026 042B     		cmp	r3, #4
 2508 0028 3AD0     		beq	.L165
 2509 002a 042B     		cmp	r3, #4
 2510 002c 04D8     		bhi	.L166
 2511 002e 012B     		cmp	r3, #1
 2512 0030 24D0     		beq	.L167
 2513 0032 022B     		cmp	r3, #2
 2514 0034 2BD0     		beq	.L168
 2515 0036 9FE0     		b	.L162
 2516              	.L166:
 2517 0038 102B     		cmp	r3, #16
 2518 003a 43D0     		beq	.L169
 2519 003c 202B     		cmp	r3, #32
 2520 003e 4AD0     		beq	.L170
 2521 0040 082B     		cmp	r3, #8
 2522 0042 36D0     		beq	.L171
 2523 0044 98E0     		b	.L162
 2524              	.L164:
 2525 0046 B3F5006F 		cmp	r3, #2048
 2526 004a 00F08380 		beq	.L172
 2527 004e B3F5006F 		cmp	r3, #2048
 2528 0052 09D8     		bhi	.L173
 2529 0054 B3F5007F 		cmp	r3, #512
 2530 0058 6AD0     		beq	.L174
 2531 005a B3F5806F 		cmp	r3, #1024
 2532 005e 70D0     		beq	.L175
 2533 0060 B3F5807F 		cmp	r3, #256
 2534 0064 5BD0     		beq	.L176
 2535 0066 87E0     		b	.L162
 2536              	.L173:
 2537 0068 B3F5803F 		cmp	r3, #65536
 2538 006c 45D0     		beq	.L177
 2539 006e B3F5003F 		cmp	r3, #131072
 2540 0072 4BD0     		beq	.L178
 2541 0074 B3F5004F 		cmp	r3, #32768
 2542 0078 75D0     		beq	.L179
 2543 007a 7DE0     		b	.L162
 2544              	.L167:
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 2545              		.loc 1 1502 0
 2546 007c 7B68     		ldr	r3, [r7, #4]
 2547 007e 9B68     		ldr	r3, [r3, #8]
 2548 0080 1846     		mov	r0, r3
 2549 0082 4349     		ldr	r1, .L183
 2550 0084 FFF7FEFF 		bl	CheckITStatus
 2551 0088 0346     		mov	r3, r0
 2552 008a FB73     		strb	r3, [r7, #15]
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2553              		.loc 1 1503 0
 2554 008c 77E0     		b	.L180
 2555              	.L168:
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 2556              		.loc 1 1506 0
 2557 008e 7B68     		ldr	r3, [r7, #4]
 2558 0090 DB68     		ldr	r3, [r3, #12]
 2559 0092 1846     		mov	r0, r3
 2560 0094 0321     		movs	r1, #3
 2561 0096 FFF7FEFF 		bl	CheckITStatus
 2562 009a 0346     		mov	r3, r0
 2563 009c FB73     		strb	r3, [r7, #15]
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2564              		.loc 1 1507 0
 2565 009e 6EE0     		b	.L180
 2566              	.L165:
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 2567              		.loc 1 1510 0
 2568 00a0 7B68     		ldr	r3, [r7, #4]
 2569 00a2 DB68     		ldr	r3, [r3, #12]
 2570 00a4 1846     		mov	r0, r3
 2571 00a6 0821     		movs	r1, #8
 2572 00a8 FFF7FEFF 		bl	CheckITStatus
 2573 00ac 0346     		mov	r3, r0
 2574 00ae FB73     		strb	r3, [r7, #15]
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2575              		.loc 1 1511 0
 2576 00b0 65E0     		b	.L180
 2577              	.L171:
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 2578              		.loc 1 1514 0
 2579 00b2 7B68     		ldr	r3, [r7, #4]
 2580 00b4 DB68     		ldr	r3, [r3, #12]
 2581 00b6 1846     		mov	r0, r3
 2582 00b8 1021     		movs	r1, #16
 2583 00ba FFF7FEFF 		bl	CheckITStatus
 2584 00be 0346     		mov	r3, r0
 2585 00c0 FB73     		strb	r3, [r7, #15]
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2586              		.loc 1 1515 0
 2587 00c2 5CE0     		b	.L180
 2588              	.L169:
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 2589              		.loc 1 1518 0
 2590 00c4 7B68     		ldr	r3, [r7, #4]
 2591 00c6 1B69     		ldr	r3, [r3, #16]
 2592 00c8 1846     		mov	r0, r3
 2593 00ca 0321     		movs	r1, #3
 2594 00cc FFF7FEFF 		bl	CheckITStatus
 2595 00d0 0346     		mov	r3, r0
 2596 00d2 FB73     		strb	r3, [r7, #15]
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2597              		.loc 1 1519 0
 2598 00d4 53E0     		b	.L180
 2599              	.L170:
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 2600              		.loc 1 1522 0
 2601 00d6 7B68     		ldr	r3, [r7, #4]
 2602 00d8 1B69     		ldr	r3, [r3, #16]
 2603 00da 1846     		mov	r0, r3
 2604 00dc 0821     		movs	r1, #8
 2605 00de FFF7FEFF 		bl	CheckITStatus
 2606 00e2 0346     		mov	r3, r0
 2607 00e4 FB73     		strb	r3, [r7, #15]
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2608              		.loc 1 1523 0
 2609 00e6 4AE0     		b	.L180
 2610              	.L163:
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 2611              		.loc 1 1526 0
 2612 00e8 7B68     		ldr	r3, [r7, #4]
 2613 00ea 1B69     		ldr	r3, [r3, #16]
 2614 00ec 1846     		mov	r0, r3
 2615 00ee 1021     		movs	r1, #16
 2616 00f0 FFF7FEFF 		bl	CheckITStatus
 2617 00f4 0346     		mov	r3, r0
 2618 00f6 FB73     		strb	r3, [r7, #15]
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2619              		.loc 1 1527 0
 2620 00f8 41E0     		b	.L180
 2621              	.L177:
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 2622              		.loc 1 1530 0
 2623 00fa 7B68     		ldr	r3, [r7, #4]
 2624 00fc 5B68     		ldr	r3, [r3, #4]
 2625 00fe 1846     		mov	r0, r3
 2626 0100 0821     		movs	r1, #8
 2627 0102 FFF7FEFF 		bl	CheckITStatus
 2628 0106 0346     		mov	r3, r0
 2629 0108 FB73     		strb	r3, [r7, #15]
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2630              		.loc 1 1531 0
 2631 010a 38E0     		b	.L180
 2632              	.L178:
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 2633              		.loc 1 1534 0
 2634 010c 7B68     		ldr	r3, [r7, #4]
 2635 010e 5B68     		ldr	r3, [r3, #4]
 2636 0110 1846     		mov	r0, r3
 2637 0112 1021     		movs	r1, #16
 2638 0114 FFF7FEFF 		bl	CheckITStatus
 2639 0118 0346     		mov	r3, r0
 2640 011a FB73     		strb	r3, [r7, #15]
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2641              		.loc 1 1535 0
 2642 011c 2FE0     		b	.L180
 2643              	.L176:
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 2644              		.loc 1 1538 0
 2645 011e 7B68     		ldr	r3, [r7, #4]
 2646 0120 9B69     		ldr	r3, [r3, #24]
 2647 0122 1846     		mov	r0, r3
 2648 0124 0121     		movs	r1, #1
 2649 0126 FFF7FEFF 		bl	CheckITStatus
 2650 012a 0346     		mov	r3, r0
 2651 012c FB73     		strb	r3, [r7, #15]
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2652              		.loc 1 1539 0
 2653 012e 26E0     		b	.L180
 2654              	.L174:
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 2655              		.loc 1 1542 0
 2656 0130 7B68     		ldr	r3, [r7, #4]
 2657 0132 9B69     		ldr	r3, [r3, #24]
 2658 0134 1846     		mov	r0, r3
 2659 0136 0221     		movs	r1, #2
 2660 0138 FFF7FEFF 		bl	CheckITStatus
 2661 013c 0346     		mov	r3, r0
 2662 013e FB73     		strb	r3, [r7, #15]
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2663              		.loc 1 1543 0
 2664 0140 1DE0     		b	.L180
 2665              	.L175:
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 2666              		.loc 1 1546 0
 2667 0142 7B68     		ldr	r3, [r7, #4]
 2668 0144 9B69     		ldr	r3, [r3, #24]
 2669 0146 1846     		mov	r0, r3
 2670 0148 0421     		movs	r1, #4
 2671 014a FFF7FEFF 		bl	CheckITStatus
 2672 014e 0346     		mov	r3, r0
 2673 0150 FB73     		strb	r3, [r7, #15]
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2674              		.loc 1 1547 0
 2675 0152 14E0     		b	.L180
 2676              	.L172:
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 2677              		.loc 1 1550 0
 2678 0154 7B68     		ldr	r3, [r7, #4]
 2679 0156 9B69     		ldr	r3, [r3, #24]
 2680 0158 1846     		mov	r0, r3
 2681 015a 7021     		movs	r1, #112
 2682 015c FFF7FEFF 		bl	CheckITStatus
 2683 0160 0346     		mov	r3, r0
 2684 0162 FB73     		strb	r3, [r7, #15]
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2685              		.loc 1 1551 0
 2686 0164 0BE0     		b	.L180
 2687              	.L179:
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 2688              		.loc 1 1554 0
 2689 0166 7B68     		ldr	r3, [r7, #4]
 2690 0168 5B68     		ldr	r3, [r3, #4]
 2691 016a 1846     		mov	r0, r3
 2692 016c 0421     		movs	r1, #4
 2693 016e FFF7FEFF 		bl	CheckITStatus
 2694 0172 0346     		mov	r3, r0
 2695 0174 FB73     		strb	r3, [r7, #15]
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2696              		.loc 1 1555 0
 2697 0176 02E0     		b	.L180
 2698              	.L162:
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 2699              		.loc 1 1558 0
 2700 0178 0023     		movs	r3, #0
 2701 017a FB73     		strb	r3, [r7, #15]
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2702              		.loc 1 1559 0
 2703 017c 00BF     		nop
 2704              	.L180:
 2705 017e 01E0     		b	.L181
 2706              	.L161:
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
 2707              		.loc 1 1565 0
 2708 0180 0023     		movs	r3, #0
 2709 0182 FB73     		strb	r3, [r7, #15]
 2710              	.L181:
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
 2711              		.loc 1 1569 0
 2712 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2713              		.loc 1 1570 0
 2714 0186 1846     		mov	r0, r3
 2715 0188 1037     		adds	r7, r7, #16
 2716 018a BD46     		mov	sp, r7
 2717              		@ sp needed
 2718 018c 80BD     		pop	{r7, pc}
 2719              	.L184:
 2720 018e 00BF     		.align	2
 2721              	.L183:
 2722 0190 01010100 		.word	65793
 2723              		.cfi_endproc
 2724              	.LFE132:
 2726              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 2727              		.align	2
 2728              		.global	CAN_ClearITPendingBit
 2729              		.thumb
 2730              		.thumb_func
 2732              	CAN_ClearITPendingBit:
 2733              	.LFB133:
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2734              		.loc 1 1592 0
 2735              		.cfi_startproc
 2736              		@ args = 0, pretend = 0, frame = 8
 2737              		@ frame_needed = 1, uses_anonymous_args = 0
 2738              		@ link register save eliminated.
 2739 0000 80B4     		push	{r7}
 2740              	.LCFI69:
 2741              		.cfi_def_cfa_offset 4
 2742              		.cfi_offset 7, -4
 2743 0002 83B0     		sub	sp, sp, #12
 2744              	.LCFI70:
 2745              		.cfi_def_cfa_offset 16
 2746 0004 00AF     		add	r7, sp, #0
 2747              	.LCFI71:
 2748              		.cfi_def_cfa_register 7
 2749 0006 7860     		str	r0, [r7, #4]
 2750 0008 3960     		str	r1, [r7]
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2751              		.loc 1 1597 0
 2752 000a 3B68     		ldr	r3, [r7]
 2753 000c B3F5807F 		cmp	r3, #256
 2754 0010 43D0     		beq	.L187
 2755 0012 B3F5807F 		cmp	r3, #256
 2756 0016 0DD8     		bhi	.L188
 2757 0018 082B     		cmp	r3, #8
 2758 001a 2AD0     		beq	.L189
 2759 001c 082B     		cmp	r3, #8
 2760 001e 04D8     		bhi	.L190
 2761 0020 012B     		cmp	r3, #1
 2762 0022 1ED0     		beq	.L191
 2763 0024 042B     		cmp	r3, #4
 2764 0026 20D0     		beq	.L192
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2765              		.loc 1 1656 0
 2766 0028 51E0     		b	.L185
 2767              	.L190:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2768              		.loc 1 1597 0
 2769 002a 202B     		cmp	r3, #32
 2770 002c 25D0     		beq	.L193
 2771 002e 402B     		cmp	r3, #64
 2772 0030 27D0     		beq	.L194
 2773              		.loc 1 1656 0
 2774 0032 4CE0     		b	.L185
 2775              	.L188:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2776              		.loc 1 1597 0
 2777 0034 B3F5006F 		cmp	r3, #2048
 2778 0038 3BD0     		beq	.L195
 2779 003a B3F5006F 		cmp	r3, #2048
 2780 003e 06D8     		bhi	.L196
 2781 0040 B3F5007F 		cmp	r3, #512
 2782 0044 2DD0     		beq	.L197
 2783 0046 B3F5806F 		cmp	r3, #1024
 2784 004a 2ED0     		beq	.L198
 2785              		.loc 1 1656 0
 2786 004c 3FE0     		b	.L185
 2787              	.L196:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2788              		.loc 1 1597 0
 2789 004e B3F5803F 		cmp	r3, #65536
 2790 0052 1AD0     		beq	.L199
 2791 0054 B3F5003F 		cmp	r3, #131072
 2792 0058 1BD0     		beq	.L200
 2793 005a B3F5004F 		cmp	r3, #32768
 2794 005e 2FD0     		beq	.L201
 2795              		.loc 1 1656 0
 2796 0060 35E0     		b	.L185
 2797              	.L191:
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
 2798              		.loc 1 1601 0
 2799 0062 7B68     		ldr	r3, [r7, #4]
 2800 0064 1C4A     		ldr	r2, .L203
 2801 0066 9A60     		str	r2, [r3, #8]
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2802              		.loc 1 1602 0
 2803 0068 31E0     		b	.L185
 2804              	.L192:
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
 2805              		.loc 1 1605 0
 2806 006a 7B68     		ldr	r3, [r7, #4]
 2807 006c 0822     		movs	r2, #8
 2808 006e DA60     		str	r2, [r3, #12]
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2809              		.loc 1 1606 0
 2810 0070 2DE0     		b	.L185
 2811              	.L189:
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
 2812              		.loc 1 1609 0
 2813 0072 7B68     		ldr	r3, [r7, #4]
 2814 0074 1022     		movs	r2, #16
 2815 0076 DA60     		str	r2, [r3, #12]
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2816              		.loc 1 1610 0
 2817 0078 29E0     		b	.L185
 2818              	.L193:
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
 2819              		.loc 1 1613 0
 2820 007a 7B68     		ldr	r3, [r7, #4]
 2821 007c 0822     		movs	r2, #8
 2822 007e 1A61     		str	r2, [r3, #16]
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2823              		.loc 1 1614 0
 2824 0080 25E0     		b	.L185
 2825              	.L194:
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
 2826              		.loc 1 1617 0
 2827 0082 7B68     		ldr	r3, [r7, #4]
 2828 0084 1022     		movs	r2, #16
 2829 0086 1A61     		str	r2, [r3, #16]
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2830              		.loc 1 1618 0
 2831 0088 21E0     		b	.L185
 2832              	.L199:
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
 2833              		.loc 1 1621 0
 2834 008a 7B68     		ldr	r3, [r7, #4]
 2835 008c 0822     		movs	r2, #8
 2836 008e 5A60     		str	r2, [r3, #4]
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2837              		.loc 1 1622 0
 2838 0090 1DE0     		b	.L185
 2839              	.L200:
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
 2840              		.loc 1 1625 0
 2841 0092 7B68     		ldr	r3, [r7, #4]
 2842 0094 1022     		movs	r2, #16
 2843 0096 5A60     		str	r2, [r3, #4]
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2844              		.loc 1 1626 0
 2845 0098 19E0     		b	.L185
 2846              	.L187:
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
 2847              		.loc 1 1629 0
 2848 009a 7B68     		ldr	r3, [r7, #4]
 2849 009c 0422     		movs	r2, #4
 2850 009e 5A60     		str	r2, [r3, #4]
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2851              		.loc 1 1631 0
 2852 00a0 15E0     		b	.L185
 2853              	.L197:
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2854              		.loc 1 1634 0
 2855 00a2 7B68     		ldr	r3, [r7, #4]
 2856 00a4 0422     		movs	r2, #4
 2857 00a6 5A60     		str	r2, [r3, #4]
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2858              		.loc 1 1636 0
 2859 00a8 11E0     		b	.L185
 2860              	.L198:
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2861              		.loc 1 1639 0
 2862 00aa 7B68     		ldr	r3, [r7, #4]
 2863 00ac 0422     		movs	r2, #4
 2864 00ae 5A60     		str	r2, [r3, #4]
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2865              		.loc 1 1641 0
 2866 00b0 0DE0     		b	.L185
 2867              	.L195:
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2868              		.loc 1 1644 0
 2869 00b2 7B68     		ldr	r3, [r7, #4]
 2870 00b4 0022     		movs	r2, #0
 2871 00b6 9A61     		str	r2, [r3, #24]
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2872              		.loc 1 1646 0
 2873 00b8 7B68     		ldr	r3, [r7, #4]
 2874 00ba 0422     		movs	r2, #4
 2875 00bc 5A60     		str	r2, [r3, #4]
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2876              		.loc 1 1647 0
 2877 00be 06E0     		b	.L185
 2878              	.L201:
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2879              		.loc 1 1650 0
 2880 00c0 7B68     		ldr	r3, [r7, #4]
 2881 00c2 0022     		movs	r2, #0
 2882 00c4 9A61     		str	r2, [r3, #24]
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2883              		.loc 1 1652 0
 2884 00c6 7B68     		ldr	r3, [r7, #4]
 2885 00c8 0422     		movs	r2, #4
 2886 00ca 5A60     		str	r2, [r3, #4]
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2887              		.loc 1 1654 0
 2888 00cc 00BF     		nop
 2889              	.L185:
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2890              		.loc 1 1658 0
 2891 00ce 0C37     		adds	r7, r7, #12
 2892 00d0 BD46     		mov	sp, r7
 2893              		@ sp needed
 2894 00d2 5DF8047B 		ldr	r7, [sp], #4
 2895 00d6 7047     		bx	lr
 2896              	.L204:
 2897              		.align	2
 2898              	.L203:
 2899 00d8 01010100 		.word	65793
 2900              		.cfi_endproc
 2901              	.LFE133:
 2903              		.section	.text.CheckITStatus,"ax",%progbits
 2904              		.align	2
 2905              		.thumb
 2906              		.thumb_func
 2908              	CheckITStatus:
 2909              	.LFB134:
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2910              		.loc 1 1670 0
 2911              		.cfi_startproc
 2912              		@ args = 0, pretend = 0, frame = 16
 2913              		@ frame_needed = 1, uses_anonymous_args = 0
 2914              		@ link register save eliminated.
 2915 0000 80B4     		push	{r7}
 2916              	.LCFI72:
 2917              		.cfi_def_cfa_offset 4
 2918              		.cfi_offset 7, -4
 2919 0002 85B0     		sub	sp, sp, #20
 2920              	.LCFI73:
 2921              		.cfi_def_cfa_offset 24
 2922 0004 00AF     		add	r7, sp, #0
 2923              	.LCFI74:
 2924              		.cfi_def_cfa_register 7
 2925 0006 7860     		str	r0, [r7, #4]
 2926 0008 3960     		str	r1, [r7]
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
 2927              		.loc 1 1671 0
 2928 000a 0023     		movs	r3, #0
 2929 000c FB73     		strb	r3, [r7, #15]
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 2930              		.loc 1 1673 0
 2931 000e 7A68     		ldr	r2, [r7, #4]
 2932 0010 3B68     		ldr	r3, [r7]
 2933 0012 1340     		ands	r3, r3, r2
 2934 0014 002B     		cmp	r3, #0
 2935 0016 02D0     		beq	.L206
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
 2936              		.loc 1 1676 0
 2937 0018 0123     		movs	r3, #1
 2938 001a FB73     		strb	r3, [r7, #15]
 2939 001c 01E0     		b	.L207
 2940              	.L206:
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 2941              		.loc 1 1681 0
 2942 001e 0023     		movs	r3, #0
 2943 0020 FB73     		strb	r3, [r7, #15]
 2944              	.L207:
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return pendingbitstatus;
 2945              		.loc 1 1683 0
 2946 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2947              		.loc 1 1684 0
 2948 0024 1846     		mov	r0, r3
 2949 0026 1437     		adds	r7, r7, #20
 2950 0028 BD46     		mov	sp, r7
 2951              		@ sp needed
 2952 002a 5DF8047B 		ldr	r7, [sp], #4
 2953 002e 7047     		bx	lr
 2954              		.cfi_endproc
 2955              	.LFE134:
 2957              		.text
 2958              	.Letext0:
 2959              		.file 2 "/home/shihyu/data/STM32F4/gcc-arm-none-eabi-4_8-2013q4/arm-none-eabi/include/stdint.h"
 2960              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 2961              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
 2962              		.file 5 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_can.c
     /tmp/ccYazVYd.s:20     .text.CAN_DeInit:00000000 $t
     /tmp/ccYazVYd.s:25     .text.CAN_DeInit:00000000 CAN_DeInit
     /tmp/ccYazVYd.s:76     .text.CAN_DeInit:00000040 $d
     /tmp/ccYazVYd.s:81     .text.CAN_Init:00000000 $t
     /tmp/ccYazVYd.s:86     .text.CAN_Init:00000000 CAN_Init
     /tmp/ccYazVYd.s:362    .text.CAN_FilterInit:00000000 $t
     /tmp/ccYazVYd.s:367    .text.CAN_FilterInit:00000000 CAN_FilterInit
     /tmp/ccYazVYd.s:581    .text.CAN_FilterInit:00000160 $d
     /tmp/ccYazVYd.s:586    .text.CAN_StructInit:00000000 $t
     /tmp/ccYazVYd.s:591    .text.CAN_StructInit:00000000 CAN_StructInit
     /tmp/ccYazVYd.s:663    .text.CAN_SlaveStartBank:00000000 $t
     /tmp/ccYazVYd.s:668    .text.CAN_SlaveStartBank:00000000 CAN_SlaveStartBank
     /tmp/ccYazVYd.s:723    .text.CAN_SlaveStartBank:0000005c $d
     /tmp/ccYazVYd.s:728    .text.CAN_DBGFreeze:00000000 $t
     /tmp/ccYazVYd.s:733    .text.CAN_DBGFreeze:00000000 CAN_DBGFreeze
     /tmp/ccYazVYd.s:782    .text.CAN_TTComModeCmd:00000000 $t
     /tmp/ccYazVYd.s:787    .text.CAN_TTComModeCmd:00000000 CAN_TTComModeCmd
     /tmp/ccYazVYd.s:872    .text.CAN_Transmit:00000000 $t
     /tmp/ccYazVYd.s:877    .text.CAN_Transmit:00000000 CAN_Transmit
     /tmp/ccYazVYd.s:1133   .text.CAN_TransmitStatus:00000000 $t
     /tmp/ccYazVYd.s:1138   .text.CAN_TransmitStatus:00000000 CAN_TransmitStatus
     /tmp/ccYazVYd.s:1292   .text.CAN_TransmitStatus:000000bc $d
     /tmp/ccYazVYd.s:1302   .text.CAN_CancelTransmit:00000000 $t
     /tmp/ccYazVYd.s:1307   .text.CAN_CancelTransmit:00000000 CAN_CancelTransmit
     /tmp/ccYazVYd.s:1375   .text.CAN_Receive:00000000 $t
     /tmp/ccYazVYd.s:1380   .text.CAN_Receive:00000000 CAN_Receive
     /tmp/ccYazVYd.s:1591   .text.CAN_FIFORelease:00000000 $t
     /tmp/ccYazVYd.s:1596   .text.CAN_FIFORelease:00000000 CAN_FIFORelease
     /tmp/ccYazVYd.s:1645   .text.CAN_MessagePending:00000000 $t
     /tmp/ccYazVYd.s:1650   .text.CAN_MessagePending:00000000 CAN_MessagePending
     /tmp/ccYazVYd.s:1714   .text.CAN_OperatingModeRequest:00000000 $t
     /tmp/ccYazVYd.s:1719   .text.CAN_OperatingModeRequest:00000000 CAN_OperatingModeRequest
     /tmp/ccYazVYd.s:1899   .text.CAN_Sleep:00000000 $t
     /tmp/ccYazVYd.s:1904   .text.CAN_Sleep:00000000 CAN_Sleep
     /tmp/ccYazVYd.s:1955   .text.CAN_WakeUp:00000000 $t
     /tmp/ccYazVYd.s:1960   .text.CAN_WakeUp:00000000 CAN_WakeUp
     /tmp/ccYazVYd.s:2032   .text.CAN_GetLastErrorCode:00000000 $t
     /tmp/ccYazVYd.s:2037   .text.CAN_GetLastErrorCode:00000000 CAN_GetLastErrorCode
     /tmp/ccYazVYd.s:2077   .text.CAN_GetReceiveErrorCounter:00000000 $t
     /tmp/ccYazVYd.s:2082   .text.CAN_GetReceiveErrorCounter:00000000 CAN_GetReceiveErrorCounter
     /tmp/ccYazVYd.s:2121   .text.CAN_GetLSBTransmitErrorCounter:00000000 $t
     /tmp/ccYazVYd.s:2126   .text.CAN_GetLSBTransmitErrorCounter:00000000 CAN_GetLSBTransmitErrorCounter
     /tmp/ccYazVYd.s:2166   .text.CAN_ITConfig:00000000 $t
     /tmp/ccYazVYd.s:2171   .text.CAN_ITConfig:00000000 CAN_ITConfig
     /tmp/ccYazVYd.s:2224   .text.CAN_GetFlagStatus:00000000 $t
     /tmp/ccYazVYd.s:2229   .text.CAN_GetFlagStatus:00000000 CAN_GetFlagStatus
     /tmp/ccYazVYd.s:2373   .text.CAN_ClearFlag:00000000 $t
     /tmp/ccYazVYd.s:2378   .text.CAN_ClearFlag:00000000 CAN_ClearFlag
     /tmp/ccYazVYd.s:2462   .text.CAN_ClearFlag:0000006c $d
     /tmp/ccYazVYd.s:2467   .text.CAN_GetITStatus:00000000 $t
     /tmp/ccYazVYd.s:2472   .text.CAN_GetITStatus:00000000 CAN_GetITStatus
     /tmp/ccYazVYd.s:2908   .text.CheckITStatus:00000000 CheckITStatus
     /tmp/ccYazVYd.s:2722   .text.CAN_GetITStatus:00000190 $d
     /tmp/ccYazVYd.s:2727   .text.CAN_ClearITPendingBit:00000000 $t
     /tmp/ccYazVYd.s:2732   .text.CAN_ClearITPendingBit:00000000 CAN_ClearITPendingBit
     /tmp/ccYazVYd.s:2899   .text.CAN_ClearITPendingBit:000000d8 $d
     /tmp/ccYazVYd.s:2904   .text.CheckITStatus:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
